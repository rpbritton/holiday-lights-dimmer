ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_SensingCSX_LL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_SsCSXPostSingleScan,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_SsCSXPostSingleScan, %function
  24              	CapSense_SsCSXPostSingleScan:
  25              	.LFB8:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_SensingCSX_LL.c"
   1:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \file CapSense_SensingCSX_LL.c
   3:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \version 5.0
   4:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
   5:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This file defines the data structure global variables and provides
   7:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   implementation for the low-level APIs of the CSX part of
   8:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   the Sensing module. The file contains the APIs used for the CSD block
   9:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   initialization, calibration and scanning.
  10:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
  11:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \see CapSense v5.0 Datasheet
  12:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
  13:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *//*****************************************************************************
  14:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Copyright (2016-2017), Cypress Semiconductor Corporation.
  15:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ********************************************************************************
  16:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  17:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * protected by and subject to worldwide patent protection (United States and
  18:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * foreign), United States copyright laws and international treaty provisions.
  19:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  20:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * license to copy, use, modify, create derivative works of, and compile the
  21:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  22:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * custom software in support of licensee product to be used only in conjunction
  23:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  24:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Any reproduction, modification, translation, compilation, or representation of
  25:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * this software except as specified above is prohibited without the express
  26:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * written permission of Cypress.
  27:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
  28:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  29:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  30:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  31:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Cypress reserves the right to make changes without further notice to the
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 2


  32:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * materials described herein. Cypress does not assume any liability arising out
  33:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * of the application or use of any product or circuit described herein. Cypress
  34:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * does not authorize its products for use as critical components in life-support
  35:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * systems where a malfunction or failure may reasonably be expected to result in
  36:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  37:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * support systems application implies that the manufacturer assumes all risk of
  38:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  39:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * limited by and subject to the applicable Cypress software license agreement.
  40:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
  41:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #include <cytypes.h>
  42:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #include "CyLib.h"
  43:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  44:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #include "CapSense_Structure.h"
  45:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #include "CapSense_Configuration.h"
  46:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #include "CapSense_SensingCSX_LL.h"
  47:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #include "CapSense_Sensing.h"
  48:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #include "cyapicallbacks.h"
  49:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  50:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
  51:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  52:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
  53:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function constants
  54:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
  55:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  56:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #define  CapSense_NUM_HALF_CYCLES                       (2u)
  57:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  58:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  59:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
  60:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Defines module variables
  61:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
  62:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  63:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Local variable used to store the Scan period */
  64:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** volatile uint16 CapSense_csxScanPeriod = 0u;
  65:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Local variable used to return raw count from the post scan ISR */
  66:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** volatile uint16 CapSense_csxRawCount = 0u;
  67:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  68:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(CapSense_ENABLE != CapSense_CSDV2)
  69:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     volatile uint32 CapSense_csxRawGarbage = 0u;
  70:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (CapSense_ENABLE != CapSense_CSDV2) */
  71:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  72:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Pointer to Flash structure to hold Tx electrode that was connected previously */
  73:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static CapSense_FLASH_IO_STRUCT const *CapSense_curTxIOPtr;
  74:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Pointer to Flash structure to hold Rx electrode that was connected previously */
  75:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static CapSense_FLASH_IO_STRUCT const *CapSense_curRxIOPtr;
  76:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Local variable to hold total Tx in widget, while scanning all the sensors in widget */
  77:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static uint16 CapSense_curWdgtTotalRx = 0u;
  78:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Local variable to hold total Rx in widget, while scanning all the sensors in widget */
  79:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static uint16 CapSense_curWdgtTotalTx = 0u;
  80:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Flag to indicate that electrodes were connected previously */
  81:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static uint16 CapSense_eleCsxDisconnectFlag = 0u;
  82:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Pointer to Flash structure holding info of sensor to be scanned */
  83:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
  84:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     static CapSense_FLASH_SNS_STRUCT const *CapSense_curGangRxPtr = 0u;
  85:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     static CapSense_FLASH_SNS_STRUCT const *CapSense_curGangTxPtr = 0u;
  86:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif
  87:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  88:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 3


  89:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Module local function declarations
  90:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
  91:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /**
  92:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \cond SECTION_C_INTERNAL
  93:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \addtogroup group_c_internal
  94:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \{
  95:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** */
  96:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  97:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXStartSample(void);
  98:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXPostMultiScan(void);
  99:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXPostSingleScan(void);
 100:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static uint16 CapSense_SsCalcCsxScanPeriod(CapSense_RAM_WD_BASE_STRUCT const *wdgtPtr);
 101:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 102:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(CapSense_ENABLE == CapSense_CSDV2)
 103:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_INLINE static void CapSense_SsCSXStartSampleExt(void);
 104:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif
 105:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 106:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 107:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     static uint32 CapSense_SsCSXOversample(void);
 108:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif
 109:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 110:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 111:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     static void CapSense_SsCSXPostMultiScanGanged(void);
 112:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif
 113:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 114:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Pointer to Pointer to function used to register callback in ISR */
 115:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void (*CapSense_CSXPostScanApiPtr)(void) = &CapSense_SsCSXPostMultiScan;
 116:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /** \}
 117:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \endcond */
 118:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 119:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
 120:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXInitialize
 121:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
 122:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 123:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
 124:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Performs hardware and firmware initialization required for the CSX operation
 125:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   of the CapSense Component.
 126:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 127:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
 128:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function initializes hardware to perform the CSX sensing operation. This
 129:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   function is called by the CapSense_Start() API during the Component
 130:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   initialization. If both CSX and CSD sensing methods are used in the Component,
 131:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   this function is called by the CapSense_SetupWidget() API to change hardware
 132:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   configured for CSD to re-initialize for the CSX sensing.
 133:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 134:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   If the CSD and CSX widgets are used in the Component, it is recommended not to
 135:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   mix the CSD widgets between the CSX widgets, instead, place all CSX widgets in
 136:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   the required scanning order and then place the CSD widgets in the customizer.
 137:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   For the Component API, this action will eliminate the need for changing the hardware
 138:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   configuration for every widget scan and will increase the execution speed
 139:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   in the CapSense_ScanAllWidgets() when the API is called.
 140:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 141:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Similarly, it is recommended to set up and scan all the CSX widgets in such
 142:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   a sequence that the CapSense_SetupWidget() API  shouldn't need
 143:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   hardware  sensing-configuration change.
 144:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 145:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   It is highly not recommended to call this API directly from the application layer.
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 4


 146:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 147:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
 148:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXInitialize(void)
 149:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
 150:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if(CapSense_ENABLE == CapSense_CSDV2)
 151:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint8  interruptState;
 152:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 tmpRegVal;
 153:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 154:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_INTR_PTR,             CapSense_DEFAULT_CSD_INTR_CFG);
 155:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_INTR_SET_PTR,         CapSense_DEFAULT_CSD_INTR_SET_CFG);
 156:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_INTR_MASK_PTR,        CapSense_DEFAULT_CSD_INTR_MASK_CFG);
 157:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_HSCMP_PTR,            CapSense_DEFAULT_CSD_HSCMP_CFG);
 158:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_AMBUF_PTR,            CapSense_DEFAULT_CSD_AMBUF_CFG);
 159:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_REFGEN_PTR,           CapSense_DEFAULT_CSD_REFGEN_CFG);
 160:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CSDCMP_PTR,           CapSense_DEFAULT_CSD_CSDCMP_CFG);
 161:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_IDAC_MOD_PTR,         CapSense_DEFAULT_CSD_IDACA_CFG);
 162:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 163:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if((0u != CapSense_ADC_EN) || (0u != CapSense_IDACB_USED))
 164:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CY_SET_REG32(CapSense_IDAC_COMP_PTR,    CapSense_DEFAULT_CSD_IDACB_CFG);
 165:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif /* (0u != CapSense_ADC_EN) || (0u != CapSense_IDACB_USED) */
 166:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 167:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_RES_PTR,           CapSense_DEFAULT_CSD_SW_RES_CFG);
 168:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SENSE_PERIOD_PTR,     CapSense_DEFAULT_CSD_SENSE_PERIOD_CFG);
 169:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SENSE_DUTY_PTR,       CapSense_DEFAULT_CSD_SENSE_DUTY_CFG);
 170:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR,      CapSense_DEFAULT_CSD_SW_HS_P_SEL_CFG);
 171:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR,      CapSense_DEFAULT_CSD_SW_HS_N_SEL_CFG);
 172:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR,    CapSense_DEFAULT_CSD_SW_SHIELD_SEL_CFG);
 173:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR,   CapSense_DEFAULT_CSD_SW_AMUXBUF_SEL_CFG);
 174:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 175:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 176:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_SW_BYP_SEL_PTR);
 177:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~(CapSense_SW_BYP_SEL_SW_BYA_MASK);
 178:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= CapSense_DEFAULT_CSD_SW_BYP_SEL_CFG;
 179:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_BYP_SEL_PTR,       tmpRegVal);
 180:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 181:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 182:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_CMP_P_SEL_PTR,     CapSense_DEFAULT_CSD_SW_CMP_P_SEL_CFG);
 183:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_CMP_N_SEL_PTR,     CapSense_DEFAULT_CSD_SW_CMP_N_SEL_CFG);
 184:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 185:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 186:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 187:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_SW_REFGEN_SEL_SW_MASK;
 188:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= CapSense_DEFAULT_CSD_SW_REFGEN_SEL_CFG;
 189:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR,    tmpRegVal);
 190:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 191:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 192:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_FW_MOD_SEL_PTR,    CapSense_DEFAULT_CSD_SW_FW_MOD_SEL_CFG);
 193:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR,   CapSense_DEFAULT_CSD_SW_FW_TANK_SEL_CFG);
 194:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_DSI_SEL_PTR,       CapSense_DEFAULT_CSD_SW_DSI_SEL_CFG);
 195:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_TIME_PTR,         CapSense_DEFAULT_CSD_SEQ_TIME_CFG);
 196:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_INIT_CNT_PTR,     CapSense_DEFAULT_CSD_SEQ_INIT_CNT_CFG);
 197:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR,     CapSense_DEFAULT_CSD_SEQ_NORM_CNT_CFG);
 198:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_ADC_CTL_PTR,          CapSense_DEFAULT_CSD_ADC_CTL_CFG);
 199:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_START_PTR,        CapSense_DEFAULT_CSD_SEQ_START_CFG);
 200:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CONFIG_PTR,           CapSense_DEFAULT_CSD_CONFIG_CFG);
 201:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 202:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_BistDischargeExtCapacitors();
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 5


 203:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 204:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 205:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintA_PC_PTR);
 206:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= (~(CapSense_GPIO_PC_MASK << (CapSense_CintA_SHIFT * CapSense_GPIO_PC_BIT_SIZE)
 207:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintA_PC_PTR, tmpRegVal);
 208:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 209:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 210:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 211:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintB_PC_PTR);
 212:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= (~(CapSense_GPIO_PC_MASK << (CapSense_CintB__SHIFT * CapSense_GPIO_PC_BIT_SIZE
 213:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintB_PC_PTR, tmpRegVal);
 214:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 215:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 216:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Connect CintA_tank pin to AMUXBUS-A using HSIOM registers. */
 217:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 218:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
 219:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_CintA_HSIOM_MASK;
 220:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= (CapSense_HSIOM_SEL_AMUXA << CapSense_CintA_HSIOM_SHIFT);
 221:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, tmpRegVal);
 222:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 223:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 224:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Connect CintB to AMUXBUS-A using HSIOM registers. */
 225:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 226:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 227:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_CintB_HSIOM_MASK;
 228:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= (CapSense_HSIOM_SEL_AMUXA << CapSense_CintB_HSIOM_SHIFT);
 229:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, tmpRegVal);
 230:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 231:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 232:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_SsSetModClkClockDivider((uint32)CapSense_dsRam.modCsxClk);
 233:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 234:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN)
 235:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsSetSnsClockDivider((uint32)CapSense_dsRam.snsCsxClk);
 236:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 237:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 238:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Set all IO states to default state */
 239:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_SsSetIOsInDefaultState();
 240:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 241:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
 242:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 trimValue;
 243:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 244:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Set all IO states to default state */
 245:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_SsSetIOsInDefaultState();
 246:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 247:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if(CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 248:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             trimValue = CY_GET_REG32(CapSense_IDAC_PTR);
 249:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             trimValue &= ~(CapSense_IDAC_COMP_CFG_MASK | CapSense_IDAC_FEEDBACK_MODE_MASK);
 250:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CY_SET_REG32(CapSense_IDAC_PTR, trimValue);
 251:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 252:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 253:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Connect CintB to AMUXBUS-A using HSIOM registers. */
 254:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 255:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 256:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue &= ~CapSense_CintB_HSIOM_MASK;
 257:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue |= (CapSense_HSIOM_SEL_AMUXA << CapSense_CintB_HSIOM_SHIFT);
 258:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, trimValue);
 259:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 6


 260:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Set drive mode of CintB pin to High-Z Analog state in PC register
 261:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             and set logic high on DR register. */
 262:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_CintB_PC_PTR);
 263:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue &= ~(CapSense_GPIO_PC_MASK << (CapSense_CintB__SHIFT * CapSense_GPIO_PC_BIT_SIZE 
 264:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintB_PC_PTR, trimValue);
 265:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 266:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_CintB_DR_PTR);
 267:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue &= ~(uint32)((uint32)0x01u << CapSense_CintB__SHIFT);
 268:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintB_DR_PTR, trimValue);
 269:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 270:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Connect CintA_tank pin to AMUXBUS-A using HSIOM registers. */
 271:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
 272:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue &= ~CapSense_CintA_HSIOM_MASK;
 273:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue |= (CapSense_HSIOM_SEL_AMUXA << CapSense_CintA_HSIOM_SHIFT);
 274:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, trimValue);
 275:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 276:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Set drive mode of CintA_tank pin to High-Z Analog state in PC register
 277:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             and set logic high on DR register. */
 278:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_CintA_PC_PTR);
 279:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue &= ~(CapSense_GPIO_PC_MASK << (CapSense_CintA_SHIFT * CapSense_GPIO_PC_BIT_SIZE )
 280:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintA_PC_PTR, trimValue);
 281:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 282:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_CintA_DR_PTR);
 283:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue &= ~(uint32)((uint32)0x01u << CapSense_CintA_SHIFT);
 284:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintA_DR_PTR, trimValue);
 285:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 286:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Connect CSD comparator to CintB via AMUXBUS-A */
 287:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_CONFIG_PTR);
 288:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue |= CapSense_CONFIG_SENSE_INSEL_MASK;
 289:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, trimValue);
 290:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 291:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* If common clocks are enabled for Component, set clock
 292:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             divider for sensor and modulator clocks and start/restart them */
 293:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if (CapSense_CSX_COMMON_TX_CLK_EN == CapSense_ENABLE)
 294:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsSetClockDividers((uint32)CapSense_dsRam.snsCsxClk, (uint32)CapSense_dsRam.mo
 295:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 296:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 297:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Enable CapSense ISR and set ISR for CSX sensing */
 298:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_SsIsrInitialize(&CapSense_CSXScanISR);
 299:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 300:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 301:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 302:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
 303:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXElectrodeCheck
 304:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
 305:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 306:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
 307:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Check if electrodes were previously connected using
 308:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   the CapSense_CSXSetupWidgetExt() API and if yes, disconnect them.
 309:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 310:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
 311:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function checks if CapSense_eleCsxDisconnectFlag is set.
 312:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   If it is set, the function disconnects the previously connected electrode.
 313:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 314:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
 315:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXElectrodeCheck(void)
 316:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 7


 317:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 318:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 numElectrodes;
 319:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN) */
 320:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 321:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     if (0u != CapSense_eleCsxDisconnectFlag)
 322:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
 323:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****        /* Disconnect if electrodes were previous connected by SetupWidgetExt() API */
 324:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 325:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Check ganged sns flag */
 326:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             if (CapSense_GANGED_SNS_MASK == (CapSense_curFlashWdgtPtr->staticConfig & CapSense_GANG
 327:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 328:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* 1. Get number of pins in previous connected Tx electrode
 329:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     3. Get Tx pointer
 330:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     4. Disconnect all Tx */
 331:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes = CapSense_curGangTxPtr->numPins;
 332:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
 333:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 334:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
 335:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 336:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXDisconnectTx(CapSense_curTxIOPtr++);
 337:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes--;
 338:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
 339:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 340:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* 1. Get number of pins in previous connected Rx electrode
 341:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     3. Get Rx pointer
 342:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     4. Disconnect all Rx */
 343:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes = CapSense_curGangRxPtr->numPins;
 344:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
 345:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 346:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
 347:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 348:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXDisconnectRx(CapSense_curRxIOPtr++);
 349:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes--;
 350:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
 351:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
 352:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             else
 353:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 354:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Disconnect if electrodes were previous connected by SetupWidgetExt API */
 355:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXDisconnectTx(CapSense_curTxIOPtr);
 356:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXDisconnectRx(CapSense_curRxIOPtr);
 357:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
 358:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #else
 359:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Disconnect if electrodes were previous connected by SetupWidgetExt API */
 360:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXDisconnectTx(CapSense_curTxIOPtr);
 361:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXDisconnectRx(CapSense_curRxIOPtr);
 362:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 363:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_eleCsxDisconnectFlag = 0u;
 364:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
 365:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 366:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 367:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 368:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
 369:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXSetupWidget
 370:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
 371:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 372:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
 373:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Performs hardware and firmware initialization required for scanning sensors
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 8


 374:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  in a specific widget using the CSX sensing method. This function requires
 375:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  using the CapSense_CSXScan() function to start scanning.
 376:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 377:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
 378:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function initializes the widgets specific common parameters to perform
 379:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  the CSX scanning. The initialization includes the following:
 380:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    1. The CSD_CONFIG register.
 381:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    2. The IDAC register.
 382:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    3. The Sense clock frequency
 383:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    4. The phase alignment of the sense and modulator clocks.
 384:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 385:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function does not connect any specific sensors to the scanning hardware
 386:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  and neither does it start a scanning process. The CapSense_CSXScan()
 387:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  function must be called after initializing the widget to start scanning.
 388:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 389:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function is called when no scanning is in progress. I.e.
 390:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_IsBusy() returns a non-busy status.
 391:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 392:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function is called by the CapSense_SetupWidget() API if the
 393:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  given widget uses the CSX sensing method.
 394:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 395:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 396:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 397:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
 398:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 399:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param widgetId
 400:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
 401:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  initialization required for scanning sensors in the specific widget.
 402:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  A macro for the widget ID can be found in the CapSense Configuration header
 403:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  file defined as CapSense_<WidgetName>_WDGT_ID.
 404:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 405:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
 406:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXSetupWidget(uint32 widgetId)
 407:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
 408:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* variable to access widget details */
 409:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_RAM_WD_BASE_STRUCT * curRamWdgtBasePtr;
 410:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 411:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 412:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 tmpRegVal;
 413:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 snsClkVal;
 414:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_DISABLE == CapSense_CSDV2) */
 415:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 416:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Save the current widget Id */
 417:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_widgetIndex = (uint8)widgetId;
 418:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 419:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSX_E);
 420:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 421:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /*
 422:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *  Check if CSX electrodes were previously connected using
 423:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *  CapSense_CSXSetupWidgetExt API and if yes, disconnect them
 424:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     */
 425:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_CSXElectrodeCheck();
 426:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 427:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Configure hardware block */
 428:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 429:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_curFlashWdgtPtr = &CapSense_dsFlash.wdgtArray[widgetId];
 430:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 9


 431:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         curRamWdgtBasePtr = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_curFlashWdgtPtr->ptr2WdgtRam;
 432:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 433:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN)
 434:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             snsClkVal = (uint32)CapSense_dsRam.snsCsxClk;
 435:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #else
 436:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             snsClkVal = (uint32)curRamWdgtBasePtr->snsClk;
 437:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
 438:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 439:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (uint32)curRamWdgtBasePtr->resolution);
 440:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_csxScanPeriod  = CapSense_SsCalcCsxScanPeriod(curRamWdgtBasePtr);
 441:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 442:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = (uint32)curRamWdgtBasePtr->snsClkSource;
 443:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 444:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         snsClkVal = (snsClkVal - 1uL) & CapSense_SENSE_PERIOD_SENSE_DIV_MASK;
 445:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = (tmpRegVal << CapSense_SENSE_PERIOD_LFSR_SIZE_SHIFT) | snsClkVal;
 446:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, tmpRegVal);
 447:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_SsSetModClkClockDivider((uint32)CapSense_dsRam.modCsxClk);
 448:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
 449:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /*
 450:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         * initialize access pointers for current:
 451:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         *    1. Pointer to widget configuration in Flash
 452:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         *    2. Widget configuration in RAM
 453:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         *    3. Make a local copy of widget index
 454:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         */
 455:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_curFlashWdgtPtr = &CapSense_dsFlash.wdgtArray[widgetId];
 456:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         curRamWdgtBasePtr = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_curFlashWdgtPtr->ptr2WdgtRam;
 457:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 458:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_CONFIG_ENABLE_MASK);
 459:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, (CY_GET_REG32(CapSense_CONFIG_PTR) |
 460:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                 CapSense_CONFIG_MUTUALCAP_EN_MASK     |
 461:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                 CapSense_CONFIG_SENSE_COMP_BW_MASK    |
 462:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                 CapSense_CONFIG_SENSE_COMP_EN_MASK    |
 463:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                 CapSense_CONFIG_SENSE_INSEL_MASK      |
 464:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                 CapSense_CONFIG_REFBUF_EN_MASK        |
 465:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                 CapSense_CONFIG_REFBUF_DRV_MASK));
 466:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 467:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* If individual clocks are enabled for each widget, set clock
 468:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             divider for sensor and modulator clocks and start/restart them. */
 469:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if (CapSense_CSX_COMMON_TX_CLK_EN == CapSense_DISABLE)
 470:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsSetClockDividers((uint32)curRamWdgtBasePtr->snsClk, (uint32)CapSense_dsRam.m
 471:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 472:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 473:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Find scan period */
 474:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_csxScanPeriod = CapSense_SsCalcCsxScanPeriod(curRamWdgtBasePtr);
 475:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 476:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 477:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 478:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
 479:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXSetupWidgetExt
 480:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
 481:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 482:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
 483:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Performs extended initialization for the CSX widget and also performs
 484:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  initialization required for a specific sensor in the widget. This function
 485:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  requires using the CapSense_CSXScan() function to initiate a scan.
 486:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 487:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 10


 488:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function does the same tasks as CapSense_CSXSetupWidget() and
 489:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  also connects a sensor in the widget for scanning. Once this function is
 490:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  called to initialize a widget and a sensor, the CapSense_CSXScanExt()
 491:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  function must be called to scan the sensor.
 492:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 493:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function is called when no scanning is in progress. I.e.
 494:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_IsBusy() returns a non-busy status.
 495:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 496:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 497:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 498:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
 499:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 500:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param widgetId
 501:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
 502:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  initialization required for scanning a specific sensor in a specific widget.
 503:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  A macro for the widget ID can be found in the CapSense Configuration header
 504:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  file defined as CapSense_<WidgetName>_WDGT_ID.
 505:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 506:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param sensorId
 507:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
 508:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  and firmware initialization required for scanning a specific sensor in a
 509:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  specific widget.
 510:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  A macro for the sensor ID within a specified widget can be found in the
 511:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense Configuration header file defined as
 512:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 513:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 514:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
 515:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 516:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXSetupWidgetExt(uint32 widgetId, uint32 sensorId)
 517:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
 518:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 txIndex;
 519:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 rxIndex;
 520:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 521:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 522:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint16 numElectrodes;
 523:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN) */
 524:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 525:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Initialize widget */
 526:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_CSXSetupWidget(widgetId);
 527:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_sensorIndex = (uint8)sensorId;
 528:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 529:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* initialize sensor data structure pointer to appropriate address */
 530:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr = CapSense_curFlashWdgtPtr->ptr2SnsRam;
 531:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr = &CapSense_curRamSnsPtr[sensorId];
 532:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 533:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 534:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if (0u != CapSense_curRamSnsPtr->subConvNum)
 535:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 536:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 537:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 538:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /*
 539:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *  Find Tx and Rx index for given snsIndex
 540:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *    rxIndex = sensorId / TxCount
 541:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *    txIndex = sensorId % TxCount
 542:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     */
 543:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     rxIndex = sensorId /CapSense_curFlashWdgtPtr->numRows;
 544:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     txIndex = sensorId % CapSense_curFlashWdgtPtr->numRows;
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 11


 545:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 546:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* If widget is APA, find node (Tx/Rx) to be connected for scanning */
 547:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 548:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if (CapSense_GANGED_SNS_MASK == (CapSense_curFlashWdgtPtr->staticConfig & CapSense_GANGED_S
 549:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 550:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /*
 551:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  1. Get access to Rx sensor pointer (Rx = Base + rxIndex).
 552:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  2. Get number of Rx electrodes
 553:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  3. Get Rx pointer
 554:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  4. Connect all Rx
 555:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             */
 556:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curGangRxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
 557:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curGangRxPtr += rxIndex;
 558:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             numElectrodes = CapSense_curGangRxPtr->numPins;
 559:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
 560:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 561:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             do
 562:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 563:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXConnectRx(CapSense_curRxIOPtr++);
 564:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes--;
 565:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             } while (0u != numElectrodes);
 566:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 567:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /*
 568:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  1. Get access to Tx sensor pointer (Tx = Base + NumberRx + TxIndex).
 569:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  2. Get number of Tx electrodes
 570:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  3. Get Tx pointer
 571:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  4. Connect all Tx
 572:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             */
 573:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curGangTxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
 574:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curGangTxPtr += (CapSense_curFlashWdgtPtr->numCols + txIndex);
 575:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 576:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             numElectrodes = CapSense_curGangTxPtr->numPins;
 577:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
 578:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 579:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             do
 580:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 581:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXConnectTx(CapSense_curTxIOPtr++);
 582:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes--;
 583:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }while (0u != numElectrodes);
 584:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 585:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Set callback to scan connected ganged sensor only */
 586:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXPostScanApiPtr = &CapSense_SsCSXPostSingleScan;
 587:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 588:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         else
 589:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif  /* (CapSense_ENABLE == CapSense_CSD_CSX_EN) */
 590:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 591:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /*
 592:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  If no ganged sensor in Component OR current widget no contains ganged sns, then:
 593:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *    1. Find Rx pointer: Rx = Base address + RxIndex
 594:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *    2. Find Tx pointer: Tx = Base address + (total Rx + TxIndex)
 595:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             */
 596:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFlashWdgtPtr->ptr2S
 597:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRxIOPtr = &CapSense_curRxIOPtr[rxIndex];
 598:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 599:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curTxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFlashWdgtPtr->ptr2S
 600:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curTxIOPtr = &CapSense_curTxIOPtr[(CapSense_curFlashWdgtPtr->numCols + txIndex
 601:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 12


 602:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Connect Tx and Rx IOs for scan ad set flag to indicate that IOs should be disconnect
 603:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXConnectTx(CapSense_curTxIOPtr);
 604:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXConnectRx(CapSense_curRxIOPtr);
 605:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_eleCsxDisconnectFlag = CapSense_DISCONNECT_IO_FLAG;
 606:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 607:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Set callback to scan all the sensors in widget */
 608:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXPostScanApiPtr = &CapSense_SsCSXPostSingleScan;
 609:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 610:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 611:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 612:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
 613:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 614:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 615:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
 616:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXScan
 617:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
 618:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 619:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
 620:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function initiates a scan for the sensors of the widget initialized by
 621:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  the CapSense_CSXSetupWidget() function.
 622:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 623:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
 624:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function performs scanning of all the sensors in the widget configured by
 625:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  the CapSense_CSXSetupWidget() function. It does the following tasks:
 626:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    1. Connects the first sensor of the widget.
 627:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    2. Initializes an interrupt callback function to initialize a scan of the
 628:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *       next sensors in a widget.
 629:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    3. Starts scanning for the first sensor in the widget.
 630:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 631:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function is called by the CapSense_Scan() API if the given
 632:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  widget uses the CSX sensing method.
 633:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 634:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 635:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 636:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
 637:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 638:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function is called when no scanning is in progress. I.e.
 639:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_IsBusy() returns a non-busy status. The widget must be
 640:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  preconfigured by the CapSense_CSXSetupWidget() function if any other
 641:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  widget was previously scanned or any other type of scan functions were used.
 642:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 643:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
 644:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 645:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXScan(void)
 646:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
 647:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 648:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 numElectrodes;
 649:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
 650:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 651:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 snsIndex = 0u;
 652:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 snsNum;
 653:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
 654:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 655:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_sensorIndex = 0u;
 656:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 657:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* initialize pointer to access sensor RAM elements */
 658:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr = CapSense_curFlashWdgtPtr->ptr2SnsRam;
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 13


 659:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 660:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 661:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Loop through the sensors until non-skipped is found */
 662:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         snsNum = CapSense_curFlashWdgtPtr->totalNumSns;
 663:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         while ((snsIndex < snsNum) && (CapSense_curRamSnsPtr->subConvNum == 0u))
 664:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 665:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Increment sensor pointers */
 666:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRamSnsPtr++;
 667:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_sensorIndex++;
 668:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             snsIndex++;
 669:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 670:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /*
 671:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         *  Calculate total sensor to be scanned. If buttons, one Tx and an Rx for each sensor
 672:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         *  if Matrix button or Touchpad, M x N rule applies
 673:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         */
 674:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_curWdgtTotalTx = (uint16)(CapSense_curFlashWdgtPtr->numRows - (snsIndex % CapSense
 675:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_curWdgtTotalRx  = (uint16)(CapSense_curFlashWdgtPtr->numCols - (snsIndex / CapSens
 676:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 677:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Scan sensor if it's index within a valid range otherwise do nothing as all the sensors a
 678:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if (snsIndex < snsNum)
 679:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 680:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 681:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 if ((CapSense_curFlashWdgtPtr->staticConfig & CapSense_GANGED_SNS_MASK) != 0u)
 682:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 683:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Connect all Rx electrodes */
 684:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curGangRxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
 685:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curGangRxPtr += snsIndex /CapSense_curFlashWdgtPtr->numRows;
 686:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes = CapSense_curGangRxPtr->numPins;
 687:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
 688:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     do
 689:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
 690:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectRx(CapSense_curRxIOPtr++);
 691:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes--;
 692:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
 693:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 694:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Connect all Tx electrodes */
 695:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curGangTxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
 696:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curGangTxPtr += (CapSense_curFlashWdgtPtr->numCols + snsIndex % CapSen
 697:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes = CapSense_curGangTxPtr->numPins;
 698:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
 699:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     do
 700:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
 701:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectTx(CapSense_curTxIOPtr++);
 702:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes--;
 703:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }while (0u != numElectrodes);
 704:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Assign callback to ISR */
 705:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXPostScanApiPtr = &CapSense_SsCSXPostMultiScanGanged;
 706:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
 707:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 else
 708:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN) */
 709:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 710:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Find Rx pointer: Rx = Base_address + SnsIndex / total_Tx */
 711:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFlashWdgtPtr->p
 712:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRxIOPtr += (snsIndex / CapSense_curFlashWdgtPtr->numRows);
 713:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Find Tx pointer: Tx = Base_address + total_Rx + SnsIndex % total_Tx */
 714:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFlashWdgtPtr->p
 715:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr += CapSense_curFlashWdgtPtr->numCols;
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 14


 716:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr += (snsIndex % CapSense_curFlashWdgtPtr->numRows);
 717:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Connect Tx and Rx electrodes for scan */
 718:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXConnectTx(CapSense_curTxIOPtr);
 719:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXConnectRx(CapSense_curRxIOPtr);
 720:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Set callback to scan all the sensors in widget */
 721:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXPostScanApiPtr = &CapSense_SsCSXPostMultiScan;
 722:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
 723:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 724:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Reset multi-frequency scan channel if enabled */
 725:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MULTI_FREQ_SCAN_EN == CapSense_ENABLE)
 726:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 727:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
 728:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 729:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Set scan status, enter critical section and initiate scan */
 730:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_dsRam.status |= CapSense_SW_STS_BUSY;
 731:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 732:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if(CapSense_ENABLE == CapSense_CSDV2) &&\
 733:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                (CapSense_ENABLE != CapSense_BLOCK_OFF_AFTER_SCAN_EN) &&\
 734:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                (CapSense_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 735:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CyDelayUs(CapSense_CSX_ANALOG_STARTUP_DELAY_US);
 736:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
 737:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsCSXStartSample();
 738:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 739:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 740:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 741:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 742:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /*
 743:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         *  Calculate total sensor to be scanned. If buttons, one Tx and an Rx for each sensor
 744:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         *  if Matrix button or Touchpad, M x N rule applies
 745:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         */
 746:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_curWdgtTotalTx = CapSense_curFlashWdgtPtr->numRows;
 747:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_curWdgtTotalRx  = CapSense_curFlashWdgtPtr->numCols;
 748:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 749:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* If Component contains CSX ganged sensor, then check if widget contains ganged sensor */
 750:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if (CapSense_CSX_GANGED_SNS_EN == 1u)
 751:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             if ((CapSense_curFlashWdgtPtr->staticConfig & CapSense_GANGED_SNS_MASK) != 0u)
 752:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 753:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /*
 754:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  1. Get sns pointer for first Rx
 755:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  2. Get number of Rx pin
 756:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  3. Get pointer to the Rx pin
 757:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  4. Connect all Rx pins
 758:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 */
 759:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curGangRxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
 760:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes = CapSense_curGangRxPtr->numPins ;
 761:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
 762:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
 763:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 764:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXConnectRx(CapSense_curRxIOPtr++);
 765:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes--;
 766:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
 767:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 768:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /*
 769:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  1. Get sns pointer for first Tx (Tx = Base + number of Rx).
 770:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  2. Get number of Tx electrodes
 771:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  3. Get pointer the Tx electrode
 772:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  4. Connect all Tx
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 15


 773:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 */
 774:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curGangTxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
 775:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curGangTxPtr += CapSense_curFlashWdgtPtr->numCols;
 776:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes = CapSense_curGangTxPtr->numPins ;
 777:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
 778:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 779:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
 780:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 781:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXConnectTx(CapSense_curTxIOPtr++);
 782:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes--;
 783:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }while (0u != numElectrodes);
 784:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 785:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Assign callback to ISR */
 786:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXPostScanApiPtr = &CapSense_SsCSXPostMultiScanGanged;
 787:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 788:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
 789:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             else
 790:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 791:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 792:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /*
 793:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  If no ganged sensor in the Component OR current widget contains no ganged sns, t
 794:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *    1. Find Rx pointer: Rx = Base address.
 795:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *    2. Find Tx pointer: Tx = Base address + total Rx
 796:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 */
 797:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFlashWdgtPtr->p
 798:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = CapSense_curRxIOPtr;
 799:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = &CapSense_curTxIOPtr[(CapSense_curFlashWdgtPtr->numCols)];
 800:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 801:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Connect first Tx and first Rx IOs for scan */
 802:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXConnectTx(CapSense_curTxIOPtr);
 803:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXConnectRx(CapSense_curRxIOPtr);
 804:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 805:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Set callback to scan all the sensors in widget */
 806:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXPostScanApiPtr = &CapSense_SsCSXPostMultiScan;
 807:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
 808:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 809:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Reset multi-frequency scan channel if enabled */
 810:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MULTI_FREQ_SCAN_EN == CapSense_ENABLE)
 811:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 812:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
 813:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 814:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Set scan status, enter critical section and initiate scan */
 815:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_dsRam.status |= CapSense_SW_STS_BUSY;
 816:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 817:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if(CapSense_ENABLE == CapSense_CSDV2) &&\
 818:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****            (CapSense_ENABLE != CapSense_BLOCK_OFF_AFTER_SCAN_EN) &&\
 819:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****            (CapSense_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 820:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CyDelayUs(CapSense_CSX_ANALOG_STARTUP_DELAY_US);
 821:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 822:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_SsCSXStartSample();
 823:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 824:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 825:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 826:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 827:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
 828:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXScanExt()
 829:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 16


 830:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 831:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
 832:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Starts the CSX conversion on the preconfigured sensor. This function requires
 833:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  using the CapSense_CSXSetupWidgetExt() function to set up a
 834:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  widget.
 835:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 836:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
 837:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function performs single scanning of one sensor in the widget configured
 838:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  by the CapSense_CSXSetupWidgetExt() function. It does the following
 839:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  tasks:
 840:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    1. Sets a busy flag in the CapSense_dsRam structure.
 841:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    2. Configures the Tx clock frequency.
 842:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    3. Configures the Modulator clock frequency.
 843:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    4. Configures the IDAC value.
 844:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    5. Starts single scanning.
 845:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 846:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 847:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 848:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example). This
 849:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  function is called when no scanning is in progress. I.e.
 850:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_IsBusy() returns a non-busy status.
 851:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 852:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  The sensor must be preconfigured by using the
 853:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_CSXSetupWidgetExt() API prior to calling this function.
 854:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  The sensor remains ready for the next scan if a previous scan was triggered
 855:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  by using the CapSense_CSXScanExt() function. In this case, calling
 856:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_CSXSetupWidgetExt() is not required every time before the
 857:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_CSXScanExt() function. If a previous scan was triggered in
 858:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  any other way - CapSense_Scan(), CapSense_ScanAllWidgets()
 859:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  or CapSense_RunTuner() - (see the CapSense_RunTuner() function
 860:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  description for more details), the sensor must be preconfigured again by
 861:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  using the CapSense_CSXSetupWidgetExt() API prior to calling the
 862:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_CSXScanExt() function.
 863:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 864:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  If disconnection of the sensors is required after calling
 865:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_CSXScanExt(), the CapSense_CSXDisconnectTx() and
 866:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_CSXDisconnectRx() APIs can be used.
 867:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 868:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
 869:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 870:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXScanExt(void)
 871:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
 872:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Reset multi-frequency scan channel if enabled */
 873:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_MULTI_FREQ_SCAN_EN == CapSense_ENABLE)
 874:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 875:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
 876:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 877:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 878:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if (0u != CapSense_curRamSnsPtr->subConvNum)
 879:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 880:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Set busy flag and start conversion */
 881:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_dsRam.status |= CapSense_SW_STS_BUSY;
 882:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 883:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if(CapSense_ENABLE == CapSense_CSDV2) &&\
 884:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                (CapSense_ENABLE != CapSense_BLOCK_OFF_AFTER_SCAN_EN) &&\
 885:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                (CapSense_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 886:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CyDelayUs(CapSense_CSX_ANALOG_STARTUP_DELAY_US);
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 17


 887:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
 888:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsCSXStartSample();
 889:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 890:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
 891:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Set busy flag and start conversion */
 892:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_dsRam.status |= CapSense_SW_STS_BUSY;
 893:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 894:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if(CapSense_ENABLE == CapSense_CSDV2) &&\
 895:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****            (CapSense_ENABLE != CapSense_BLOCK_OFF_AFTER_SCAN_EN) &&\
 896:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****            (CapSense_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 897:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CyDelayUs(CapSense_CSX_ANALOG_STARTUP_DELAY_US);
 898:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 899:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_SsCSXStartSample();
 900:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 901:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 902:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 903:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 904:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
 905:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXPostMultiScan
 906:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
 907:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 908:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
 909:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   ISR function implements the multiple-sensor scanning for un-ganged CSX widgets.
 910:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function is called by the Component ISR only, it should not be used by
 911:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   the application layer.
 912:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 913:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
 914:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 915:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXPostMultiScan(void)
 916:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
 917:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_ENTRY_CALLBACK
 918:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_EntryCallback();
 919:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_ENTRY_CALLBACK */
 920:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 921:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Copy scan result into sensor raw count array */
 922:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] = \
 923:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                              (CapSense_csxScanPeriod - CapSense_csxRawCount);
 924:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 925:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 926:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Increment multi frequency scan index if all channels are not scanned */
 927:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 928:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 929:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Change multi-frequency channel and start sample */
 930:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_scanFreqIndex++;
 931:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 932:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 933:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_SsChangeImoFreq((uint32)CapSense_scanFreqIndex);
 934:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #else
 935:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_SsChangeClkFreq((uint32)CapSense_scanFreqIndex);
 936:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 937:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 938:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsCSXStartSample();
 939:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 940:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         else
 941:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
 942:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 943:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MULTI_FREQ_SCAN_EN == CapSense_ENABLE)
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 18


 944:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* All channels are scanned. Reset the multi frequency scan channel */
 945:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 946:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 947:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 948:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 949:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #else
 950:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 951:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 952:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 953:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
 954:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 955:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 956:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Disconnect Tx/Rx electrodes of previously scanned sensor as preparation for next
 957:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXDisconnectTx(CapSense_curTxIOPtr);
 958:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXDisconnectRx(CapSense_curRxIOPtr);
 959:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 960:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Increment sensor until non-skipped is found */
 961:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
 962:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 963:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Increment sensor index to configure next sensor in widget */
 964:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_sensorIndex++;
 965:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 966:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Increment sensor pointers */
 967:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr++;
 968:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curWdgtTotalTx--;
 969:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_curWdgtTotalTx > 0u)
 970:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
 971:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curTxIOPtr++;
 972:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
 973:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     else
 974:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
 975:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curWdgtTotalRx--;
 976:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         if (CapSense_curWdgtTotalRx > 0u)
 977:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
 978:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curRxIOPtr++;
 979:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curWdgtTotalTx  = CapSense_curFlashWdgtPtr->numRows;
 980:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curTxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFla
 981:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curTxIOPtr = & CapSense_curTxIOPtr[(CapSense_curFlashWdgtPtr->
 982:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
 983:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
 984:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while ((CapSense_curWdgtTotalRx != 0u) && (CapSense_curRamSnsPtr->subConvNum == 0
 985:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 986:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Perform the next scan or switch to the next widget */
 987:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 if(CapSense_curWdgtTotalRx != 0u)
 988:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 989:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Connect Tx/Rx electrodes for the next scan */
 990:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXConnectTx(CapSense_curTxIOPtr);
 991:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXConnectRx(CapSense_curRxIOPtr);
 992:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Reset scan result holder, and initiate scan */
 993:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsCSXStartSample();
 994:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
 995:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 else
 996:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 997:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Call scan next widget API if requested, if not, complete scan */
 998:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_requestScanAllWidget != 0u)
 999:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1000:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_SsPostAllWidgetsScan();
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 19


1001:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1002:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     else
1003:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1004:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_dsRam.scanCounter++;
1005:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1006:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1007:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1008:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #else /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1009:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1010:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /*
1011:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  Disconnect Tx electrodes of previously scanned sensor as
1012:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  preparation for next sensor scan
1013:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 */
1014:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXDisconnectTx (CapSense_curTxIOPtr);
1015:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1016:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Increment sensor index to configure next sensor in widget */
1017:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_sensorIndex++;
1018:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1019:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /*
1020:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  Initiate scan for next sensor in widget, if all the sensors in
1021:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  widget are not scanned
1022:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 */
1023:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curWdgtTotalTx--;
1024:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 if (CapSense_curWdgtTotalTx > 0u)
1025:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1026:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /*
1027:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     *  1. Increment pointer to next Tx
1028:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     *  2. Connect next Rx for scan
1029:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     *  3. Increment pointer to sns data
1030:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     */
1031:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curTxIOPtr++;
1032:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXConnectTx (CapSense_curTxIOPtr);
1033:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr++;
1034:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1035:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Reset scan result holder, and initiate scan */
1036:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsCSXStartSample();
1037:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1038:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1039:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Check if all Rx are looped through */
1040:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 else
1041:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1042:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curWdgtTotalRx--;
1043:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_curWdgtTotalRx > 0u)
1044:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1045:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /*
1046:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  1. Disconnect current Rx electrode
1047:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  2. Connect next Rx electrode
1048:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  3. Re-initialize total Tx to be scanned per Rx
1049:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  4. Find first Tx electrode again
1050:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  5. Connect first Tx electrode
1051:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         */
1052:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXDisconnectRx(CapSense_curRxIOPtr);
1053:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRxIOPtr++;
1054:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectRx(CapSense_curRxIOPtr);
1055:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curWdgtTotalTx  = CapSense_curFlashWdgtPtr->numRows;
1056:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curTxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFlashWd
1057:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curTxIOPtr = & CapSense_curTxIOPtr[(CapSense_curFlashWdgtPtr->numC
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 20


1058:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectTx(CapSense_curTxIOPtr);
1059:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1060:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Increment RAM sensor pointer pointer */
1061:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRamSnsPtr++;
1062:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1063:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Initiate sample */
1064:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_SsCSXStartSample();
1065:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1066:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     else
1067:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1068:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* If all the sensors are scanned, disconnect Tx */
1069:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXDisconnectRx(CapSense_curRxIOPtr);
1070:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1071:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Call scan next widget API if requested, if not, complete scan */
1072:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         if (CapSense_requestScanAllWidget != 0u)
1073:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1074:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_SsPostAllWidgetsScan();
1075:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
1076:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         else
1077:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1078:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             /*
1079:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             *  All pending scans completed,
1080:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             *    1. update the counter to indicat same
1081:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             *    2. Clear busy state as scanning is completed
1082:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             */
1083:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_dsRam.scanCounter++;
1084:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1085:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
1086:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1087:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1088:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1089:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
1090:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1091:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_EXIT_CALLBACK
1092:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_ExitCallback();
1093:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_EXIT_CALLBACK */
1094:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1095:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1096:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1097:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1098:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXPostMultiScanGanged
1099:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1100:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1101:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1102:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   The ISR function implements the multiple-sensor scanning for ganged CSX widgets.
1103:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function is called by the Component ISR only, should not be used by
1104:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   the application layer.
1105:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1106:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1107:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   The ISR function implements the multiple-sensor scanning for ganged CSX widgets.
1108:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function is called by the Component ISR only, should not be used by
1109:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   the application layer.
1110:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1111:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1112:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if (CapSense_CSX_GANGED_SNS_EN == 1u)
1113:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1114:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXPostMultiScanGanged(void)
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 21


1115:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1116:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 numElectrodes;
1117:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1118:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_ENTRY_CALLBACK
1119:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_EntryCallback();
1120:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_ENTRY_CALLBACK */
1121:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1122:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Copy scan result into sensor raw count array */
1123:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] = \
1124:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     (CapSense_csxScanPeriod - CapSense_csxRawCount);
1125:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1126:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1127:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Increment multi frequency scan index if all channels are not scanned */
1128:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
1129:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
1130:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Change multi-frequency channel and start sample */
1131:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_scanFreqIndex++;
1132:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1133:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
1134:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_SsChangeImoFreq((uint32)CapSense_scanFreqIndex);
1135:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #else
1136:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_SsChangeClkFreq((uint32)CapSense_scanFreqIndex);
1137:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
1138:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1139:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsCSXStartSample();
1140:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
1141:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         else
1142:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
1143:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
1144:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MULTI_FREQ_SCAN_EN == CapSense_ENABLE)
1145:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* All channels are scanned. Reset the multi frequency scan channel */
1146:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
1147:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1148:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
1149:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
1150:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #else
1151:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
1152:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
1153:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1154:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
1155:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1156:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1157:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Disconnect Tx electrodes of previously scanned sensor as preparation for next se
1158:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes = CapSense_curGangTxPtr->numPins;
1159:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
1160:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
1161:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1162:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXDisconnectTx(CapSense_curTxIOPtr++);
1163:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes--;
1164:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
1165:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Disconnect Rx electrodes of previously scanned sensor as preparation for next se
1166:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes = CapSense_curGangRxPtr->numPins;
1167:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
1168:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
1169:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1170:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXDisconnectRx(CapSense_curRxIOPtr++);
1171:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes--;
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 22


1172:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
1173:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1174:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Increment sensor until non-skipped is found */
1175:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
1176:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1177:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Increment sensor index to configure next sensor in widget */
1178:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_sensorIndex++;
1179:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1180:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Increment RAM sensor pointer */
1181:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr++;
1182:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curWdgtTotalTx--;
1183:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_curWdgtTotalTx > 0u)
1184:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1185:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curGangTxPtr++;
1186:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1187:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     else
1188:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1189:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Check if all Rx are scanned, if not, initiate scan for next Rx */
1190:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curWdgtTotalRx--;
1191:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         if (CapSense_curWdgtTotalRx > 0u)
1192:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1193:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curGangRxPtr++;
1194:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curWdgtTotalTx = CapSense_curFlashWdgtPtr->numRows;
1195:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curGangTxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
1196:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curGangTxPtr += CapSense_curFlashWdgtPtr->numCols;
1197:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
1198:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1199:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while ((CapSense_curWdgtTotalRx != 0u) && (CapSense_curRamSnsPtr->subConvNum == 0
1200:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1201:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 if(CapSense_curWdgtTotalRx != 0u)
1202:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1203:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Connect Tx electrodes for the next scan */
1204:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes = CapSense_curGangTxPtr->numPins;
1205:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
1206:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     do
1207:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1208:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectTx(CapSense_curTxIOPtr++);
1209:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes--;
1210:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
1211:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Connect Tx electrodes for the next scan */
1212:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes = CapSense_curGangRxPtr->numPins ;
1213:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
1214:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     do
1215:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1216:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectRx(CapSense_curRxIOPtr++);
1217:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes--;
1218:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
1219:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Reset scan result holder, and initiate scan */
1220:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsCSXStartSample();
1221:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1222:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 else
1223:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1224:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Call scan next widget API if requested, if not, complete scan */
1225:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_requestScanAllWidget != 0u)
1226:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1227:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_SsPostAllWidgetsScan();
1228:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 23


1229:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     else
1230:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1231:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_dsRam.scanCounter++;
1232:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1233:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1234:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1235:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #else /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1236:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1237:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Disconnect ALL pins of previously scanned Tx */
1238:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes = CapSense_curGangTxPtr->numPins ;
1239:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
1240:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
1241:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1242:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXDisconnectTx (CapSense_curTxIOPtr++);
1243:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes--;
1244:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
1245:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1246:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Increment sensor index to configure next sensor in widget */
1247:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_sensorIndex++;
1248:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1249:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Check if all Tx are scanned, if not, initiate scan for next Tx */
1250:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curWdgtTotalTx--;
1251:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 if (CapSense_curWdgtTotalTx > 0u)
1252:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1253:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /*
1254:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     *  1. Find pointer of next Tx (ganged)
1255:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     *  2. Connect all Tx pins
1256:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     */
1257:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curGangTxPtr++;
1258:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes = CapSense_curGangTxPtr->numPins ;
1259:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
1260:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     do
1261:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1262:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectTx(CapSense_curTxIOPtr++);
1263:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes--;
1264:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
1265:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1266:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Increment RAM pointer to next sensor */
1267:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr++;
1268:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1269:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Reset scan result holder and initiate scan */
1270:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsCSXStartSample();
1271:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1272:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 else
1273:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1274:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Check if all Rx are scanned, if not, initiate scan for next Rx */
1275:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curWdgtTotalRx--;
1276:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_curWdgtTotalRx > 0u)
1277:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1278:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* 1. Disconnect current Rx ALL pins */
1279:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes = CapSense_curGangRxPtr->numPins ;
1280:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
1281:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         do
1282:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1283:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_CSXDisconnectRx(CapSense_curRxIOPtr++);
1284:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             numElectrodes--;
1285:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 24


1286:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1287:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* 2. Connect next Rx ALL pins */
1288:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curGangRxPtr++;
1289:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes = CapSense_curGangRxPtr->numPins ;
1290:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
1291:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         do
1292:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1293:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_CSXConnectRx(CapSense_curRxIOPtr++);
1294:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             numElectrodes--;
1295:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
1296:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1297:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /*
1298:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  3. Re-initialize total Tx to be scanned per Rx
1299:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  4. Find first Tx  again
1300:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  5. Connect first Tx ALL pins
1301:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         */
1302:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curWdgtTotalTx = CapSense_curFlashWdgtPtr->numRows;
1303:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curGangTxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
1304:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curGangTxPtr += CapSense_curFlashWdgtPtr->numCols;
1305:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1306:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* 6. Connect Tx ALL pins */
1307:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes = CapSense_curGangTxPtr->numPins ;
1308:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
1309:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         do
1310:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1311:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_CSXConnectTx(CapSense_curTxIOPtr++);
1312:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             numElectrodes--;
1313:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
1314:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1315:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Increment RAM pointer to next sensor */
1316:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRamSnsPtr++;
1317:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1318:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Reset scan result holder and initiate scan */
1319:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_SsCSXStartSample();
1320:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1321:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     else
1322:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1323:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Disconnect ALL electrodes of previously scanned Rx */
1324:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes = CapSense_curGangRxPtr->numPins ;
1325:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
1326:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         do
1327:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1328:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_CSXDisconnectRx(CapSense_curRxIOPtr++);
1329:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             numElectrodes--;
1330:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
1331:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1332:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Call scan next widget API if requested, if not, complete scan */
1333:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         if (CapSense_requestScanAllWidget != 0u)
1334:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1335:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_SsPostAllWidgetsScan();
1336:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
1337:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         else
1338:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1339:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             /*
1340:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             *  All pending scans completed,
1341:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             *    1. update the counter to indicate same
1342:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             *    2. Clear busy state as scanning is completed
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 25


1343:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             */
1344:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_dsRam.scanCounter++;
1345:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1346:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
1347:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1348:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1349:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1350:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
1351:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1352:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_EXIT_CALLBACK
1353:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_ExitCallback();
1354:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_EXIT_CALLBACK */
1355:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1356:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1357:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif  /* (CapSense_CSX_GANGED_SNS_EN == 1u) */
1358:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1359:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1360:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXPostSingleScan
1361:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1362:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1363:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1364:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   The ISR function for single-sensor scanning implementation.
1365:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1366:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1367:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function is used by CapSense ISR in the CSX scanning mode to implement
1368:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   the single-sensor scanning.
1369:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function should not be used by the application layer.
1370:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1371:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1372:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1373:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXPostSingleScan(void)
1374:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
  27              		.loc 1 1374 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
1375:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_ENTRY_CALLBACK
1376:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_EntryCallback();
1377:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_ENTRY_CALLBACK */
1378:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1379:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /*
1380:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     * Copy scan result into sensor raw count array and clear busy flag
1381:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *    No sensor is connected or disconnected in this function
1382:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *    Calling CapSense_ScanExt from application would perform
1383:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *    one more scan of same sensor. Specifically for low-power mode.
1384:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     */
1385:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] =
  32              		.loc 1 1385 0
  33 0000 094B     		ldr	r3, .L2
  34 0002 1868     		ldr	r0, [r3]
  35 0004 094B     		ldr	r3, .L2+4
  36 0006 1B78     		ldrb	r3, [r3]
  37 0008 0949     		ldr	r1, .L2+8
  38 000a 0A88     		ldrh	r2, [r1]
  39 000c 4988     		ldrh	r1, [r1, #2]
  40 000e 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 26


  41 0010 521A     		subs	r2, r2, r1
  42 0012 1A52     		strh	r2, [r3, r0]
1386:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         (CapSense_csxScanPeriod - CapSense_csxRawCount);
1387:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1388:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1389:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Increment multi frequency scan index if all channels are not scanned */
1390:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
1391:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
1392:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Change multi-frequency channel and start sample */
1393:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_scanFreqIndex++;
1394:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1395:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
1396:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_SsChangeImoFreq((uint32)CapSense_scanFreqIndex);
1397:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #else
1398:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_SsChangeClkFreq((uint32)CapSense_scanFreqIndex);
1399:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
1400:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1401:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsCSXStartSample();
1402:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
1403:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         else
1404:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
1405:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
1406:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MULTI_FREQ_SCAN_EN == CapSense_ENABLE)
1407:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* All channels are scanned. Reset the multi frequency scan channel */
1408:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
1409:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1410:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
1411:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
1412:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #else
1413:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
1414:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
1415:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1416:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
1417:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /*
1418:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             * All pending scans completed,
1419:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *   1. Update the counter to indicate same
1420:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *   2. Clear busy state as scanning is completed
1421:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             */
1422:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_dsRam.scanCounter++;
  43              		.loc 1 1422 0
  44 0014 074B     		ldr	r3, .L2+12
  45 0016 1A89     		ldrh	r2, [r3, #8]
  46 0018 0132     		adds	r2, r2, #1
  47 001a 1A81     		strh	r2, [r3, #8]
1423:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
  48              		.loc 1 1423 0
  49 001c DA68     		ldr	r2, [r3, #12]
  50 001e 8021     		movs	r1, #128
  51 0020 8A43     		bics	r2, r1
  52 0022 DA60     		str	r2, [r3, #12]
1424:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
1425:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1426:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_EXIT_CALLBACK
1427:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_ExitCallback();
1428:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_EXIT_CALLBACK */
1429:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
  53              		.loc 1 1429 0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 27


  54              		@ sp needed
  55 0024 7047     		bx	lr
  56              	.L3:
  57 0026 C046     		.align	2
  58              	.L2:
  59 0028 00000000 		.word	CapSense_curRamSnsPtr
  60 002c 00000000 		.word	CapSense_scanFreqIndex
  61 0030 00000000 		.word	.LANCHOR0
  62 0034 00000000 		.word	CapSense_dsRam
  63              		.cfi_endproc
  64              	.LFE8:
  65              		.size	CapSense_SsCSXPostSingleScan, .-CapSense_SsCSXPostSingleScan
  66              		.section	.text.CapSense_SsCalcCsxScanPeriod,"ax",%progbits
  67              		.align	2
  68              		.code	16
  69              		.thumb_func
  70              		.type	CapSense_SsCalcCsxScanPeriod, %function
  71              	CapSense_SsCalcCsxScanPeriod:
  72              	.LFB16:
1430:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1431:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1432:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXCalibrateWidget
1433:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1434:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1435:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1436:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calibrates the raw count values of all the sensors/nodes in a CSX widget.
1437:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1438:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1439:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Performs a successive approximation search algorithm to find appropriate
1440:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  IDAC values for sensors in the specified widget that provides a raw count
1441:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  to the level specified by the target parameter.
1442:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1443:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function is available when the CSX Enable IDAC auto-calibration
1444:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  parameter is enabled.
1445:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1446:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param widgetId
1447:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the ID number of the CSX widget to calibrate its raw count.
1448:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  A macro for the widget ID can be found in the
1449:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense Configuration header file defined as
1450:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_<WidgetName>_WDGT_ID.
1451:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1452:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param target
1453:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the calibration target in percentages of the maximum raw count.
1454:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1455:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1456:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN)
1457:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1458:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXCalibrateWidget(uint32 widgetId, uint16 target)
1459:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1460:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Variable to calculate raw count target */
1461:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 rawTarget;
1462:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Counter for loop execution */
1463:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 totalSns;
1464:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Counter for loop execution */
1465:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 calibrationIndex;
1466:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1467:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Currently used IDAC-bit */
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 28


1468:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint8 curIdacMask = (1u << (CapSense_CSX_IDAC_BITS_USED-1u));
1469:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Next used IDAC-bit */
1470:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint8 nextIdacMask = (curIdacMask >> 1u);
1471:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1472:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* initialize ptr to sensor structures */
1473:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr = (CapSense_RAM_SNS_STRUCT *)CapSense_dsFlash.wdgtArray[widgetId].ptr2Sns
1474:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1475:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1476:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Calculate target raw count */
1477:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_csxScanPeriod  = CapSense_SsCalcCsxScanPeriod(
1478:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             (CapSense_RAM_WD_BASE_STRUCT *)CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam);
1479:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         rawTarget = CapSense_csxScanPeriod;
1480:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         rawTarget = (rawTarget * target) / CapSense_PERCENTAGE_100;
1481:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1482:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1483:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     if (CapSense_SENSE_METHOD_CSX_E ==
1484:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****        CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1485:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
1486:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Find out total sensors/nodes in widget */
1487:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         totalSns = ((uint32)CapSense_dsFlash.wdgtArray[widgetId].numCols *
1488:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     (uint32)CapSense_dsFlash.wdgtArray[widgetId].numRows);
1489:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1490:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Clear raw count registers and IDAC registers of all the sensors/nodes */
1491:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         for (calibrationIndex = 0u; calibrationIndex < totalSns; calibrationIndex++)
1492:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
1493:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRamSnsPtr->raw[CapSense_FREQ_CHANNEL_0] = 0u;
1494:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_0] = curIdacMask;
1495:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1496:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRamSnsPtr->raw[CapSense_FREQ_CHANNEL_1] = 0u;
1497:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRamSnsPtr->raw[CapSense_FREQ_CHANNEL_2] = 0u;
1498:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_1] = curIdacMask;
1499:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_2] = curIdacMask;
1500:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
1501:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRamSnsPtr++;
1502:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
1503:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1504:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Perform binary search for accurate IDAC value for each sensor/node */
1505:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         do
1506:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
1507:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Scan all the sensors/nodes in widget */
1508:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             (void)CapSense_SetupWidget(widgetId);
1509:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             (void)CapSense_Scan();
1510:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1511:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             while ((CapSense_dsRam.status & CapSense_SW_STS_BUSY) != 0u)
1512:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
1513:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
1514:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1515:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Get access to sensor data */
1516:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRamSnsPtr = (CapSense_RAM_SNS_STRUCT *)CapSense_dsFlash.wdgtArray[widgetId]
1517:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1518:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Check raw count and adjust IDAC, loop through all the sensors/nodes */
1519:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             for (calibrationIndex = 0u; calibrationIndex < totalSns; calibrationIndex++)
1520:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
1521:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Calculate raw count target for specified node */
1522:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1523:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     rawTarget = (CapSense_SsCSXOversample() * target) / CapSense_PERCENTAGE_100;
1524:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #endif
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 29


1525:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1526:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Check if current raw count is above target,
1527:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *   if yes, clear the MS bit of bit
1528:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *   if no, keep the MS bit and set next bit
1529:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 */
1530:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 if (CapSense_curRamSnsPtr->raw[CapSense_FREQ_CHANNEL_0] > rawTarget)
1531:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1532:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_0] &= (uint8)(~curIdacMas
1533:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1534:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_0] |= nextIdacMask;
1535:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1536:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1537:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_curRamSnsPtr->raw[CapSense_FREQ_CHANNEL_1] > rawTarget)
1538:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1539:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_1] &= (uint8)(~curIda
1540:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1541:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1542:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_curRamSnsPtr->raw[CapSense_FREQ_CHANNEL_2] > rawTarget)
1543:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1544:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_2] &= (uint8)(~curIda
1545:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1546:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1547:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_1] |= nextIdacMask;
1548:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_2] |= nextIdacMask;
1549:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #endif
1550:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRamSnsPtr++;
1551:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
1552:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1553:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Shift both current idac and pre Idac values to right by 1 */
1554:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             curIdacMask = nextIdacMask;
1555:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             nextIdacMask = nextIdacMask >> 1u;
1556:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
1557:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         while (curIdacMask != 0u);
1558:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
1559:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1560:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1561:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (CapSense_CSX_IDAC_AUTOCAL_EN == CapSense_ENABLE) */
1562:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1563:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(CapSense_ENABLE == CapSense_CSDV2)
1564:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1565:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXStartSample
1566:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1567:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1568:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1569:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Starts scanning for the CSX widget.
1570:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1571:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1572:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Starts scanning for the CSX widget.
1573:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1574:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1575:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXStartSample(void)
1576:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1577:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 tmpRegVal;
1578:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1579:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     tmpRegVal = (uint32)CapSense_curRamSnsPtr->idacComp[CapSense_scanFreqIndex];
1580:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     tmpRegVal = (tmpRegVal & CapSense_IDAC_MOD_VAL_MASK) | CapSense_DEFAULT_CSD_IDACA_CFG;
1581:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_IDAC_MOD_PTR, tmpRegVal);
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 30


1582:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1583:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1584:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Configure node-specific number of sub-conversion */
1585:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_csxScanPeriod = (uint16)CapSense_SsCSXOversample();
1586:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (uint32)CapSense_curRamSnsPtr->subConvNum);
1587:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1588:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1589:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Clear scan result holder */
1590:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_csxRawCount = 0u;
1591:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1592:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_START_SAMPLE_CALLBACK
1593:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_StartSampleCallback(CapSense_widgetIndex, CapSense_sensorIndex);
1594:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_START_SAMPLE_CALLBACK */
1595:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1596:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_SsCSXStartSampleExt();
1597:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1598:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #else
1599:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1600:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1601:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXStartSample
1602:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1603:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1604:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1605:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Starts scanning for the CSX widget.
1606:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1607:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param widgetIndex The ID of the widget to be calibrated.
1608:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1609:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1610:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1611:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1612:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXStartSample(void)
1613:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1614:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint8 critSect;
1615:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 tmpRegVal;
1616:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1617:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     critSect = CyEnterCriticalSection();
1618:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     tmpRegVal = CY_GET_REG32(CapSense_IDAC_PTR);
1619:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     tmpRegVal &= ~(CapSense_IDAC_MOD_MASK);
1620:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     tmpRegVal |= (CapSense_IDAC_MOD_MODE_VARIABLE | (uint32)CapSense_curRamSnsPtr->idacComp[CapSens
1621:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_IDAC_PTR, tmpRegVal);
1622:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CyExitCriticalSection(critSect);
1623:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1624:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Clear scan result holder */
1625:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_csxRawCount = 0u;
1626:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1627:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_START_SAMPLE_CALLBACK
1628:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_StartSampleCallback(CapSense_widgetIndex, CapSense_sensorIndex);
1629:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_START_SAMPLE_CALLBACK */
1630:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1631:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1632:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Configure node-specific number of sub-conversion */
1633:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_csxScanPeriod = (uint16)CapSense_SsCSXOversample();
1634:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1635:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1636:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Disable interrupts and initiate scan */
1637:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     critSect = CyEnterCriticalSection();
1638:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_SsCSXStartSampleExt();
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 31


1639:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CyExitCriticalSection(critSect);
1640:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1641:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1642:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1643:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1644:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXConnectTx
1645:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1646:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1647:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1648:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Connects a Tx electrode to the CSX scanning hardware.
1649:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1650:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1651:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function connects a port pin (Tx electrode) to the CSD_SENSE signal.
1652:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  It is assumed that drive mode of the port pin is already set to STRONG
1653:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  in the HSIOM_PORT_SELx register.
1654:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1655:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1656:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1657:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for an
1658:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  electrode for example).
1659:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1660:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param txPtr
1661:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1662:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  to be connected to the sensing HW block as a Tx pin.
1663:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1664:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1665:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXConnectTx(CapSense_FLASH_IO_STRUCT const *txPtr)
1666:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1667:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
1668:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1669:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (txPtr->pcPtr);
1670:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |= (CapSense_GPIO_STRGDRV << txPtr->shift);
1671:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->pcPtr, regValue);
1672:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1673:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (txPtr->hsiomPtr);
1674:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |= (CapSense_HSIOM_SEL_CSD_SENSE << txPtr->hsiomShift);
1675:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
1676:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1677:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1678:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1679:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXConnectRx
1680:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1681:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1682:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1683:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Connects an Rx electrode to the CSX scanning hardware.
1684:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1685:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1686:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function connects a port pin (Rx electrode) to AMUXBUS-A and sets
1687:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  drive mode of the port pin to High-Z in the GPIO_PRT_PCx register.
1688:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1689:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1690:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1691:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for an
1692:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  electrode for example).
1693:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1694:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param rxPtr
1695:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 32


1696:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  to be connected to the sensing HW block as an Rx pin.
1697:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1698:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1699:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXConnectRx(CapSense_FLASH_IO_STRUCT const *rxPtr)
1700:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1701:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
1702:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1703:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->pcPtr);
1704:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(CapSense_GPIO_PC_MASK << rxPtr->shift);
1705:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->pcPtr, regValue);
1706:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1707:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->hsiomPtr);
1708:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |=  (CapSense_HSIOM_SEL_AMUXA << rxPtr->hsiomShift);
1709:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
1710:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1711:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1712:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1713:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXDisconnectTx
1714:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1715:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1716:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1717:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Disconnects a Tx electrode from the CSX scanning hardware.
1718:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1719:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1720:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function disconnects a port pin (Tx electrode) from the CSD_SENSE
1721:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  signal and configures the port pin to the strong drive mode. It is assumed
1722:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  that the data register (GPIO_PRTx_DR) of the port pin is already 0.
1723:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1724:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1725:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1726:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for an
1727:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  electrode for example).
1728:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1729:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param txPtr
1730:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a Tx pin
1731:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  sensor to be disconnected from the sensing HW block.
1732:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1733:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1734:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXDisconnectTx(CapSense_FLASH_IO_STRUCT const *txPtr)
1735:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1736:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
1737:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1738:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (txPtr->hsiomPtr);
1739:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(txPtr->hsiomMask);
1740:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
1741:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1742:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1743:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1744:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXDisconnectRx
1745:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1746:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1747:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1748:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Disconnects an Rx electrode from the CSX scanning hardware.
1749:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1750:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1751:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function disconnects a port pin (Rx electrode) from AMUXBUS_A and
1752:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  configures the port pin to the strong drive mode. It is assumed that the
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 33


1753:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  data register (GPIO_PRTx_DR) of the port pin is already 0.
1754:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1755:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1756:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1757:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for
1758:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  an electrode for example).
1759:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1760:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param rxPtr
1761:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to an Rx pin
1762:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  sensor to be disconnected from the sensing HW block.
1763:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1764:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1765:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXDisconnectRx(CapSense_FLASH_IO_STRUCT const *rxPtr)
1766:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1767:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
1768:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1769:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->hsiomPtr);
1770:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(rxPtr->hsiomMask);
1771:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
1772:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1773:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->pcPtr);
1774:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(CapSense_GPIO_PC_MASK << rxPtr->shift);
1775:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |=  (CapSense_GPIO_STRGDRV << rxPtr->shift);
1776:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->pcPtr, regValue);
1777:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1778:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->drPtr);
1779:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &=  ~(rxPtr->mask);
1780:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->drPtr, regValue);
1781:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1782:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1783:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1784:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1785:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXGetTxClkDivider
1786:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1787:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1788:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1789:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function gets the Sense Clock Divider value for one-dimension widgets
1790:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  and the Column Sense Clock divider value for two-dimension widgets.
1791:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1792:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1793:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function gets the Sense Clock Divider value based on the Component
1794:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  configuration. The function is applicable for one-dimension widgets and for
1795:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  two-dimension widgets.
1796:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1797:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param
1798:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  widgetId Specifies the ID of the widget.
1799:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1800:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \return The Sense Clock Divider value for one-dimension widgets
1801:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *         and the Column Sense Clock divider value for two-dimension widgets.
1802:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1803:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1804:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** uint32 CapSense_SsCSXGetTxClkDivider(uint32 widgetId)
1805:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1806:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 retVal;
1807:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1808:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Get sense divider based on configuration */
1809:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN)
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 34


1810:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
1811:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1812:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1813:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
1814:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1815:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         retVal = (uint32)(ptrWdgt->snsClk);
1816:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
1817:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         retVal = (uint32)CapSense_dsRam.snsCsxClk;
1818:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
1819:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1820:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     if(widgetId == 0uL)
1821:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
1822:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         ;
1823:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
1824:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1825:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     return (retVal);
1826:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1827:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1828:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1829:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1830:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCalcCsxScanPeriod
1831:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1832:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1833:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1834:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calculates scan period for a desired CSX widget.
1835:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1836:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1837:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function calculates a scan period for a desired CSX widget considering
1838:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  common Tx clock option.
1839:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1840:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param wdgtPtr
1841:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  The pointer to a register map object that contains widget information.
1842:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1843:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \return
1844:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Returns the CSX scan period for the widget.
1845:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1846:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1847:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static uint16 CapSense_SsCalcCsxScanPeriod(CapSense_RAM_WD_BASE_STRUCT const *wdgtPtr)
1848:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
  73              		.loc 1 1848 0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
  78              	.LVL0:
1849:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 temp;
1850:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1851:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if(CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN)
1852:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp = (uint32)(wdgtPtr->snsClk);
  79              		.loc 1 1852 0
  80 0000 4389     		ldrh	r3, [r0, #10]
  81              	.LVL1:
1853:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
1854:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp = (uint32)(CapSense_dsRam.snsCsxClk);
1855:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
1856:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1857:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if(CapSense_ENABLE == CapSense_CSDV2)
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 35


1858:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp  = LO16((uint32)wdgtPtr->resolution * (temp - CapSense_CSX_DEADBAND_CYCLES_NUMBER));
  82              		.loc 1 1858 0
  83 0002 0288     		ldrh	r2, [r0]
  84 0004 981E     		subs	r0, r3, #2
  85              	.LVL2:
  86 0006 5043     		muls	r0, r2
  87 0008 80B2     		uxth	r0, r0
  88              	.LVL3:
1859:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
1860:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if(CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1861:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             temp = (temp / (uint32)CapSense_dsRam.modCsxClk);
1862:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1863:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1864:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp = ((uint32)wdgtPtr->resolution * CapSense_NUM_HALF_CYCLES * temp);
1865:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1866:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1867:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* return the scan period */
1868:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     return ((uint16)temp);
1869:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
  89              		.loc 1 1869 0
  90              		@ sp needed
  91 000a 7047     		bx	lr
  92              		.cfi_endproc
  93              	.LFE16:
  94              		.size	CapSense_SsCalcCsxScanPeriod, .-CapSense_SsCalcCsxScanPeriod
  95              		.global	__aeabi_uidiv
  96              		.section	.text.CapSense_SsCSXStartSample,"ax",%progbits
  97              		.align	2
  98              		.code	16
  99              		.thumb_func
 100              		.type	CapSense_SsCSXStartSample, %function
 101              	CapSense_SsCSXStartSample:
 102              	.LFB10:
1576:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 tmpRegVal;
 103              		.loc 1 1576 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107 0000 10B5     		push	{r4, lr}
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 4, -8
 110              		.cfi_offset 14, -4
1579:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     tmpRegVal = (tmpRegVal & CapSense_IDAC_MOD_VAL_MASK) | CapSense_DEFAULT_CSD_IDACA_CFG;
 111              		.loc 1 1579 0
 112 0002 344B     		ldr	r3, .L13
 113 0004 1A68     		ldr	r2, [r3]
 114 0006 344B     		ldr	r3, .L13+4
 115 0008 1B78     		ldrb	r3, [r3]
 116 000a D318     		adds	r3, r2, r3
 117 000c 5B7A     		ldrb	r3, [r3, #9]
 118              	.LVL4:
1580:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_IDAC_MOD_PTR, tmpRegVal);
 119              		.loc 1 1580 0
 120 000e 334A     		ldr	r2, .L13+8
 121 0010 1343     		orrs	r3, r2
 122              	.LVL5:
1581:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 36


 123              		.loc 1 1581 0
 124 0012 334A     		ldr	r2, .L13+12
 125 0014 1360     		str	r3, [r2]
1590:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 126              		.loc 1 1590 0
 127 0016 0022     		movs	r2, #0
 128 0018 324B     		ldr	r3, .L13+16
 129              	.LVL6:
 130 001a 5A80     		strh	r2, [r3, #2]
 131              	.LVL7:
 132              	.LBB4:
 133              	.LBB5:
1870:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1871:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1872:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1873:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1874:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXOversample
1875:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1876:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1877:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1878:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Calculates the scan period of specific node.
1879:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1880:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1881:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Calculates the scan period of specific node that is used as maximum
1882:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   raw count at raw count inversion (CapSense_csxScanPeriod variable).
1883:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   The CapSense_curFlashWdgtPtr and CapSense_curRamSnsPtr
1884:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   must be configured to proper widget/sensor before calling this function.
1885:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1886:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \return
1887:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Returns the scan period of specific node (used as maximum raw count)
1888:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1889:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1890:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static uint32 CapSense_SsCSXOversample(void)
1891:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1892:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 temp;
1893:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1894:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if(CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN)
1895:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_RAM_WD_BASE_STRUCT * curRamWdgtBasePtr;
1896:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         curRamWdgtBasePtr = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_curFlashWdgtPtr->ptr2WdgtRam;
1897:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp = (uint32)(curRamWdgtBasePtr->snsClk);
1898:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
1899:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp = (uint32)(CapSense_dsRam.snsCsxClk);
1900:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
1901:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1902:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if(CapSense_ENABLE == CapSense_CSDV2)
1903:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp  = LO16((uint32)CapSense_curRamSnsPtr->subConvNum * (temp - CapSense_CSX_DEADBAND_CYCL
1904:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
1905:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if(CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1906:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             temp = (temp / (uint32)CapSense_dsRam.modCsxClk);
1907:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1908:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1909:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp = ((uint32)CapSense_curRamSnsPtr->subConvNum * CapSense_NUM_HALF_CYCLES * temp);
1910:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1911:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1912:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* return the scan period */
1913:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     return (temp);
1914:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 37


1915:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1916:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1917:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1918:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(CapSense_ENABLE == CapSense_CSDV2)
1919:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /**
1920:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \cond SECTION_C_INTERRUPT
1921:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \addtogroup group_c_interrupt
1922:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \{
1923:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** */
1924:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1925:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXScanISR
1926:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1927:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1928:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1929:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This is an internal ISR function to handle the CSX sensing method operation.
1930:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1931:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1932:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This handler covers the following functionality:
1933:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   - Read the result of the measurement and store it into the corresponding register of
1934:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *     the data structure.
1935:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   - If the Noise Metric functionality is enabled, then check the number of bad
1936:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *     conversions and repeat the scan of the current sensor of the number of bad
1937:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *     conversions is greater than the Noise Metric Threshold.
1938:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   - Initiate the scan of the next sensor for multiple sensor scanning mode.
1939:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   - Update the Status register in the data structure.
1940:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   - Switch the HW block to the default state if scanning of all the sensors is
1941:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *     completed.
1942:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1943:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1944:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** CY_ISR(CapSense_CSXScanISR)
1945:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1946:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(0u != CapSense_CSX_NOISE_METRIC_EN)
1947:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 tmpRegVal;
1948:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (0u != CapSense_CSX_NOISE_METRIC_EN) */
1949:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(0u != CapSense_CSX_NOISE_METRIC_EN)
1950:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     static uint32 CapSense_resamplingCyclesCnt = CapSense_RESAMPLING_CYCLES_MAX_NUMBER;
1951:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (0u != CapSense_CSX_NOISE_METRIC_EN) */
1952:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1953:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CyIntDisable(CapSense_ISR_NUMBER);
1954:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1955:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_INTR_PTR, CapSense_DEFAULT_CSD_INTR_CFG);
1956:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1957:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_csxRawCount  = (uint16)(CY_GET_REG32(CapSense_RESULT_VAL1_PTR) &\
1958:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                                          CapSense_RESULT_VAL1_VALUE_MASK);
1959:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1960:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_csxRawCount += (uint16)(CY_GET_REG32(CapSense_RESULT_VAL2_PTR) &\
1961:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                                          CapSense_RESULT_VAL2_VALUE_MASK);
1962:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1963:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* This workaround neded to prevent overflow in the SW register map. Cypress ID #234358 */
1964:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     if(CapSense_csxRawCount > CapSense_csxScanPeriod)
1965:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
1966:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_csxRawCount = CapSense_csxScanPeriod;
1967:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
1968:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1969:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(0u != CapSense_CSX_NOISE_METRIC_EN)
1970:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     tmpRegVal = CY_GET_REG32(CapSense_RESULT_VAL1_PTR) >> CapSense_RESULT_VAL1_BAD_CONVS_SHIFT;
1971:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 38


1972:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     if((tmpRegVal > CapSense_CSX_NOISE_METRIC_TH) && (CapSense_resamplingCyclesCnt > 0uL))
1973:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
1974:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SCAN_CSD_SEQ_START_CFG);
1975:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_resamplingCyclesCnt--;
1976:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
1977:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     else
1978:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
1979:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_CSXPostScanApiPtr();
1980:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_resamplingCyclesCnt = CapSense_RESAMPLING_CYCLES_MAX_NUMBER;
1981:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
1982:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #else
1983:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_CSXPostScanApiPtr();
1984:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (0u != CapSense_CSX_NOISE_METRIC_EN) */
1985:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1986:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     if(CapSense_NOT_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
1987:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
1988:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_DEFAULT_CSD_CONFIG_CFG);
1989:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CSDCMP_PTR, CapSense_DEFAULT_CSD_CSDCMP_CFG);
1990:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_IDAC_MOD_PTR, CapSense_DEFAULT_CSD_IDACA_CFG);
1991:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
1992:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1993:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CyIntEnable(CapSense_ISR_NUMBER);
1994:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1995:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1996:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /** \}
1997:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \endcond */
1998:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1999:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
2000:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXStartSampleExt
2001:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
2002:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
2003:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
2004:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Starts the HW sequencer to perform the CSX conversion.
2005:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   specific widget.
2006:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
2007:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
2008:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function covers the following functionality:
2009:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *      1. Configures the HW sequencer to perform the coarse initialization.
2010:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *      2. Waiting for completion of the coarse initialization.
2011:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *      3. Configures the HW sequencer to perform the normal conversion.
2012:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *      4. Starts the normal conversion
2013:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
2014:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
2015:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static CY_INLINE void CapSense_SsCSXStartSampleExt(void)
2016:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
2017:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 filterDelay;
2018:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 watchdogCounter;
2019:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
2020:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 sampleClkFreqHz;
2021:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
2022:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2023:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Configure the HW sequencer to perform the coarse initialization. */
2024:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_CONFIG_PTR,           CapSense_DEFAULT_CSD_CONFIG_CFG);
 134              		.loc 1 2024 0
 135 001c 324A     		ldr	r2, .L13+20
 136 001e 334B     		ldr	r3, .L13+24
 137 0020 1A60     		str	r2, [r3]
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 39


2025:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_HSCMP_PTR,            CapSense_PRECHARGE_CSD_HSCMP_CFG);
 138              		.loc 1 2025 0
 139 0022 0122     		movs	r2, #1
 140 0024 324B     		ldr	r3, .L13+28
 141 0026 1A60     		str	r2, [r3]
2026:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR,      CapSense_PRECHARGE_CSD_SW_HS_P_SEL_CFG);
 142              		.loc 1 2026 0
 143 0028 1123     		movs	r3, #17
 144 002a 324A     		ldr	r2, .L13+32
 145 002c 1360     		str	r3, [r2]
2027:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR,      CapSense_PRECHARGE_CSD_SW_HS_N_SEL_CFG);
 146              		.loc 1 2027 0
 147 002e 8021     		movs	r1, #128
 148 0030 4904     		lsls	r1, r1, #17
 149 0032 314A     		ldr	r2, .L13+36
 150 0034 1160     		str	r1, [r2]
2028:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_DSI_SEL_PTR,       CapSense_PRECHARGE_CSD_SW_DSI_SEL_CFG);
 151              		.loc 1 2028 0
 152 0036 314A     		ldr	r2, .L13+40
 153 0038 1360     		str	r3, [r2]
2029:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR,    CapSense_PRECHARGE_CSD_SW_SHIELD_SEL_CFG);
 154              		.loc 1 2029 0
 155 003a 0622     		movs	r2, #6
 156 003c 304B     		ldr	r3, .L13+44
 157 003e 1A60     		str	r2, [r3]
2030:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_FW_MOD_SEL_PTR,    CapSense_PRECHARGE_CSD_SW_FW_MOD_SEL_CFG);
 158              		.loc 1 2030 0
 159 0040 304A     		ldr	r2, .L13+48
 160 0042 314B     		ldr	r3, .L13+52
 161 0044 1A60     		str	r2, [r3]
2031:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR,   CapSense_PRECHARGE_CSD_SW_FW_TANK_SEL_CFG);
 162              		.loc 1 2031 0
 163 0046 314A     		ldr	r2, .L13+56
 164 0048 314B     		ldr	r3, .L13+60
 165 004a 1A60     		str	r2, [r3]
2032:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2033:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if(CapSense_ENABLE == CapSense_CSDV2) &&\
2034:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****        (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) &&\
2035:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****        (CapSense_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
2036:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CyDelayUs(CapSense_CSX_ANALOG_STARTUP_DELAY_US);
2037:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
2038:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2039:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SEQ_START_PTR,        CapSense_PRECHARGE_CSD_SEQ_START_CFG);
 166              		.loc 1 2039 0
 167 004c 314A     		ldr	r2, .L13+64
 168 004e 324B     		ldr	r3, .L13+68
 169 0050 1A60     		str	r2, [r3]
 170              	.LVL8:
2040:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2041:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Wait for the HSCMP trigger and retutn the sequencer to the IDLE state. */
2042:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     watchdogCounter = CapSense_CSX_PRECHARGE_WATCHDOG_CYCLES_NUM;
 171              		.loc 1 2042 0
 172 0052 F023     		movs	r3, #240
 173 0054 5B00     		lsls	r3, r3, #1
 174 0056 00E0     		b	.L6
 175              	.LVL9:
 176              	.L8:
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 40


2043:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     while((0u != (CapSense_SEQ_START_START_MASK & CY_GET_REG32(CapSense_SEQ_START_PTR))) && (0u != 
2044:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
2045:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         watchdogCounter--;
 177              		.loc 1 2045 0
 178 0058 013B     		subs	r3, r3, #1
 179              	.LVL10:
 180              	.L6:
2043:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     while((0u != (CapSense_SEQ_START_START_MASK & CY_GET_REG32(CapSense_SEQ_START_PTR))) && (0u != 
 181              		.loc 1 2043 0
 182 005a 2F4A     		ldr	r2, .L13+68
 183 005c 1268     		ldr	r2, [r2]
 184 005e D207     		lsls	r2, r2, #31
 185 0060 01D5     		bpl	.L7
 186 0062 002B     		cmp	r3, #0
 187 0064 F8D1     		bne	.L8
 188              	.L7:
2046:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
2047:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2048:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Reset the sequencer to the IDLE state if HSCMP not triggered till watchdog period is out. */
2049:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     if(0u != (CapSense_SEQ_START_START_MASK & CY_GET_REG32(CapSense_SEQ_START_PTR)))
 189              		.loc 1 2049 0
 190 0066 2C4B     		ldr	r3, .L13+68
 191              	.LVL11:
 192 0068 1B68     		ldr	r3, [r3]
 193 006a DB07     		lsls	r3, r3, #31
 194 006c 03D5     		bpl	.L9
2050:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
2051:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_START_PTR,  CapSense_DEFAULT_CSD_SEQ_START_CFG);
 195              		.loc 1 2051 0
 196 006e C222     		movs	r2, #194
 197 0070 9200     		lsls	r2, r2, #2
 198 0072 294B     		ldr	r3, .L13+68
 199 0074 1A60     		str	r2, [r3]
 200              	.L9:
2052:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
2053:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2054:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
2055:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         sampleClkFreqHz = CYDEV_BCLK__HFCLK__HZ / (uint32)CapSense_dsRam.modCsxClk;
 201              		.loc 1 2055 0
 202 0076 294B     		ldr	r3, .L13+72
 203 0078 D97F     		ldrb	r1, [r3, #31]
 204 007a 2948     		ldr	r0, .L13+76
 205 007c FFF7FEFF 		bl	__aeabi_uidiv
 206              	.LVL12:
2056:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if(sampleClkFreqHz <= CapSense_MOD_CSD_CLK_12MHZ)
 207              		.loc 1 2056 0
 208 0080 284B     		ldr	r3, .L13+80
 209 0082 9842     		cmp	r0, r3
 210 0084 04D9     		bls	.L11
2057:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
2058:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             filterDelay = CapSense_CONFIG_FILTER_DELAY_12MHZ;
2059:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
2060:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         else if(sampleClkFreqHz <= CapSense_MOD_CSD_CLK_24MHZ)
 211              		.loc 1 2060 0
 212 0086 264B     		ldr	r3, .L13+76
 213 0088 9842     		cmp	r0, r3
 214 008a 03D8     		bhi	.L12
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 41


2061:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
2062:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             filterDelay = CapSense_CONFIG_FILTER_DELAY_24MHZ;
 215              		.loc 1 2062 0
 216 008c 3023     		movs	r3, #48
 217 008e 02E0     		b	.L10
 218              	.L11:
2058:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 219              		.loc 1 2058 0
 220 0090 2023     		movs	r3, #32
 221 0092 00E0     		b	.L10
 222              	.L12:
2063:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
2064:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         else
2065:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
2066:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             filterDelay = CapSense_CONFIG_FILTER_DELAY_48MHZ;
 223              		.loc 1 2066 0
 224 0094 4023     		movs	r3, #64
 225              	.L10:
 226              	.LVL13:
2067:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
2068:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
2069:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         filterDelay = CapSense_CONFIG_FILTER_DELAY_12MHZ;
2070:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
2071:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2072:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Configure the HW sequencer to perform the normal conversion. */
2073:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_PRESCAN_CSD_CONFIG_CFG | filterDelay);
 227              		.loc 1 2073 0
 228 0096 244A     		ldr	r2, .L13+84
 229 0098 1343     		orrs	r3, r2
 230              	.LVL14:
 231 009a 144A     		ldr	r2, .L13+24
 232 009c 1360     		str	r3, [r2]
2074:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_CSDCMP_PTR, CapSense_PRESCAN_CSD_CSDCMP_CFG);
 233              		.loc 1 2074 0
 234 009e 234A     		ldr	r2, .L13+88
 235 00a0 234B     		ldr	r3, .L13+92
 236 00a2 1A60     		str	r2, [r3]
2075:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_HSCMP_PTR, CapSense_DEFAULT_CSD_HSCMP_CFG);
 237              		.loc 1 2075 0
 238 00a4 0023     		movs	r3, #0
 239 00a6 1249     		ldr	r1, .L13+28
 240 00a8 0B60     		str	r3, [r1]
2076:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR, CapSense_DEFAULT_CSD_SW_HS_P_SEL_CFG);
 241              		.loc 1 2076 0
 242 00aa 1249     		ldr	r1, .L13+32
 243 00ac 0B60     		str	r3, [r1]
2077:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR, CapSense_DEFAULT_CSD_SW_HS_N_SEL_CFG);
 244              		.loc 1 2077 0
 245 00ae 1249     		ldr	r1, .L13+36
 246 00b0 0B60     		str	r3, [r1]
2078:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_DSI_SEL_PTR, CapSense_DEFAULT_CSD_SW_DSI_SEL_CFG);
 247              		.loc 1 2078 0
 248 00b2 2320     		movs	r0, #35
 249              	.LVL15:
 250 00b4 1149     		ldr	r1, .L13+40
 251 00b6 0860     		str	r0, [r1]
2079:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR, CapSense_DEFAULT_CSD_SW_SHIELD_SEL_CFG);
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 42


 252              		.loc 1 2079 0
 253 00b8 1149     		ldr	r1, .L13+44
 254 00ba 0B60     		str	r3, [r1]
2080:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_FW_MOD_SEL_PTR, CapSense_DEFAULT_CSD_SW_FW_MOD_SEL_CFG);
 255              		.loc 1 2080 0
 256 00bc 1249     		ldr	r1, .L13+52
 257 00be 0B60     		str	r3, [r1]
2081:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR, CapSense_DEFAULT_CSD_SW_FW_TANK_SEL_CFG);
 258              		.loc 1 2081 0
 259 00c0 1349     		ldr	r1, .L13+60
 260 00c2 0B60     		str	r3, [r1]
2082:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2083:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Clear all pending interrupts of CSD block */
2084:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_INTR_PTR, CapSense_DEFAULT_CSD_INTR_CFG);
 261              		.loc 1 2084 0
 262 00c4 8321     		movs	r1, #131
 263 00c6 4900     		lsls	r1, r1, #1
 264 00c8 1A4B     		ldr	r3, .L13+96
 265 00ca 1960     		str	r1, [r3]
2085:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2086:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Start the normal conversion. */
2087:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SCAN_CSD_SEQ_START_CFG);
 266              		.loc 1 2087 0
 267 00cc 124B     		ldr	r3, .L13+68
 268 00ce 1A60     		str	r2, [r3]
 269              	.LBE5:
 270              	.LBE4:
1597:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #else
 271              		.loc 1 1597 0
 272              		@ sp needed
 273 00d0 10BD     		pop	{r4, pc}
 274              	.L14:
 275 00d2 C046     		.align	2
 276              	.L13:
 277 00d4 00000000 		.word	CapSense_curRamSnsPtr
 278 00d8 00000000 		.word	CapSense_scanFreqIndex
 279 00dc 800E4301 		.word	21171840
 280 00e0 C0010B40 		.word	1074463168
 281 00e4 00000000 		.word	.LANCHOR0
 282 00e8 20100480 		.word	-2147217376
 283 00ec 00000B40 		.word	1074462720
 284 00f0 80010B40 		.word	1074463104
 285 00f4 80020B40 		.word	1074463360
 286 00f8 84020B40 		.word	1074463364
 287 00fc C0020B40 		.word	1074463424
 288 0100 88020B40 		.word	1074463368
 289 0104 01010100 		.word	65793
 290 0108 B0020B40 		.word	1074463408
 291 010c 10100000 		.word	4112
 292 0110 B4020B40 		.word	1074463412
 293 0114 03030000 		.word	771
 294 0118 40030B40 		.word	1074463552
 295 011c 00000000 		.word	CapSense_dsRam
 296 0120 00366E01 		.word	24000000
 297 0124 001BB700 		.word	12000000
 298 0128 00100C80 		.word	-2146693120
 299 012c 01030000 		.word	769
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 43


 300 0130 8C010B40 		.word	1074463116
 301 0134 F0000B40 		.word	1074462960
 302              		.cfi_endproc
 303              	.LFE10:
 304              		.size	CapSense_SsCSXStartSample, .-CapSense_SsCSXStartSample
 305              		.section	.text.CapSense_CSXScanISR,"ax",%progbits
 306              		.align	2
 307              		.global	CapSense_CSXScanISR
 308              		.code	16
 309              		.thumb_func
 310              		.type	CapSense_CSXScanISR, %function
 311              	CapSense_CSXScanISR:
 312              	.LFB17:
1945:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(0u != CapSense_CSX_NOISE_METRIC_EN)
 313              		.loc 1 1945 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317 0000 10B5     		push	{r4, lr}
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 4, -8
 320              		.cfi_offset 14, -4
1953:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 321              		.loc 1 1953 0
 322 0002 0A20     		movs	r0, #10
 323 0004 FFF7FEFF 		bl	CyIntDisable
 324              	.LVL16:
1955:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 325              		.loc 1 1955 0
 326 0008 8322     		movs	r2, #131
 327 000a 5200     		lsls	r2, r2, #1
 328 000c 154B     		ldr	r3, .L18
 329 000e 1A60     		str	r2, [r3]
1957:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                                          CapSense_RESULT_VAL1_VALUE_MASK);
 330              		.loc 1 1957 0
 331 0010 154B     		ldr	r3, .L18+4
 332 0012 1B68     		ldr	r3, [r3]
 333 0014 9BB2     		uxth	r3, r3
 334 0016 154A     		ldr	r2, .L18+8
 335 0018 5380     		strh	r3, [r2, #2]
1960:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                                          CapSense_RESULT_VAL2_VALUE_MASK);
 336              		.loc 1 1960 0
 337 001a 154B     		ldr	r3, .L18+12
 338 001c 1B68     		ldr	r3, [r3]
 339 001e 9BB2     		uxth	r3, r3
 340 0020 5188     		ldrh	r1, [r2, #2]
 341 0022 CB18     		adds	r3, r1, r3
 342 0024 9BB2     		uxth	r3, r3
 343 0026 5380     		strh	r3, [r2, #2]
1964:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
 344              		.loc 1 1964 0
 345 0028 5188     		ldrh	r1, [r2, #2]
 346 002a 89B2     		uxth	r1, r1
 347 002c 1388     		ldrh	r3, [r2]
 348 002e 9BB2     		uxth	r3, r3
 349 0030 9942     		cmp	r1, r3
 350 0032 02D9     		bls	.L16
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 44


1966:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
 351              		.loc 1 1966 0
 352 0034 1388     		ldrh	r3, [r2]
 353 0036 9BB2     		uxth	r3, r3
 354 0038 5380     		strh	r3, [r2, #2]
 355              	.L16:
1983:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (0u != CapSense_CSX_NOISE_METRIC_EN) */
 356              		.loc 1 1983 0
 357 003a 0E4B     		ldr	r3, .L18+16
 358 003c 1B68     		ldr	r3, [r3]
 359 003e 9847     		blx	r3
 360              	.LVL17:
1986:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
 361              		.loc 1 1986 0
 362 0040 0D4B     		ldr	r3, .L18+20
 363 0042 DB68     		ldr	r3, [r3, #12]
 364 0044 1B06     		lsls	r3, r3, #24
 365 0046 09D4     		bmi	.L17
1988:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CSDCMP_PTR, CapSense_DEFAULT_CSD_CSDCMP_CFG);
 366              		.loc 1 1988 0
 367 0048 0C4A     		ldr	r2, .L18+24
 368 004a 0D4B     		ldr	r3, .L18+28
 369 004c 1A60     		str	r2, [r3]
1989:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_IDAC_MOD_PTR, CapSense_DEFAULT_CSD_IDACA_CFG);
 370              		.loc 1 1989 0
 371 004e C022     		movs	r2, #192
 372 0050 9200     		lsls	r2, r2, #2
 373 0052 0C4B     		ldr	r3, .L18+32
 374 0054 1A60     		str	r2, [r3]
1990:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
 375              		.loc 1 1990 0
 376 0056 0C4A     		ldr	r2, .L18+36
 377 0058 0C4B     		ldr	r3, .L18+40
 378 005a 1A60     		str	r2, [r3]
 379              	.L17:
1993:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 380              		.loc 1 1993 0
 381 005c 0A20     		movs	r0, #10
 382 005e FFF7FEFF 		bl	CyIntEnable
 383              	.LVL18:
1994:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 384              		.loc 1 1994 0
 385              		@ sp needed
 386 0062 10BD     		pop	{r4, pc}
 387              	.L19:
 388              		.align	2
 389              	.L18:
 390 0064 F0000B40 		.word	1074462960
 391 0068 D0000B40 		.word	1074462928
 392 006c 00000000 		.word	.LANCHOR0
 393 0070 D4000B40 		.word	1074462932
 394 0074 00000000 		.word	.LANCHOR1
 395 0078 00000000 		.word	CapSense_dsRam
 396 007c 20100480 		.word	-2147217376
 397 0080 00000B40 		.word	1074462720
 398 0084 8C010B40 		.word	1074463116
 399 0088 800E4301 		.word	21171840
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 45


 400 008c C0010B40 		.word	1074463168
 401              		.cfi_endproc
 402              	.LFE17:
 403              		.size	CapSense_CSXScanISR, .-CapSense_CSXScanISR
 404              		.section	.text.CapSense_CSXInitialize,"ax",%progbits
 405              		.align	2
 406              		.global	CapSense_CSXInitialize
 407              		.code	16
 408              		.thumb_func
 409              		.type	CapSense_CSXInitialize, %function
 410              	CapSense_CSXInitialize:
 411              	.LFB1:
 149:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if(CapSense_ENABLE == CapSense_CSDV2)
 412              		.loc 1 149 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416 0000 10B5     		push	{r4, lr}
 417              		.cfi_def_cfa_offset 8
 418              		.cfi_offset 4, -8
 419              		.cfi_offset 14, -4
 154:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_INTR_SET_PTR,         CapSense_DEFAULT_CSD_INTR_SET_CFG);
 420              		.loc 1 154 0
 421 0002 8322     		movs	r2, #131
 422 0004 5200     		lsls	r2, r2, #1
 423 0006 4A4B     		ldr	r3, .L21
 424 0008 1A60     		str	r2, [r3]
 155:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_INTR_MASK_PTR,        CapSense_DEFAULT_CSD_INTR_MASK_CFG);
 425              		.loc 1 155 0
 426 000a 0024     		movs	r4, #0
 427 000c 494B     		ldr	r3, .L21+4
 428 000e 1C60     		str	r4, [r3]
 156:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_HSCMP_PTR,            CapSense_DEFAULT_CSD_HSCMP_CFG);
 429              		.loc 1 156 0
 430 0010 053A     		subs	r2, r2, #5
 431 0012 FF3A     		subs	r2, r2, #255
 432 0014 484B     		ldr	r3, .L21+8
 433 0016 1A60     		str	r2, [r3]
 157:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_AMBUF_PTR,            CapSense_DEFAULT_CSD_AMBUF_CFG);
 434              		.loc 1 157 0
 435 0018 484B     		ldr	r3, .L21+12
 436 001a 1C60     		str	r4, [r3]
 158:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_REFGEN_PTR,           CapSense_DEFAULT_CSD_REFGEN_CFG);
 437              		.loc 1 158 0
 438 001c 484B     		ldr	r3, .L21+16
 439 001e 1C60     		str	r4, [r3]
 159:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CSDCMP_PTR,           CapSense_DEFAULT_CSD_CSDCMP_CFG);
 440              		.loc 1 159 0
 441 0020 484A     		ldr	r2, .L21+20
 442 0022 494B     		ldr	r3, .L21+24
 443 0024 1A60     		str	r2, [r3]
 160:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_IDAC_MOD_PTR,         CapSense_DEFAULT_CSD_IDACA_CFG);
 444              		.loc 1 160 0
 445 0026 C022     		movs	r2, #192
 446 0028 9200     		lsls	r2, r2, #2
 447 002a 484B     		ldr	r3, .L21+28
 448 002c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 46


 161:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 449              		.loc 1 161 0
 450 002e 484A     		ldr	r2, .L21+32
 451 0030 484B     		ldr	r3, .L21+36
 452 0032 1A60     		str	r2, [r3]
 164:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif /* (0u != CapSense_ADC_EN) || (0u != CapSense_IDACB_USED) */
 453              		.loc 1 164 0
 454 0034 484B     		ldr	r3, .L21+40
 455 0036 1C60     		str	r4, [r3]
 167:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SENSE_PERIOD_PTR,     CapSense_DEFAULT_CSD_SENSE_PERIOD_CFG);
 456              		.loc 1 167 0
 457 0038 484A     		ldr	r2, .L21+44
 458 003a 494B     		ldr	r3, .L21+48
 459 003c 1A60     		str	r2, [r3]
 168:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SENSE_DUTY_PTR,       CapSense_DEFAULT_CSD_SENSE_DUTY_CFG);
 460              		.loc 1 168 0
 461 003e 5022     		movs	r2, #80
 462 0040 484B     		ldr	r3, .L21+52
 463 0042 1A60     		str	r2, [r3]
 169:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR,      CapSense_DEFAULT_CSD_SW_HS_P_SEL_CFG);
 464              		.loc 1 169 0
 465 0044 484B     		ldr	r3, .L21+56
 466 0046 1C60     		str	r4, [r3]
 170:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR,      CapSense_DEFAULT_CSD_SW_HS_N_SEL_CFG);
 467              		.loc 1 170 0
 468 0048 484B     		ldr	r3, .L21+60
 469 004a 1C60     		str	r4, [r3]
 171:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR,    CapSense_DEFAULT_CSD_SW_SHIELD_SEL_CFG);
 470              		.loc 1 171 0
 471 004c 484B     		ldr	r3, .L21+64
 472 004e 1C60     		str	r4, [r3]
 172:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR,   CapSense_DEFAULT_CSD_SW_AMUXBUF_SEL_CFG);
 473              		.loc 1 172 0
 474 0050 484B     		ldr	r3, .L21+68
 475 0052 1C60     		str	r4, [r3]
 173:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 476              		.loc 1 173 0
 477 0054 484B     		ldr	r3, .L21+72
 478 0056 1C60     		str	r4, [r3]
 175:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_SW_BYP_SEL_PTR);
 479              		.loc 1 175 0
 480 0058 FFF7FEFF 		bl	CyEnterCriticalSection
 481              	.LVL19:
 176:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~(CapSense_SW_BYP_SEL_SW_BYA_MASK);
 482              		.loc 1 176 0
 483 005c 474A     		ldr	r2, .L21+76
 484 005e 1168     		ldr	r1, [r2]
 485              	.LVL20:
 177:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= CapSense_DEFAULT_CSD_SW_BYP_SEL_CFG;
 486              		.loc 1 177 0
 487 0060 474B     		ldr	r3, .L21+80
 488 0062 0B40     		ands	r3, r1
 489              	.LVL21:
 178:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_BYP_SEL_PTR,       tmpRegVal);
 490              		.loc 1 178 0
 491 0064 8021     		movs	r1, #128
 492 0066 4901     		lsls	r1, r1, #5
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 47


 493 0068 0B43     		orrs	r3, r1
 494              	.LVL22:
 179:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 495              		.loc 1 179 0
 496 006a 1360     		str	r3, [r2]
 180:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 497              		.loc 1 180 0
 498 006c FFF7FEFF 		bl	CyExitCriticalSection
 499              	.LVL23:
 182:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_CMP_N_SEL_PTR,     CapSense_DEFAULT_CSD_SW_CMP_N_SEL_CFG);
 500              		.loc 1 182 0
 501 0070 3222     		movs	r2, #50
 502 0072 444B     		ldr	r3, .L21+84
 503 0074 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 504              		.loc 1 183 0
 505 0076 8022     		movs	r2, #128
 506 0078 5204     		lsls	r2, r2, #17
 507 007a 434B     		ldr	r3, .L21+88
 508 007c 1A60     		str	r2, [r3]
 185:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 509              		.loc 1 185 0
 510 007e FFF7FEFF 		bl	CyEnterCriticalSection
 511              	.LVL24:
 186:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_SW_REFGEN_SEL_SW_MASK;
 512              		.loc 1 186 0
 513 0082 424A     		ldr	r2, .L21+92
 514 0084 1168     		ldr	r1, [r2]
 515              	.LVL25:
 187:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= CapSense_DEFAULT_CSD_SW_REFGEN_SEL_CFG;
 516              		.loc 1 187 0
 517 0086 424B     		ldr	r3, .L21+96
 518 0088 0B40     		ands	r3, r1
 519              	.LVL26:
 188:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR,    tmpRegVal);
 520              		.loc 1 188 0
 521 008a 8021     		movs	r1, #128
 522 008c 4905     		lsls	r1, r1, #21
 523 008e 0B43     		orrs	r3, r1
 524              	.LVL27:
 189:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 525              		.loc 1 189 0
 526 0090 1360     		str	r3, [r2]
 190:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 527              		.loc 1 190 0
 528 0092 FFF7FEFF 		bl	CyExitCriticalSection
 529              	.LVL28:
 192:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR,   CapSense_DEFAULT_CSD_SW_FW_TANK_SEL_CFG);
 530              		.loc 1 192 0
 531 0096 3F4B     		ldr	r3, .L21+100
 532 0098 1C60     		str	r4, [r3]
 193:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_DSI_SEL_PTR,       CapSense_DEFAULT_CSD_SW_DSI_SEL_CFG);
 533              		.loc 1 193 0
 534 009a 3F4B     		ldr	r3, .L21+104
 535 009c 1C60     		str	r4, [r3]
 194:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_TIME_PTR,         CapSense_DEFAULT_CSD_SEQ_TIME_CFG);
 536              		.loc 1 194 0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 48


 537 009e 2322     		movs	r2, #35
 538 00a0 3E4B     		ldr	r3, .L21+108
 539 00a2 1A60     		str	r2, [r3]
 195:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_INIT_CNT_PTR,     CapSense_DEFAULT_CSD_SEQ_INIT_CNT_CFG);
 540              		.loc 1 195 0
 541 00a4 223A     		subs	r2, r2, #34
 542 00a6 3E4B     		ldr	r3, .L21+112
 543 00a8 1A60     		str	r2, [r3]
 196:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR,     CapSense_DEFAULT_CSD_SEQ_NORM_CNT_CFG);
 544              		.loc 1 196 0
 545 00aa 0332     		adds	r2, r2, #3
 546 00ac 3D4B     		ldr	r3, .L21+116
 547 00ae 1A60     		str	r2, [r3]
 197:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_ADC_CTL_PTR,          CapSense_DEFAULT_CSD_ADC_CTL_CFG);
 548              		.loc 1 197 0
 549 00b0 3D4B     		ldr	r3, .L21+120
 550 00b2 1C60     		str	r4, [r3]
 198:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_START_PTR,        CapSense_DEFAULT_CSD_SEQ_START_CFG);
 551              		.loc 1 198 0
 552 00b4 3D4B     		ldr	r3, .L21+124
 553 00b6 1C60     		str	r4, [r3]
 199:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CONFIG_PTR,           CapSense_DEFAULT_CSD_CONFIG_CFG);
 554              		.loc 1 199 0
 555 00b8 C222     		movs	r2, #194
 556 00ba 9200     		lsls	r2, r2, #2
 557 00bc 3C4B     		ldr	r3, .L21+128
 558 00be 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 559              		.loc 1 200 0
 560 00c0 3C4A     		ldr	r2, .L21+132
 561 00c2 3D4B     		ldr	r3, .L21+136
 562 00c4 1A60     		str	r2, [r3]
 202:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 563              		.loc 1 202 0
 564 00c6 FFF7FEFF 		bl	CapSense_BistDischargeExtCapacitors
 565              	.LVL29:
 204:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintA_PC_PTR);
 566              		.loc 1 204 0
 567 00ca FFF7FEFF 		bl	CyEnterCriticalSection
 568              	.LVL30:
 205:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= (~(CapSense_GPIO_PC_MASK << (CapSense_CintA_SHIFT * CapSense_GPIO_PC_BIT_SIZE)
 569              		.loc 1 205 0
 570 00ce 3B4C     		ldr	r4, .L21+140
 571 00d0 2268     		ldr	r2, [r4]
 572              	.LVL31:
 206:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintA_PC_PTR, tmpRegVal);
 573              		.loc 1 206 0
 574 00d2 3B4B     		ldr	r3, .L21+144
 575 00d4 1340     		ands	r3, r2
 576              	.LVL32:
 207:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 577              		.loc 1 207 0
 578 00d6 2360     		str	r3, [r4]
 208:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 579              		.loc 1 208 0
 580 00d8 FFF7FEFF 		bl	CyExitCriticalSection
 581              	.LVL33:
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 49


 210:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintB_PC_PTR);
 582              		.loc 1 210 0
 583 00dc FFF7FEFF 		bl	CyEnterCriticalSection
 584              	.LVL34:
 211:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= (~(CapSense_GPIO_PC_MASK << (CapSense_CintB__SHIFT * CapSense_GPIO_PC_BIT_SIZE
 585              		.loc 1 211 0
 586 00e0 2268     		ldr	r2, [r4]
 587              	.LVL35:
 212:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintB_PC_PTR, tmpRegVal);
 588              		.loc 1 212 0
 589 00e2 384B     		ldr	r3, .L21+148
 590 00e4 1340     		ands	r3, r2
 591              	.LVL36:
 213:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 592              		.loc 1 213 0
 593 00e6 2360     		str	r3, [r4]
 214:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 594              		.loc 1 214 0
 595 00e8 FFF7FEFF 		bl	CyExitCriticalSection
 596              	.LVL37:
 217:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
 597              		.loc 1 217 0
 598 00ec FFF7FEFF 		bl	CyEnterCriticalSection
 599              	.LVL38:
 218:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_CintA_HSIOM_MASK;
 600              		.loc 1 218 0
 601 00f0 354C     		ldr	r4, .L21+152
 602 00f2 2268     		ldr	r2, [r4]
 603              	.LVL39:
 219:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= (CapSense_HSIOM_SEL_AMUXA << CapSense_CintA_HSIOM_SHIFT);
 604              		.loc 1 219 0
 605 00f4 354B     		ldr	r3, .L21+156
 606 00f6 1340     		ands	r3, r2
 607              	.LVL40:
 220:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, tmpRegVal);
 608              		.loc 1 220 0
 609 00f8 C022     		movs	r2, #192
 610 00fa D200     		lsls	r2, r2, #3
 611 00fc 1343     		orrs	r3, r2
 612              	.LVL41:
 221:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 613              		.loc 1 221 0
 614 00fe 2360     		str	r3, [r4]
 222:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 615              		.loc 1 222 0
 616 0100 FFF7FEFF 		bl	CyExitCriticalSection
 617              	.LVL42:
 225:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 618              		.loc 1 225 0
 619 0104 FFF7FEFF 		bl	CyEnterCriticalSection
 620              	.LVL43:
 226:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_CintB_HSIOM_MASK;
 621              		.loc 1 226 0
 622 0108 2268     		ldr	r2, [r4]
 623              	.LVL44:
 227:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= (CapSense_HSIOM_SEL_AMUXA << CapSense_CintB_HSIOM_SHIFT);
 624              		.loc 1 227 0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 50


 625 010a 314B     		ldr	r3, .L21+160
 626 010c 1340     		ands	r3, r2
 627              	.LVL45:
 228:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, tmpRegVal);
 628              		.loc 1 228 0
 629 010e C022     		movs	r2, #192
 630 0110 D201     		lsls	r2, r2, #7
 631 0112 1343     		orrs	r3, r2
 632              	.LVL46:
 229:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 633              		.loc 1 229 0
 634 0114 2360     		str	r3, [r4]
 230:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 635              		.loc 1 230 0
 636 0116 FFF7FEFF 		bl	CyExitCriticalSection
 637              	.LVL47:
 232:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 638              		.loc 1 232 0
 639 011a 2E4B     		ldr	r3, .L21+164
 640 011c D87F     		ldrb	r0, [r3, #31]
 641 011e FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 642              	.LVL48:
 239:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 643              		.loc 1 239 0
 644 0122 FFF7FEFF 		bl	CapSense_SsSetIOsInDefaultState
 645              	.LVL49:
 298:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 646              		.loc 1 298 0
 647 0126 2C48     		ldr	r0, .L21+168
 648 0128 FFF7FEFF 		bl	CapSense_SsIsrInitialize
 649              	.LVL50:
 299:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 650              		.loc 1 299 0
 651              		@ sp needed
 652 012c 10BD     		pop	{r4, pc}
 653              	.L22:
 654 012e C046     		.align	2
 655              	.L21:
 656 0130 F0000B40 		.word	1074462960
 657 0134 F4000B40 		.word	1074462964
 658 0138 F8000B40 		.word	1074462968
 659 013c 80010B40 		.word	1074463104
 660 0140 84010B40 		.word	1074463108
 661 0144 411F0000 		.word	8001
 662 0148 88010B40 		.word	1074463112
 663 014c 8C010B40 		.word	1074463116
 664 0150 800E4301 		.word	21171840
 665 0154 C0010B40 		.word	1074463168
 666 0158 C4010B40 		.word	1074463172
 667 015c AA000500 		.word	327850
 668 0160 F0010B40 		.word	1074463216
 669 0164 00020B40 		.word	1074463232
 670 0168 04020B40 		.word	1074463236
 671 016c 80020B40 		.word	1074463360
 672 0170 84020B40 		.word	1074463364
 673 0174 88020B40 		.word	1074463368
 674 0178 90020B40 		.word	1074463376
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 51


 675 017c 94020B40 		.word	1074463380
 676 0180 FFEFFFFF 		.word	-4097
 677 0184 A0020B40 		.word	1074463392
 678 0188 A4020B40 		.word	1074463396
 679 018c A8020B40 		.word	1074463400
 680 0190 EEFFFEEE 		.word	-285278226
 681 0194 B0020B40 		.word	1074463408
 682 0198 B4020B40 		.word	1074463412
 683 019c C0020B40 		.word	1074463424
 684 01a0 00030B40 		.word	1074463488
 685 01a4 10030B40 		.word	1074463504
 686 01a8 14030B40 		.word	1074463508
 687 01ac 20030B40 		.word	1074463520
 688 01b0 40030B40 		.word	1074463552
 689 01b4 20100480 		.word	-2147217376
 690 01b8 00000B40 		.word	1074462720
 691 01bc 08040440 		.word	1074005000
 692 01c0 3FFEFFFF 		.word	-449
 693 01c4 FFF1FFFF 		.word	-3585
 694 01c8 00040240 		.word	1073873920
 695 01cc FFF0FFFF 		.word	-3841
 696 01d0 FF0FFFFF 		.word	-61441
 697 01d4 00000000 		.word	CapSense_dsRam
 698 01d8 00000000 		.word	CapSense_CSXScanISR
 699              		.cfi_endproc
 700              	.LFE1:
 701              		.size	CapSense_CSXInitialize, .-CapSense_CSXInitialize
 702              		.section	.text.CapSense_CSXScanExt,"ax",%progbits
 703              		.align	2
 704              		.global	CapSense_CSXScanExt
 705              		.code	16
 706              		.thumb_func
 707              		.type	CapSense_CSXScanExt, %function
 708              	CapSense_CSXScanExt:
 709              	.LFB6:
 871:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Reset multi-frequency scan channel if enabled */
 710              		.loc 1 871 0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 0
 713              		@ frame_needed = 0, uses_anonymous_args = 0
 714 0000 10B5     		push	{r4, lr}
 715              		.cfi_def_cfa_offset 8
 716              		.cfi_offset 4, -8
 717              		.cfi_offset 14, -4
 892:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 718              		.loc 1 892 0
 719 0002 054A     		ldr	r2, .L24
 720 0004 D168     		ldr	r1, [r2, #12]
 721 0006 8023     		movs	r3, #128
 722 0008 0B43     		orrs	r3, r1
 723 000a D360     		str	r3, [r2, #12]
 897:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 724              		.loc 1 897 0
 725 000c 1720     		movs	r0, #23
 726 000e FFF7FEFF 		bl	CyDelayUs
 727              	.LVL51:
 899:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 52


 728              		.loc 1 899 0
 729 0012 FFF7FEFF 		bl	CapSense_SsCSXStartSample
 730              	.LVL52:
 901:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 731              		.loc 1 901 0
 732              		@ sp needed
 733 0016 10BD     		pop	{r4, pc}
 734              	.L25:
 735              		.align	2
 736              	.L24:
 737 0018 00000000 		.word	CapSense_dsRam
 738              		.cfi_endproc
 739              	.LFE6:
 740              		.size	CapSense_CSXScanExt, .-CapSense_CSXScanExt
 741              		.section	.text.CapSense_CSXCalibrateWidget,"ax",%progbits
 742              		.align	2
 743              		.global	CapSense_CSXCalibrateWidget
 744              		.code	16
 745              		.thumb_func
 746              		.type	CapSense_CSXCalibrateWidget, %function
 747              	CapSense_CSXCalibrateWidget:
 748              	.LFB9:
1459:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Variable to calculate raw count target */
 749              		.loc 1 1459 0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 8
 752              		@ frame_needed = 0, uses_anonymous_args = 0
 753              	.LVL53:
 754 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 755              		.cfi_def_cfa_offset 20
 756              		.cfi_offset 4, -20
 757              		.cfi_offset 5, -16
 758              		.cfi_offset 6, -12
 759              		.cfi_offset 7, -8
 760              		.cfi_offset 14, -4
 761 0002 4F46     		mov	r7, r9
 762 0004 80B4     		push	{r7}
 763              		.cfi_def_cfa_offset 24
 764              		.cfi_offset 9, -24
 765 0006 82B0     		sub	sp, sp, #8
 766              		.cfi_def_cfa_offset 32
 767 0008 0190     		str	r0, [sp, #4]
 768 000a 0E00     		movs	r6, r1
 769              	.LVL54:
1473:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 770              		.loc 1 1473 0
 771 000c 2C24     		movs	r4, #44
 772 000e 4443     		muls	r4, r0
 773 0010 2A4B     		ldr	r3, .L36
 774 0012 1C19     		adds	r4, r3, r4
 775 0014 A368     		ldr	r3, [r4, #8]
 776 0016 9946     		mov	r9, r3
 777 0018 294B     		ldr	r3, .L36+4
 778 001a 4A46     		mov	r2, r9
 779 001c 1A60     		str	r2, [r3]
1477:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             (CapSense_RAM_WD_BASE_STRUCT *)CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam);
 780              		.loc 1 1477 0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 53


 781 001e 6068     		ldr	r0, [r4, #4]
 782              	.LVL55:
 783 0020 FFF7FEFF 		bl	CapSense_SsCalcCsxScanPeriod
 784              	.LVL56:
 785 0024 274B     		ldr	r3, .L36+8
 786 0026 1880     		strh	r0, [r3]
1479:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         rawTarget = (rawTarget * target) / CapSense_PERCENTAGE_100;
 787              		.loc 1 1479 0
 788 0028 1888     		ldrh	r0, [r3]
 789              	.LVL57:
1480:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 790              		.loc 1 1480 0
 791 002a 7043     		muls	r0, r6
 792              	.LVL58:
 793 002c 6421     		movs	r1, #100
 794 002e FFF7FEFF 		bl	__aeabi_uidiv
 795              	.LVL59:
 796 0032 0700     		movs	r7, r0
 797              	.LVL60:
1484:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
 798              		.loc 1 1484 0
 799 0034 E37E     		ldrb	r3, [r4, #27]
1483:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****        CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 800              		.loc 1 1483 0
 801 0036 022B     		cmp	r3, #2
 802 0038 3CD1     		bne	.L26
1487:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     (uint32)CapSense_dsFlash.wdgtArray[widgetId].numRows);
 803              		.loc 1 1487 0
 804 003a 2A33     		adds	r3, r3, #42
 805 003c 019A     		ldr	r2, [sp, #4]
 806 003e 5343     		muls	r3, r2
 807 0040 1E4A     		ldr	r2, .L36
 808 0042 D318     		adds	r3, r2, r3
 809 0044 1A7F     		ldrb	r2, [r3, #28]
1488:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 810              		.loc 1 1488 0
 811 0046 5E7F     		ldrb	r6, [r3, #29]
1487:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     (uint32)CapSense_dsFlash.wdgtArray[widgetId].numRows);
 812              		.loc 1 1487 0
 813 0048 5643     		muls	r6, r2
 814              	.LVL61:
1491:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 815              		.loc 1 1491 0
 816 004a 0021     		movs	r1, #0
 817 004c 09E0     		b	.L28
 818              	.LVL62:
 819              	.L29:
1493:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_0] = curIdacMask;
 820              		.loc 1 1493 0 discriminator 3
 821 004e 1C4A     		ldr	r2, .L36+4
 822 0050 0023     		movs	r3, #0
 823 0052 1068     		ldr	r0, [r2]
 824 0054 0380     		strh	r3, [r0]
1494:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 825              		.loc 1 1494 0 discriminator 3
 826 0056 1368     		ldr	r3, [r2]
 827 0058 4020     		movs	r0, #64
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 54


 828 005a 5872     		strb	r0, [r3, #9]
1501:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 829              		.loc 1 1501 0 discriminator 3
 830 005c 0A33     		adds	r3, r3, #10
 831 005e 1360     		str	r3, [r2]
1491:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 832              		.loc 1 1491 0 discriminator 3
 833 0060 0131     		adds	r1, r1, #1
 834              	.LVL63:
 835              	.L28:
1491:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 836              		.loc 1 1491 0 is_stmt 0 discriminator 1
 837 0062 B142     		cmp	r1, r6
 838 0064 F3D3     		bcc	.L29
 839 0066 2024     		movs	r4, #32
 840 0068 4025     		movs	r5, #64
 841 006a 00E0     		b	.L34
 842              	.LVL64:
 843              	.L35:
1555:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 844              		.loc 1 1555 0 is_stmt 1
 845 006c 1C00     		movs	r4, r3
 846              	.LVL65:
 847              	.L34:
1508:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             (void)CapSense_Scan();
 848              		.loc 1 1508 0
 849 006e 0198     		ldr	r0, [sp, #4]
 850 0070 FFF7FEFF 		bl	CapSense_SetupWidget
 851              	.LVL66:
1509:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 852              		.loc 1 1509 0
 853 0074 FFF7FEFF 		bl	CapSense_Scan
 854              	.LVL67:
 855              	.L30:
1511:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 856              		.loc 1 1511 0 discriminator 1
 857 0078 134B     		ldr	r3, .L36+12
 858 007a DB68     		ldr	r3, [r3, #12]
 859 007c 1B06     		lsls	r3, r3, #24
 860 007e FBD4     		bmi	.L30
1516:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 861              		.loc 1 1516 0
 862 0080 0F4B     		ldr	r3, .L36+4
 863 0082 4A46     		mov	r2, r9
 864 0084 1A60     		str	r2, [r3]
 865              	.LVL68:
1519:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 866              		.loc 1 1519 0
 867 0086 0021     		movs	r1, #0
 868 0088 0EE0     		b	.L31
 869              	.LVL69:
 870              	.L33:
1530:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 871              		.loc 1 1530 0
 872 008a 0D4B     		ldr	r3, .L36+4
 873 008c 1B68     		ldr	r3, [r3]
 874 008e 1A88     		ldrh	r2, [r3]
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 55


 875 0090 9742     		cmp	r7, r2
 876 0092 02D2     		bcs	.L32
1532:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
 877              		.loc 1 1532 0
 878 0094 5A7A     		ldrb	r2, [r3, #9]
 879 0096 AA43     		bics	r2, r5
 880 0098 5A72     		strb	r2, [r3, #9]
 881              	.L32:
1534:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 882              		.loc 1 1534 0 discriminator 2
 883 009a 5A7A     		ldrb	r2, [r3, #9]
 884 009c 2243     		orrs	r2, r4
 885 009e 5A72     		strb	r2, [r3, #9]
1550:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
 886              		.loc 1 1550 0 discriminator 2
 887 00a0 0A33     		adds	r3, r3, #10
 888 00a2 074A     		ldr	r2, .L36+4
 889 00a4 1360     		str	r3, [r2]
1519:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 890              		.loc 1 1519 0 discriminator 2
 891 00a6 0131     		adds	r1, r1, #1
 892              	.LVL70:
 893              	.L31:
1519:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 894              		.loc 1 1519 0 is_stmt 0 discriminator 1
 895 00a8 B142     		cmp	r1, r6
 896 00aa EED3     		bcc	.L33
 897              	.LVL71:
1555:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 898              		.loc 1 1555 0 is_stmt 1
 899 00ac 6308     		lsrs	r3, r4, #1
 900 00ae DBB2     		uxtb	r3, r3
 901              	.LVL72:
1554:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             nextIdacMask = nextIdacMask >> 1u;
 902              		.loc 1 1554 0
 903 00b0 251E     		subs	r5, r4, #0
1557:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
 904              		.loc 1 1557 0
 905 00b2 DBD1     		bne	.L35
 906              	.LVL73:
 907              	.L26:
1559:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 908              		.loc 1 1559 0
 909 00b4 02B0     		add	sp, sp, #8
 910              		@ sp needed
 911              	.LVL74:
 912 00b6 04BC     		pop	{r2}
 913 00b8 9146     		mov	r9, r2
 914 00ba F0BD     		pop	{r4, r5, r6, r7, pc}
 915              	.L37:
 916              		.align	2
 917              	.L36:
 918 00bc 00000000 		.word	CapSense_dsFlash
 919 00c0 00000000 		.word	CapSense_curRamSnsPtr
 920 00c4 00000000 		.word	.LANCHOR0
 921 00c8 00000000 		.word	CapSense_dsRam
 922              		.cfi_endproc
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 56


 923              	.LFE9:
 924              		.size	CapSense_CSXCalibrateWidget, .-CapSense_CSXCalibrateWidget
 925              		.section	.text.CapSense_CSXConnectTx,"ax",%progbits
 926              		.align	2
 927              		.global	CapSense_CSXConnectTx
 928              		.code	16
 929              		.thumb_func
 930              		.type	CapSense_CSXConnectTx, %function
 931              	CapSense_CSXConnectTx:
 932              	.LFB11:
1666:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
 933              		.loc 1 1666 0
 934              		.cfi_startproc
 935              		@ args = 0, pretend = 0, frame = 0
 936              		@ frame_needed = 0, uses_anonymous_args = 0
 937              	.LVL75:
 938 0000 10B5     		push	{r4, lr}
 939              		.cfi_def_cfa_offset 8
 940              		.cfi_offset 4, -8
 941              		.cfi_offset 14, -4
1669:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |= (CapSense_GPIO_STRGDRV << txPtr->shift);
 942              		.loc 1 1669 0
 943 0002 4268     		ldr	r2, [r0, #4]
 944 0004 1168     		ldr	r1, [r2]
 945              	.LVL76:
1670:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->pcPtr, regValue);
 946              		.loc 1 1670 0
 947 0006 847E     		ldrb	r4, [r0, #26]
 948 0008 0623     		movs	r3, #6
 949 000a A340     		lsls	r3, r3, r4
 950 000c 0B43     		orrs	r3, r1
 951              	.LVL77:
1671:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 952              		.loc 1 1671 0
 953 000e 1360     		str	r3, [r2]
1673:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |= (CapSense_HSIOM_SEL_CSD_SENSE << txPtr->hsiomShift);
 954              		.loc 1 1673 0
 955 0010 0268     		ldr	r2, [r0]
 956 0012 1168     		ldr	r1, [r2]
 957              	.LVL78:
1674:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
 958              		.loc 1 1674 0
 959 0014 007E     		ldrb	r0, [r0, #24]
 960              	.LVL79:
 961 0016 0423     		movs	r3, #4
 962 0018 8340     		lsls	r3, r3, r0
 963 001a 0B43     		orrs	r3, r1
 964              	.LVL80:
1675:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 965              		.loc 1 1675 0
 966 001c 1360     		str	r3, [r2]
1676:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 967              		.loc 1 1676 0
 968              		@ sp needed
 969 001e 10BD     		pop	{r4, pc}
 970              		.cfi_endproc
 971              	.LFE11:
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 57


 972              		.size	CapSense_CSXConnectTx, .-CapSense_CSXConnectTx
 973              		.section	.text.CapSense_CSXConnectRx,"ax",%progbits
 974              		.align	2
 975              		.global	CapSense_CSXConnectRx
 976              		.code	16
 977              		.thumb_func
 978              		.type	CapSense_CSXConnectRx, %function
 979              	CapSense_CSXConnectRx:
 980              	.LFB12:
1700:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
 981              		.loc 1 1700 0
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 0
 984              		@ frame_needed = 0, uses_anonymous_args = 0
 985              	.LVL81:
 986 0000 10B5     		push	{r4, lr}
 987              		.cfi_def_cfa_offset 8
 988              		.cfi_offset 4, -8
 989              		.cfi_offset 14, -4
1703:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(CapSense_GPIO_PC_MASK << rxPtr->shift);
 990              		.loc 1 1703 0
 991 0002 4168     		ldr	r1, [r0, #4]
 992 0004 0B68     		ldr	r3, [r1]
 993              	.LVL82:
1704:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->pcPtr, regValue);
 994              		.loc 1 1704 0
 995 0006 847E     		ldrb	r4, [r0, #26]
 996 0008 0722     		movs	r2, #7
 997 000a A240     		lsls	r2, r2, r4
 998 000c 9343     		bics	r3, r2
 999              	.LVL83:
1705:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1000              		.loc 1 1705 0
 1001 000e 0B60     		str	r3, [r1]
1707:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |=  (CapSense_HSIOM_SEL_AMUXA << rxPtr->hsiomShift);
 1002              		.loc 1 1707 0
 1003 0010 0268     		ldr	r2, [r0]
 1004 0012 1168     		ldr	r1, [r2]
 1005              	.LVL84:
1708:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
 1006              		.loc 1 1708 0
 1007 0014 007E     		ldrb	r0, [r0, #24]
 1008              	.LVL85:
 1009 0016 0623     		movs	r3, #6
 1010 0018 8340     		lsls	r3, r3, r0
 1011 001a 0B43     		orrs	r3, r1
 1012              	.LVL86:
1709:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 1013              		.loc 1 1709 0
 1014 001c 1360     		str	r3, [r2]
1710:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1015              		.loc 1 1710 0
 1016              		@ sp needed
 1017 001e 10BD     		pop	{r4, pc}
 1018              		.cfi_endproc
 1019              	.LFE12:
 1020              		.size	CapSense_CSXConnectRx, .-CapSense_CSXConnectRx
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 58


 1021              		.section	.text.CapSense_CSXScan,"ax",%progbits
 1022              		.align	2
 1023              		.global	CapSense_CSXScan
 1024              		.code	16
 1025              		.thumb_func
 1026              		.type	CapSense_CSXScan, %function
 1027              	CapSense_CSXScan:
 1028              	.LFB5:
 646:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 1029              		.loc 1 646 0
 1030              		.cfi_startproc
 1031              		@ args = 0, pretend = 0, frame = 0
 1032              		@ frame_needed = 0, uses_anonymous_args = 0
 1033 0000 10B5     		push	{r4, lr}
 1034              		.cfi_def_cfa_offset 8
 1035              		.cfi_offset 4, -8
 1036              		.cfi_offset 14, -4
 655:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1037              		.loc 1 655 0
 1038 0002 0022     		movs	r2, #0
 1039 0004 124B     		ldr	r3, .L41
 1040 0006 1A70     		strb	r2, [r3]
 658:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1041              		.loc 1 658 0
 1042 0008 124B     		ldr	r3, .L41+4
 1043 000a 1B68     		ldr	r3, [r3]
 1044 000c 124A     		ldr	r2, .L41+8
 1045 000e 9968     		ldr	r1, [r3, #8]
 1046 0010 1160     		str	r1, [r2]
 746:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_curWdgtTotalRx  = CapSense_curFlashWdgtPtr->numCols;
 1047              		.loc 1 746 0
 1048 0012 5A7F     		ldrb	r2, [r3, #29]
 1049 0014 114C     		ldr	r4, .L41+12
 1050 0016 A280     		strh	r2, [r4, #4]
 747:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1051              		.loc 1 747 0
 1052 0018 1A7F     		ldrb	r2, [r3, #28]
 1053 001a E280     		strh	r2, [r4, #6]
 797:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = CapSense_curRxIOPtr;
 1054              		.loc 1 797 0
 1055 001c 1968     		ldr	r1, [r3]
 1056 001e A160     		str	r1, [r4, #8]
 799:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1057              		.loc 1 799 0
 1058 0020 D300     		lsls	r3, r2, #3
 1059 0022 981A     		subs	r0, r3, r2
 1060 0024 8000     		lsls	r0, r0, #2
 1061 0026 0818     		adds	r0, r1, r0
 1062 0028 E060     		str	r0, [r4, #12]
 802:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXConnectRx(CapSense_curRxIOPtr);
 1063              		.loc 1 802 0
 1064 002a FFF7FEFF 		bl	CapSense_CSXConnectTx
 1065              	.LVL87:
 803:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1066              		.loc 1 803 0
 1067 002e A068     		ldr	r0, [r4, #8]
 1068 0030 FFF7FEFF 		bl	CapSense_CSXConnectRx
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 59


 1069              	.LVL88:
 806:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
 1070              		.loc 1 806 0
 1071 0034 0A4A     		ldr	r2, .L41+16
 1072 0036 0B4B     		ldr	r3, .L41+20
 1073 0038 1A60     		str	r2, [r3]
 815:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1074              		.loc 1 815 0
 1075 003a 0B4A     		ldr	r2, .L41+24
 1076 003c D168     		ldr	r1, [r2, #12]
 1077 003e 8023     		movs	r3, #128
 1078 0040 0B43     		orrs	r3, r1
 1079 0042 D360     		str	r3, [r2, #12]
 820:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 1080              		.loc 1 820 0
 1081 0044 1720     		movs	r0, #23
 1082 0046 FFF7FEFF 		bl	CyDelayUs
 1083              	.LVL89:
 822:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1084              		.loc 1 822 0
 1085 004a FFF7FEFF 		bl	CapSense_SsCSXStartSample
 1086              	.LVL90:
 825:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1087              		.loc 1 825 0
 1088              		@ sp needed
 1089 004e 10BD     		pop	{r4, pc}
 1090              	.L42:
 1091              		.align	2
 1092              	.L41:
 1093 0050 00000000 		.word	CapSense_sensorIndex
 1094 0054 00000000 		.word	CapSense_curFlashWdgtPtr
 1095 0058 00000000 		.word	CapSense_curRamSnsPtr
 1096 005c 00000000 		.word	.LANCHOR0
 1097 0060 00000000 		.word	CapSense_SsCSXPostMultiScan
 1098 0064 00000000 		.word	.LANCHOR1
 1099 0068 00000000 		.word	CapSense_dsRam
 1100              		.cfi_endproc
 1101              	.LFE5:
 1102              		.size	CapSense_CSXScan, .-CapSense_CSXScan
 1103              		.section	.text.CapSense_CSXDisconnectTx,"ax",%progbits
 1104              		.align	2
 1105              		.global	CapSense_CSXDisconnectTx
 1106              		.code	16
 1107              		.thumb_func
 1108              		.type	CapSense_CSXDisconnectTx, %function
 1109              	CapSense_CSXDisconnectTx:
 1110              	.LFB13:
1735:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
 1111              		.loc 1 1735 0
 1112              		.cfi_startproc
 1113              		@ args = 0, pretend = 0, frame = 0
 1114              		@ frame_needed = 0, uses_anonymous_args = 0
 1115              		@ link register save eliminated.
 1116              	.LVL91:
1738:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(txPtr->hsiomMask);
 1117              		.loc 1 1738 0
 1118 0000 0268     		ldr	r2, [r0]
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 60


 1119 0002 1368     		ldr	r3, [r2]
 1120              	.LVL92:
1739:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
 1121              		.loc 1 1739 0
 1122 0004 0169     		ldr	r1, [r0, #16]
 1123 0006 8B43     		bics	r3, r1
 1124              	.LVL93:
1740:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 1125              		.loc 1 1740 0
 1126 0008 1360     		str	r3, [r2]
1741:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1127              		.loc 1 1741 0
 1128              		@ sp needed
 1129 000a 7047     		bx	lr
 1130              		.cfi_endproc
 1131              	.LFE13:
 1132              		.size	CapSense_CSXDisconnectTx, .-CapSense_CSXDisconnectTx
 1133              		.section	.text.CapSense_CSXDisconnectRx,"ax",%progbits
 1134              		.align	2
 1135              		.global	CapSense_CSXDisconnectRx
 1136              		.code	16
 1137              		.thumb_func
 1138              		.type	CapSense_CSXDisconnectRx, %function
 1139              	CapSense_CSXDisconnectRx:
 1140              	.LFB14:
1766:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
 1141              		.loc 1 1766 0
 1142              		.cfi_startproc
 1143              		@ args = 0, pretend = 0, frame = 0
 1144              		@ frame_needed = 0, uses_anonymous_args = 0
 1145              	.LVL94:
 1146 0000 10B5     		push	{r4, lr}
 1147              		.cfi_def_cfa_offset 8
 1148              		.cfi_offset 4, -8
 1149              		.cfi_offset 14, -4
1769:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(rxPtr->hsiomMask);
 1150              		.loc 1 1769 0
 1151 0002 0268     		ldr	r2, [r0]
 1152 0004 1368     		ldr	r3, [r2]
 1153              	.LVL95:
1770:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
 1154              		.loc 1 1770 0
 1155 0006 0169     		ldr	r1, [r0, #16]
 1156 0008 8B43     		bics	r3, r1
 1157              	.LVL96:
1771:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1158              		.loc 1 1771 0
 1159 000a 1360     		str	r3, [r2]
1773:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(CapSense_GPIO_PC_MASK << rxPtr->shift);
 1160              		.loc 1 1773 0
 1161 000c 4168     		ldr	r1, [r0, #4]
 1162 000e 0B68     		ldr	r3, [r1]
 1163              	.LVL97:
1774:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |=  (CapSense_GPIO_STRGDRV << rxPtr->shift);
 1164              		.loc 1 1774 0
 1165 0010 847E     		ldrb	r4, [r0, #26]
 1166 0012 0722     		movs	r2, #7
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 61


 1167 0014 A240     		lsls	r2, r2, r4
 1168 0016 9343     		bics	r3, r2
 1169              	.LVL98:
 1170 0018 1A00     		movs	r2, r3
 1171              	.LVL99:
1775:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->pcPtr, regValue);
 1172              		.loc 1 1775 0
 1173 001a 0623     		movs	r3, #6
 1174 001c A340     		lsls	r3, r3, r4
 1175 001e 1343     		orrs	r3, r2
 1176              	.LVL100:
1776:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1177              		.loc 1 1776 0
 1178 0020 0B60     		str	r3, [r1]
1778:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &=  ~(rxPtr->mask);
 1179              		.loc 1 1778 0
 1180 0022 8268     		ldr	r2, [r0, #8]
 1181 0024 1368     		ldr	r3, [r2]
 1182              	.LVL101:
1779:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->drPtr, regValue);
 1183              		.loc 1 1779 0
 1184 0026 4169     		ldr	r1, [r0, #20]
 1185 0028 8B43     		bics	r3, r1
 1186              	.LVL102:
1780:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 1187              		.loc 1 1780 0
 1188 002a 1360     		str	r3, [r2]
1781:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1189              		.loc 1 1781 0
 1190              		@ sp needed
 1191 002c 10BD     		pop	{r4, pc}
 1192              		.cfi_endproc
 1193              	.LFE14:
 1194              		.size	CapSense_CSXDisconnectRx, .-CapSense_CSXDisconnectRx
 1195 002e C046     		.section	.text.CapSense_SsCSXPostMultiScan,"ax",%progbits
 1196              		.align	2
 1197              		.code	16
 1198              		.thumb_func
 1199              		.type	CapSense_SsCSXPostMultiScan, %function
 1200              	CapSense_SsCSXPostMultiScan:
 1201              	.LFB7:
 916:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_ENTRY_CALLBACK
 1202              		.loc 1 916 0
 1203              		.cfi_startproc
 1204              		@ args = 0, pretend = 0, frame = 0
 1205              		@ frame_needed = 0, uses_anonymous_args = 0
 1206 0000 10B5     		push	{r4, lr}
 1207              		.cfi_def_cfa_offset 8
 1208              		.cfi_offset 4, -8
 1209              		.cfi_offset 14, -4
 922:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                              (CapSense_csxScanPeriod - CapSense_csxRawCount);
 1210              		.loc 1 922 0
 1211 0002 2F4B     		ldr	r3, .L50
 1212 0004 1968     		ldr	r1, [r3]
 1213 0006 2F4B     		ldr	r3, .L50+4
 1214 0008 1B78     		ldrb	r3, [r3]
 1215 000a 2F4C     		ldr	r4, .L50+8
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 62


 1216 000c 2288     		ldrh	r2, [r4]
 1217 000e 6088     		ldrh	r0, [r4, #2]
 1218 0010 5B00     		lsls	r3, r3, #1
 1219 0012 121A     		subs	r2, r2, r0
 1220 0014 5A52     		strh	r2, [r3, r1]
1014:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1221              		.loc 1 1014 0
 1222 0016 E068     		ldr	r0, [r4, #12]
 1223 0018 FFF7FEFF 		bl	CapSense_CSXDisconnectTx
 1224              	.LVL103:
1017:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1225              		.loc 1 1017 0
 1226 001c 2B4A     		ldr	r2, .L50+12
 1227 001e 1378     		ldrb	r3, [r2]
 1228 0020 0133     		adds	r3, r3, #1
 1229 0022 DBB2     		uxtb	r3, r3
 1230 0024 1370     		strb	r3, [r2]
1023:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 if (CapSense_curWdgtTotalTx > 0u)
 1231              		.loc 1 1023 0
 1232 0026 A388     		ldrh	r3, [r4, #4]
 1233 0028 013B     		subs	r3, r3, #1
 1234 002a 9BB2     		uxth	r3, r3
 1235 002c A380     		strh	r3, [r4, #4]
1024:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 1236              		.loc 1 1024 0
 1237 002e 002B     		cmp	r3, #0
 1238 0030 0CD0     		beq	.L46
1031:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXConnectTx (CapSense_curTxIOPtr);
 1239              		.loc 1 1031 0
 1240 0032 254B     		ldr	r3, .L50+8
 1241 0034 D868     		ldr	r0, [r3, #12]
 1242 0036 1C30     		adds	r0, r0, #28
 1243 0038 D860     		str	r0, [r3, #12]
1032:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr++;
 1244              		.loc 1 1032 0
 1245 003a FFF7FEFF 		bl	CapSense_CSXConnectTx
 1246              	.LVL104:
1033:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1247              		.loc 1 1033 0
 1248 003e 204A     		ldr	r2, .L50
 1249 0040 1368     		ldr	r3, [r2]
 1250 0042 0A33     		adds	r3, r3, #10
 1251 0044 1360     		str	r3, [r2]
1036:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
 1252              		.loc 1 1036 0
 1253 0046 FFF7FEFF 		bl	CapSense_SsCSXStartSample
 1254              	.LVL105:
 1255 004a 37E0     		b	.L45
 1256              	.L46:
1042:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_curWdgtTotalRx > 0u)
 1257              		.loc 1 1042 0
 1258 004c 1E4A     		ldr	r2, .L50+8
 1259 004e D388     		ldrh	r3, [r2, #6]
 1260 0050 013B     		subs	r3, r3, #1
 1261 0052 9BB2     		uxth	r3, r3
 1262 0054 D380     		strh	r3, [r2, #6]
1043:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 63


 1263              		.loc 1 1043 0
 1264 0056 002B     		cmp	r3, #0
 1265 0058 1DD0     		beq	.L48
1052:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRxIOPtr++;
 1266              		.loc 1 1052 0
 1267 005a 1400     		movs	r4, r2
 1268 005c 9068     		ldr	r0, [r2, #8]
 1269 005e FFF7FEFF 		bl	CapSense_CSXDisconnectRx
 1270              	.LVL106:
1053:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectRx(CapSense_curRxIOPtr);
 1271              		.loc 1 1053 0
 1272 0062 A068     		ldr	r0, [r4, #8]
 1273 0064 1C30     		adds	r0, r0, #28
 1274 0066 A060     		str	r0, [r4, #8]
1054:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curWdgtTotalTx  = CapSense_curFlashWdgtPtr->numRows;
 1275              		.loc 1 1054 0
 1276 0068 FFF7FEFF 		bl	CapSense_CSXConnectRx
 1277              	.LVL107:
1055:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curTxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFlashWd
 1278              		.loc 1 1055 0
 1279 006c 184B     		ldr	r3, .L50+16
 1280 006e 1B68     		ldr	r3, [r3]
 1281 0070 5A7F     		ldrb	r2, [r3, #29]
 1282 0072 A280     		strh	r2, [r4, #4]
1056:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curTxIOPtr = & CapSense_curTxIOPtr[(CapSense_curFlashWdgtPtr->numC
 1283              		.loc 1 1056 0
 1284 0074 1868     		ldr	r0, [r3]
 1285 0076 E060     		str	r0, [r4, #12]
1057:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectTx(CapSense_curTxIOPtr);
 1286              		.loc 1 1057 0
 1287 0078 1A7F     		ldrb	r2, [r3, #28]
 1288 007a D300     		lsls	r3, r2, #3
 1289 007c 9A1A     		subs	r2, r3, r2
 1290 007e 9300     		lsls	r3, r2, #2
 1291 0080 C018     		adds	r0, r0, r3
 1292 0082 E060     		str	r0, [r4, #12]
1058:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1293              		.loc 1 1058 0
 1294 0084 FFF7FEFF 		bl	CapSense_CSXConnectTx
 1295              	.LVL108:
1061:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1296              		.loc 1 1061 0
 1297 0088 0D4A     		ldr	r2, .L50
 1298 008a 1368     		ldr	r3, [r2]
 1299 008c 0A33     		adds	r3, r3, #10
 1300 008e 1360     		str	r3, [r2]
1064:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
 1301              		.loc 1 1064 0
 1302 0090 FFF7FEFF 		bl	CapSense_SsCSXStartSample
 1303              	.LVL109:
 1304 0094 12E0     		b	.L45
 1305              	.L48:
1069:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1306              		.loc 1 1069 0
 1307 0096 0C4B     		ldr	r3, .L50+8
 1308 0098 9868     		ldr	r0, [r3, #8]
 1309 009a FFF7FEFF 		bl	CapSense_CSXDisconnectRx
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 64


 1310              	.LVL110:
1072:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
 1311              		.loc 1 1072 0
 1312 009e 0D4B     		ldr	r3, .L50+20
 1313 00a0 1B78     		ldrb	r3, [r3]
 1314 00a2 002B     		cmp	r3, #0
 1315 00a4 02D0     		beq	.L49
1074:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
 1316              		.loc 1 1074 0
 1317 00a6 FFF7FEFF 		bl	CapSense_SsPostAllWidgetsScan
 1318              	.LVL111:
 1319 00aa 07E0     		b	.L45
 1320              	.L49:
1083:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
 1321              		.loc 1 1083 0
 1322 00ac 0A4B     		ldr	r3, .L50+24
 1323 00ae 1A89     		ldrh	r2, [r3, #8]
 1324 00b0 0132     		adds	r2, r2, #1
 1325 00b2 1A81     		strh	r2, [r3, #8]
1084:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
 1326              		.loc 1 1084 0
 1327 00b4 DA68     		ldr	r2, [r3, #12]
 1328 00b6 8021     		movs	r1, #128
 1329 00b8 8A43     		bics	r2, r1
 1330 00ba DA60     		str	r2, [r3, #12]
 1331              	.L45:
1094:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1332              		.loc 1 1094 0
 1333              		@ sp needed
 1334 00bc 10BD     		pop	{r4, pc}
 1335              	.L51:
 1336 00be C046     		.align	2
 1337              	.L50:
 1338 00c0 00000000 		.word	CapSense_curRamSnsPtr
 1339 00c4 00000000 		.word	CapSense_scanFreqIndex
 1340 00c8 00000000 		.word	.LANCHOR0
 1341 00cc 00000000 		.word	CapSense_sensorIndex
 1342 00d0 00000000 		.word	CapSense_curFlashWdgtPtr
 1343 00d4 00000000 		.word	CapSense_requestScanAllWidget
 1344 00d8 00000000 		.word	CapSense_dsRam
 1345              		.cfi_endproc
 1346              	.LFE7:
 1347              		.size	CapSense_SsCSXPostMultiScan, .-CapSense_SsCSXPostMultiScan
 1348              		.section	.text.CapSense_CSXElectrodeCheck,"ax",%progbits
 1349              		.align	2
 1350              		.global	CapSense_CSXElectrodeCheck
 1351              		.code	16
 1352              		.thumb_func
 1353              		.type	CapSense_CSXElectrodeCheck, %function
 1354              	CapSense_CSXElectrodeCheck:
 1355              	.LFB2:
 316:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 1356              		.loc 1 316 0
 1357              		.cfi_startproc
 1358              		@ args = 0, pretend = 0, frame = 0
 1359              		@ frame_needed = 0, uses_anonymous_args = 0
 1360 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 65


 1361              		.cfi_def_cfa_offset 8
 1362              		.cfi_offset 4, -8
 1363              		.cfi_offset 14, -4
 321:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
 1364              		.loc 1 321 0
 1365 0002 074B     		ldr	r3, .L54
 1366 0004 1B8A     		ldrh	r3, [r3, #16]
 1367 0006 002B     		cmp	r3, #0
 1368 0008 08D0     		beq	.L52
 360:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXDisconnectRx(CapSense_curRxIOPtr);
 1369              		.loc 1 360 0
 1370 000a 054C     		ldr	r4, .L54
 1371 000c E068     		ldr	r0, [r4, #12]
 1372 000e FFF7FEFF 		bl	CapSense_CSXDisconnectTx
 1373              	.LVL112:
 361:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 1374              		.loc 1 361 0
 1375 0012 A068     		ldr	r0, [r4, #8]
 1376 0014 FFF7FEFF 		bl	CapSense_CSXDisconnectRx
 1377              	.LVL113:
 363:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
 1378              		.loc 1 363 0
 1379 0018 0023     		movs	r3, #0
 1380 001a 2382     		strh	r3, [r4, #16]
 1381              	.L52:
 365:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1382              		.loc 1 365 0
 1383              		@ sp needed
 1384 001c 10BD     		pop	{r4, pc}
 1385              	.L55:
 1386 001e C046     		.align	2
 1387              	.L54:
 1388 0020 00000000 		.word	.LANCHOR0
 1389              		.cfi_endproc
 1390              	.LFE2:
 1391              		.size	CapSense_CSXElectrodeCheck, .-CapSense_CSXElectrodeCheck
 1392              		.section	.text.CapSense_CSXSetupWidget,"ax",%progbits
 1393              		.align	2
 1394              		.global	CapSense_CSXSetupWidget
 1395              		.code	16
 1396              		.thumb_func
 1397              		.type	CapSense_CSXSetupWidget, %function
 1398              	CapSense_CSXSetupWidget:
 1399              	.LFB3:
 407:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* variable to access widget details */
 1400              		.loc 1 407 0
 1401              		.cfi_startproc
 1402              		@ args = 0, pretend = 0, frame = 0
 1403              		@ frame_needed = 0, uses_anonymous_args = 0
 1404              	.LVL114:
 1405 0000 70B5     		push	{r4, r5, r6, lr}
 1406              		.cfi_def_cfa_offset 16
 1407              		.cfi_offset 4, -16
 1408              		.cfi_offset 5, -12
 1409              		.cfi_offset 6, -8
 1410              		.cfi_offset 14, -4
 1411 0002 0400     		movs	r4, r0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 66


 417:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1412              		.loc 1 417 0
 1413 0004 C2B2     		uxtb	r2, r0
 1414 0006 124B     		ldr	r3, .L57
 1415 0008 1A70     		strb	r2, [r3]
 419:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1416              		.loc 1 419 0
 1417 000a 0220     		movs	r0, #2
 1418              	.LVL115:
 1419 000c FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 1420              	.LVL116:
 425:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1421              		.loc 1 425 0
 1422 0010 FFF7FEFF 		bl	CapSense_CSXElectrodeCheck
 1423              	.LVL117:
 429:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1424              		.loc 1 429 0
 1425 0014 2C20     		movs	r0, #44
 1426 0016 6043     		muls	r0, r4
 1427 0018 0E4B     		ldr	r3, .L57+4
 1428 001a C018     		adds	r0, r0, r3
 1429 001c 0E4B     		ldr	r3, .L57+8
 1430 001e 1860     		str	r0, [r3]
 431:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1431              		.loc 1 431 0
 1432 0020 4568     		ldr	r5, [r0, #4]
 1433              	.LVL118:
 436:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
 1434              		.loc 1 436 0
 1435 0022 6C89     		ldrh	r4, [r5, #10]
 1436              	.LVL119:
 439:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_csxScanPeriod  = CapSense_SsCalcCsxScanPeriod(curRamWdgtBasePtr);
 1437              		.loc 1 439 0
 1438 0024 2A88     		ldrh	r2, [r5]
 1439 0026 0D4B     		ldr	r3, .L57+12
 1440 0028 1A60     		str	r2, [r3]
 440:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1441              		.loc 1 440 0
 1442 002a 2800     		movs	r0, r5
 1443 002c FFF7FEFF 		bl	CapSense_SsCalcCsxScanPeriod
 1444              	.LVL120:
 1445 0030 0B4B     		ldr	r3, .L57+16
 1446 0032 1880     		strh	r0, [r3]
 442:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1447              		.loc 1 442 0
 1448 0034 2B7B     		ldrb	r3, [r5, #12]
 1449              	.LVL121:
 444:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = (tmpRegVal << CapSense_SENSE_PERIOD_LFSR_SIZE_SHIFT) | snsClkVal;
 1450              		.loc 1 444 0
 1451 0036 013C     		subs	r4, r4, #1
 1452              	.LVL122:
 1453 0038 2405     		lsls	r4, r4, #20
 1454              	.LVL123:
 1455 003a 240D     		lsrs	r4, r4, #20
 1456              	.LVL124:
 445:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, tmpRegVal);
 1457              		.loc 1 445 0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 67


 1458 003c 1B04     		lsls	r3, r3, #16
 1459              	.LVL125:
 1460 003e 1C43     		orrs	r4, r3
 1461              	.LVL126:
 446:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_SsSetModClkClockDivider((uint32)CapSense_dsRam.modCsxClk);
 1462              		.loc 1 446 0
 1463 0040 084B     		ldr	r3, .L57+20
 1464 0042 1C60     		str	r4, [r3]
 447:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
 1465              		.loc 1 447 0
 1466 0044 084B     		ldr	r3, .L57+24
 1467 0046 D87F     		ldrb	r0, [r3, #31]
 1468 0048 FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 1469              	.LVL127:
 476:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1470              		.loc 1 476 0
 1471              		@ sp needed
 1472              	.LVL128:
 1473              	.LVL129:
 1474 004c 70BD     		pop	{r4, r5, r6, pc}
 1475              	.L58:
 1476 004e C046     		.align	2
 1477              	.L57:
 1478 0050 00000000 		.word	CapSense_widgetIndex
 1479 0054 00000000 		.word	CapSense_dsFlash
 1480 0058 00000000 		.word	CapSense_curFlashWdgtPtr
 1481 005c 14030B40 		.word	1074463508
 1482 0060 00000000 		.word	.LANCHOR0
 1483 0064 00020B40 		.word	1074463232
 1484 0068 00000000 		.word	CapSense_dsRam
 1485              		.cfi_endproc
 1486              	.LFE3:
 1487              		.size	CapSense_CSXSetupWidget, .-CapSense_CSXSetupWidget
 1488              		.global	__aeabi_uidivmod
 1489              		.section	.text.CapSense_CSXSetupWidgetExt,"ax",%progbits
 1490              		.align	2
 1491              		.global	CapSense_CSXSetupWidgetExt
 1492              		.code	16
 1493              		.thumb_func
 1494              		.type	CapSense_CSXSetupWidgetExt, %function
 1495              	CapSense_CSXSetupWidgetExt:
 1496              	.LFB4:
 517:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 txIndex;
 1497              		.loc 1 517 0
 1498              		.cfi_startproc
 1499              		@ args = 0, pretend = 0, frame = 0
 1500              		@ frame_needed = 0, uses_anonymous_args = 0
 1501              	.LVL130:
 1502 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1503              		.cfi_def_cfa_offset 24
 1504              		.cfi_offset 3, -24
 1505              		.cfi_offset 4, -20
 1506              		.cfi_offset 5, -16
 1507              		.cfi_offset 6, -12
 1508              		.cfi_offset 7, -8
 1509              		.cfi_offset 14, -4
 1510 0002 0C00     		movs	r4, r1
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 68


 526:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_sensorIndex = (uint8)sensorId;
 1511              		.loc 1 526 0
 1512 0004 FFF7FEFF 		bl	CapSense_CSXSetupWidget
 1513              	.LVL131:
 527:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1514              		.loc 1 527 0
 1515 0008 E2B2     		uxtb	r2, r4
 1516 000a 184B     		ldr	r3, .L60
 1517 000c 1A70     		strb	r2, [r3]
 530:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr = &CapSense_curRamSnsPtr[sensorId];
 1518              		.loc 1 530 0
 1519 000e 184B     		ldr	r3, .L60+4
 1520 0010 1D68     		ldr	r5, [r3]
 531:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1521              		.loc 1 531 0
 1522 0012 A300     		lsls	r3, r4, #2
 1523 0014 1B19     		adds	r3, r3, r4
 1524 0016 5B00     		lsls	r3, r3, #1
 1525 0018 AA68     		ldr	r2, [r5, #8]
 1526 001a 9446     		mov	ip, r2
 1527 001c 6344     		add	r3, r3, ip
 1528 001e 154A     		ldr	r2, .L60+8
 1529 0020 1360     		str	r3, [r2]
 543:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     txIndex = sensorId % CapSense_curFlashWdgtPtr->numRows;
 1530              		.loc 1 543 0
 1531 0022 6F7F     		ldrb	r7, [r5, #29]
 1532 0024 3900     		movs	r1, r7
 1533 0026 2000     		movs	r0, r4
 1534 0028 FFF7FEFF 		bl	__aeabi_uidiv
 1535              	.LVL132:
 1536 002c 0600     		movs	r6, r0
 1537              	.LVL133:
 544:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1538              		.loc 1 544 0
 1539 002e 3900     		movs	r1, r7
 1540 0030 2000     		movs	r0, r4
 1541              	.LVL134:
 1542 0032 FFF7FEFF 		bl	__aeabi_uidivmod
 1543              	.LVL135:
 596:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRxIOPtr = &CapSense_curRxIOPtr[rxIndex];
 1544              		.loc 1 596 0
 1545 0036 2A68     		ldr	r2, [r5]
 1546 0038 0F4C     		ldr	r4, .L60+12
 1547              	.LVL136:
 597:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1548              		.loc 1 597 0
 1549 003a F300     		lsls	r3, r6, #3
 1550 003c 9B1B     		subs	r3, r3, r6
 1551 003e 9B00     		lsls	r3, r3, #2
 1552 0040 D318     		adds	r3, r2, r3
 1553 0042 A360     		str	r3, [r4, #8]
 599:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curTxIOPtr = &CapSense_curTxIOPtr[(CapSense_curFlashWdgtPtr->numCols + txIndex
 1554              		.loc 1 599 0
 1555 0044 E260     		str	r2, [r4, #12]
 600:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1556              		.loc 1 600 0
 1557 0046 287F     		ldrb	r0, [r5, #28]
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 69


 1558 0048 4118     		adds	r1, r0, r1
 1559              	.LVL137:
 1560 004a CB00     		lsls	r3, r1, #3
 1561 004c 581A     		subs	r0, r3, r1
 1562 004e 8000     		lsls	r0, r0, #2
 1563 0050 1018     		adds	r0, r2, r0
 1564 0052 E060     		str	r0, [r4, #12]
 603:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXConnectRx(CapSense_curRxIOPtr);
 1565              		.loc 1 603 0
 1566 0054 FFF7FEFF 		bl	CapSense_CSXConnectTx
 1567              	.LVL138:
 604:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_eleCsxDisconnectFlag = CapSense_DISCONNECT_IO_FLAG;
 1568              		.loc 1 604 0
 1569 0058 A068     		ldr	r0, [r4, #8]
 1570 005a FFF7FEFF 		bl	CapSense_CSXConnectRx
 1571              	.LVL139:
 605:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1572              		.loc 1 605 0
 1573 005e 0123     		movs	r3, #1
 1574 0060 2382     		strh	r3, [r4, #16]
 608:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 1575              		.loc 1 608 0
 1576 0062 064A     		ldr	r2, .L60+16
 1577 0064 064B     		ldr	r3, .L60+20
 1578 0066 1A60     		str	r2, [r3]
 613:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1579              		.loc 1 613 0
 1580              		@ sp needed
 1581              	.LVL140:
 1582 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1583              	.L61:
 1584 006a C046     		.align	2
 1585              	.L60:
 1586 006c 00000000 		.word	CapSense_sensorIndex
 1587 0070 00000000 		.word	CapSense_curFlashWdgtPtr
 1588 0074 00000000 		.word	CapSense_curRamSnsPtr
 1589 0078 00000000 		.word	.LANCHOR0
 1590 007c 00000000 		.word	CapSense_SsCSXPostSingleScan
 1591 0080 00000000 		.word	.LANCHOR1
 1592              		.cfi_endproc
 1593              	.LFE4:
 1594              		.size	CapSense_CSXSetupWidgetExt, .-CapSense_CSXSetupWidgetExt
 1595              		.section	.text.CapSense_SsCSXGetTxClkDivider,"ax",%progbits
 1596              		.align	2
 1597              		.global	CapSense_SsCSXGetTxClkDivider
 1598              		.code	16
 1599              		.thumb_func
 1600              		.type	CapSense_SsCSXGetTxClkDivider, %function
 1601              	CapSense_SsCSXGetTxClkDivider:
 1602              	.LFB15:
1805:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 retVal;
 1603              		.loc 1 1805 0
 1604              		.cfi_startproc
 1605              		@ args = 0, pretend = 0, frame = 0
 1606              		@ frame_needed = 0, uses_anonymous_args = 0
 1607              		@ link register save eliminated.
 1608              	.LVL141:
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 70


1812:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
 1609              		.loc 1 1812 0
 1610 0000 2C23     		movs	r3, #44
 1611 0002 5843     		muls	r0, r3
 1612              	.LVL142:
 1613 0004 024B     		ldr	r3, .L63
 1614 0006 1818     		adds	r0, r3, r0
 1615 0008 4368     		ldr	r3, [r0, #4]
 1616              	.LVL143:
1815:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
 1617              		.loc 1 1815 0
 1618 000a 5889     		ldrh	r0, [r3, #10]
 1619              	.LVL144:
1826:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1620              		.loc 1 1826 0
 1621              		@ sp needed
 1622 000c 7047     		bx	lr
 1623              	.L64:
 1624 000e C046     		.align	2
 1625              	.L63:
 1626 0010 00000000 		.word	CapSense_dsFlash
 1627              		.cfi_endproc
 1628              	.LFE15:
 1629              		.size	CapSense_SsCSXGetTxClkDivider, .-CapSense_SsCSXGetTxClkDivider
 1630              		.global	CapSense_CSXPostScanApiPtr
 1631              		.global	CapSense_csxRawCount
 1632              		.global	CapSense_csxScanPeriod
 1633              		.data
 1634              		.align	2
 1635              		.set	.LANCHOR1,. + 0
 1636              		.type	CapSense_CSXPostScanApiPtr, %object
 1637              		.size	CapSense_CSXPostScanApiPtr, 4
 1638              	CapSense_CSXPostScanApiPtr:
 1639 0000 00000000 		.word	CapSense_SsCSXPostMultiScan
 1640              		.bss
 1641              		.align	2
 1642              		.set	.LANCHOR0,. + 0
 1643              		.type	CapSense_csxScanPeriod, %object
 1644              		.size	CapSense_csxScanPeriod, 2
 1645              	CapSense_csxScanPeriod:
 1646 0000 0000     		.space	2
 1647              		.type	CapSense_csxRawCount, %object
 1648              		.size	CapSense_csxRawCount, 2
 1649              	CapSense_csxRawCount:
 1650 0002 0000     		.space	2
 1651              		.type	CapSense_curWdgtTotalTx, %object
 1652              		.size	CapSense_curWdgtTotalTx, 2
 1653              	CapSense_curWdgtTotalTx:
 1654 0004 0000     		.space	2
 1655              		.type	CapSense_curWdgtTotalRx, %object
 1656              		.size	CapSense_curWdgtTotalRx, 2
 1657              	CapSense_curWdgtTotalRx:
 1658 0006 0000     		.space	2
 1659              		.type	CapSense_curRxIOPtr, %object
 1660              		.size	CapSense_curRxIOPtr, 4
 1661              	CapSense_curRxIOPtr:
 1662 0008 00000000 		.space	4
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 71


 1663              		.type	CapSense_curTxIOPtr, %object
 1664              		.size	CapSense_curTxIOPtr, 4
 1665              	CapSense_curTxIOPtr:
 1666 000c 00000000 		.space	4
 1667              		.type	CapSense_eleCsxDisconnectFlag, %object
 1668              		.size	CapSense_eleCsxDisconnectFlag, 2
 1669              	CapSense_eleCsxDisconnectFlag:
 1670 0010 0000     		.space	2
 1671              		.text
 1672              	.Letext0:
 1673              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1674              		.file 3 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 1675              		.file 4 "Generated_Source\\PSoC4\\CapSense_SmartSense_LL.h"
 1676              		.file 5 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 1677              		.file 6 "Generated_Source\\PSoC4\\CapSense_Sensing.h"
 1678              		.file 7 "Generated_Source\\PSoC4\\CyLib.h"
 1679              		.section	.debug_info,"",%progbits
 1680              	.Ldebug_info0:
 1681 0000 280F0000 		.4byte	0xf28
 1682 0004 0400     		.2byte	0x4
 1683 0006 00000000 		.4byte	.Ldebug_abbrev0
 1684 000a 04       		.byte	0x4
 1685 000b 01       		.uleb128 0x1
 1686 000c 09020000 		.4byte	.LASF175
 1687 0010 0C       		.byte	0xc
 1688 0011 F9070000 		.4byte	.LASF176
 1689 0015 880B0000 		.4byte	.LASF177
 1690 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1691 001d 00000000 		.4byte	0
 1692 0021 00000000 		.4byte	.Ldebug_line0
 1693 0025 02       		.uleb128 0x2
 1694 0026 01       		.byte	0x1
 1695 0027 06       		.byte	0x6
 1696 0028 590A0000 		.4byte	.LASF0
 1697 002c 02       		.uleb128 0x2
 1698 002d 01       		.byte	0x1
 1699 002e 08       		.byte	0x8
 1700 002f 14090000 		.4byte	.LASF1
 1701 0033 02       		.uleb128 0x2
 1702 0034 02       		.byte	0x2
 1703 0035 05       		.byte	0x5
 1704 0036 5B070000 		.4byte	.LASF2
 1705 003a 02       		.uleb128 0x2
 1706 003b 02       		.byte	0x2
 1707 003c 07       		.byte	0x7
 1708 003d 810A0000 		.4byte	.LASF3
 1709 0041 02       		.uleb128 0x2
 1710 0042 04       		.byte	0x4
 1711 0043 05       		.byte	0x5
 1712 0044 79070000 		.4byte	.LASF4
 1713 0048 02       		.uleb128 0x2
 1714 0049 04       		.byte	0x4
 1715 004a 07       		.byte	0x7
 1716 004b 9A080000 		.4byte	.LASF5
 1717 004f 02       		.uleb128 0x2
 1718 0050 08       		.byte	0x8
 1719 0051 05       		.byte	0x5
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 72


 1720 0052 E6040000 		.4byte	.LASF6
 1721 0056 02       		.uleb128 0x2
 1722 0057 08       		.byte	0x8
 1723 0058 07       		.byte	0x7
 1724 0059 DD020000 		.4byte	.LASF7
 1725 005d 03       		.uleb128 0x3
 1726 005e 04       		.byte	0x4
 1727 005f 05       		.byte	0x5
 1728 0060 696E7400 		.ascii	"int\000"
 1729 0064 02       		.uleb128 0x2
 1730 0065 04       		.byte	0x4
 1731 0066 07       		.byte	0x7
 1732 0067 E8000000 		.4byte	.LASF8
 1733 006b 04       		.uleb128 0x4
 1734 006c D10A0000 		.4byte	.LASF9
 1735 0070 02       		.byte	0x2
 1736 0071 E401     		.2byte	0x1e4
 1737 0073 2C000000 		.4byte	0x2c
 1738 0077 04       		.uleb128 0x4
 1739 0078 7C040000 		.4byte	.LASF10
 1740 007c 02       		.byte	0x2
 1741 007d E501     		.2byte	0x1e5
 1742 007f 3A000000 		.4byte	0x3a
 1743 0083 04       		.uleb128 0x4
 1744 0084 E9050000 		.4byte	.LASF11
 1745 0088 02       		.byte	0x2
 1746 0089 E601     		.2byte	0x1e6
 1747 008b 48000000 		.4byte	0x48
 1748 008f 02       		.uleb128 0x2
 1749 0090 04       		.byte	0x4
 1750 0091 04       		.byte	0x4
 1751 0092 FD010000 		.4byte	.LASF12
 1752 0096 02       		.uleb128 0x2
 1753 0097 08       		.byte	0x8
 1754 0098 04       		.byte	0x4
 1755 0099 D70A0000 		.4byte	.LASF13
 1756 009d 02       		.uleb128 0x2
 1757 009e 01       		.byte	0x1
 1758 009f 08       		.byte	0x8
 1759 00a0 56040000 		.4byte	.LASF14
 1760 00a4 05       		.uleb128 0x5
 1761 00a5 6B000000 		.4byte	0x6b
 1762 00a9 05       		.uleb128 0x5
 1763 00aa 77000000 		.4byte	0x77
 1764 00ae 04       		.uleb128 0x4
 1765 00af C0060000 		.4byte	.LASF15
 1766 00b3 02       		.byte	0x2
 1767 00b4 9002     		.2byte	0x290
 1768 00b6 BA000000 		.4byte	0xba
 1769 00ba 05       		.uleb128 0x5
 1770 00bb 83000000 		.4byte	0x83
 1771 00bf 06       		.uleb128 0x6
 1772 00c0 04       		.byte	0x4
 1773 00c1 C5000000 		.4byte	0xc5
 1774 00c5 07       		.uleb128 0x7
 1775 00c6 02       		.uleb128 0x2
 1776 00c7 08       		.byte	0x8
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 73


 1777 00c8 04       		.byte	0x4
 1778 00c9 B4060000 		.4byte	.LASF16
 1779 00cd 02       		.uleb128 0x2
 1780 00ce 04       		.byte	0x4
 1781 00cf 07       		.byte	0x7
 1782 00d0 89080000 		.4byte	.LASF17
 1783 00d4 08       		.uleb128 0x8
 1784 00d5 04       		.byte	0x4
 1785 00d6 04       		.uleb128 0x4
 1786 00d7 9A090000 		.4byte	.LASF18
 1787 00db 03       		.byte	0x3
 1788 00dc 2201     		.2byte	0x122
 1789 00de 77000000 		.4byte	0x77
 1790 00e2 04       		.uleb128 0x4
 1791 00e3 A1040000 		.4byte	.LASF19
 1792 00e7 03       		.byte	0x3
 1793 00e8 2601     		.2byte	0x126
 1794 00ea 6B000000 		.4byte	0x6b
 1795 00ee 09       		.uleb128 0x9
 1796 00ef 0C       		.byte	0xc
 1797 00f0 04       		.byte	0x4
 1798 00f1 6E       		.byte	0x6e
 1799 00f2 4B010000 		.4byte	0x14b
 1800 00f6 0A       		.uleb128 0xa
 1801 00f7 EC0A0000 		.4byte	.LASF20
 1802 00fb 04       		.byte	0x4
 1803 00fc 73       		.byte	0x73
 1804 00fd 77000000 		.4byte	0x77
 1805 0101 00       		.byte	0
 1806 0102 0A       		.uleb128 0xa
 1807 0103 F30A0000 		.4byte	.LASF21
 1808 0107 04       		.byte	0x4
 1809 0108 77       		.byte	0x77
 1810 0109 77000000 		.4byte	0x77
 1811 010d 02       		.byte	0x2
 1812 010e 0A       		.uleb128 0xa
 1813 010f FA0A0000 		.4byte	.LASF22
 1814 0113 04       		.byte	0x4
 1815 0114 7B       		.byte	0x7b
 1816 0115 77000000 		.4byte	0x77
 1817 0119 04       		.byte	0x4
 1818 011a 0A       		.uleb128 0xa
 1819 011b 010B0000 		.4byte	.LASF23
 1820 011f 04       		.byte	0x4
 1821 0120 7F       		.byte	0x7f
 1822 0121 77000000 		.4byte	0x77
 1823 0125 06       		.byte	0x6
 1824 0126 0A       		.uleb128 0xa
 1825 0127 080B0000 		.4byte	.LASF24
 1826 012b 04       		.byte	0x4
 1827 012c 83       		.byte	0x83
 1828 012d 77000000 		.4byte	0x77
 1829 0131 08       		.byte	0x8
 1830 0132 0A       		.uleb128 0xa
 1831 0133 0F0B0000 		.4byte	.LASF25
 1832 0137 04       		.byte	0x4
 1833 0138 87       		.byte	0x87
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 74


 1834 0139 6B000000 		.4byte	0x6b
 1835 013d 0A       		.byte	0xa
 1836 013e 0A       		.uleb128 0xa
 1837 013f 160B0000 		.4byte	.LASF26
 1838 0143 04       		.byte	0x4
 1839 0144 8B       		.byte	0x8b
 1840 0145 6B000000 		.4byte	0x6b
 1841 0149 0B       		.byte	0xb
 1842 014a 00       		.byte	0
 1843 014b 0B       		.uleb128 0xb
 1844 014c 20040000 		.4byte	.LASF27
 1845 0150 04       		.byte	0x4
 1846 0151 8C       		.byte	0x8c
 1847 0152 EE000000 		.4byte	0xee
 1848 0156 0C       		.uleb128 0xc
 1849 0157 01       		.byte	0x1
 1850 0158 2C000000 		.4byte	0x2c
 1851 015c 05       		.byte	0x5
 1852 015d 6F       		.byte	0x6f
 1853 015e 81010000 		.4byte	0x181
 1854 0162 0D       		.uleb128 0xd
 1855 0163 D3000000 		.4byte	.LASF28
 1856 0167 00       		.byte	0
 1857 0168 0D       		.uleb128 0xd
 1858 0169 6D080000 		.4byte	.LASF29
 1859 016d 01       		.byte	0x1
 1860 016e 0D       		.uleb128 0xd
 1861 016f B8070000 		.4byte	.LASF30
 1862 0173 02       		.byte	0x2
 1863 0174 0D       		.uleb128 0xd
 1864 0175 B2090000 		.4byte	.LASF31
 1865 0179 03       		.byte	0x3
 1866 017a 0D       		.uleb128 0xd
 1867 017b 7B060000 		.4byte	.LASF32
 1868 017f 04       		.byte	0x4
 1869 0180 00       		.byte	0
 1870 0181 0B       		.uleb128 0xb
 1871 0182 BC040000 		.4byte	.LASF33
 1872 0186 05       		.byte	0x5
 1873 0187 75       		.byte	0x75
 1874 0188 56010000 		.4byte	0x156
 1875 018c 09       		.uleb128 0x9
 1876 018d 12       		.byte	0x12
 1877 018e 05       		.byte	0x5
 1878 018f 8D       		.byte	0x8d
 1879 0190 25020000 		.4byte	0x225
 1880 0194 0A       		.uleb128 0xa
 1881 0195 83040000 		.4byte	.LASF34
 1882 0199 05       		.byte	0x5
 1883 019a 92       		.byte	0x92
 1884 019b 77000000 		.4byte	0x77
 1885 019f 00       		.byte	0
 1886 01a0 0A       		.uleb128 0xa
 1887 01a1 E5080000 		.4byte	.LASF35
 1888 01a5 05       		.byte	0x5
 1889 01a6 97       		.byte	0x97
 1890 01a7 D6000000 		.4byte	0xd6
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 75


 1891 01ab 02       		.byte	0x2
 1892 01ac 0A       		.uleb128 0xa
 1893 01ad 4E040000 		.4byte	.LASF36
 1894 01b1 05       		.byte	0x5
 1895 01b2 9C       		.byte	0x9c
 1896 01b3 6B000000 		.4byte	0x6b
 1897 01b7 04       		.byte	0x4
 1898 01b8 0A       		.uleb128 0xa
 1899 01b9 95050000 		.4byte	.LASF37
 1900 01bd 05       		.byte	0x5
 1901 01be A1       		.byte	0xa1
 1902 01bf 6B000000 		.4byte	0x6b
 1903 01c3 05       		.byte	0x5
 1904 01c4 0A       		.uleb128 0xa
 1905 01c5 A0030000 		.4byte	.LASF38
 1906 01c9 05       		.byte	0x5
 1907 01ca A7       		.byte	0xa7
 1908 01cb 6B000000 		.4byte	0x6b
 1909 01cf 06       		.byte	0x6
 1910 01d0 0A       		.uleb128 0xa
 1911 01d1 15050000 		.4byte	.LASF39
 1912 01d5 05       		.byte	0x5
 1913 01d6 AD       		.byte	0xad
 1914 01d7 6B000000 		.4byte	0x6b
 1915 01db 07       		.byte	0x7
 1916 01dc 0A       		.uleb128 0xa
 1917 01dd C4030000 		.4byte	.LASF40
 1918 01e1 05       		.byte	0x5
 1919 01e2 B4       		.byte	0xb4
 1920 01e3 E2000000 		.4byte	0xe2
 1921 01e7 08       		.byte	0x8
 1922 01e8 0A       		.uleb128 0xa
 1923 01e9 B3080000 		.4byte	.LASF41
 1924 01ed 05       		.byte	0x5
 1925 01ee BB       		.byte	0xbb
 1926 01ef 25020000 		.4byte	0x225
 1927 01f3 09       		.byte	0x9
 1928 01f4 0A       		.uleb128 0xa
 1929 01f5 080A0000 		.4byte	.LASF42
 1930 01f9 05       		.byte	0x5
 1931 01fa C3       		.byte	0xc3
 1932 01fb 77000000 		.4byte	0x77
 1933 01ff 0A       		.byte	0xa
 1934 0200 0A       		.uleb128 0xa
 1935 0201 0B070000 		.4byte	.LASF43
 1936 0205 05       		.byte	0x5
 1937 0206 C8       		.byte	0xc8
 1938 0207 6B000000 		.4byte	0x6b
 1939 020b 0C       		.byte	0xc
 1940 020c 0A       		.uleb128 0xa
 1941 020d 3A080000 		.4byte	.LASF44
 1942 0211 05       		.byte	0x5
 1943 0212 CE       		.byte	0xce
 1944 0213 77000000 		.4byte	0x77
 1945 0217 0E       		.byte	0xe
 1946 0218 0A       		.uleb128 0xa
 1947 0219 99030000 		.4byte	.LASF45
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 76


 1948 021d 05       		.byte	0x5
 1949 021e D3       		.byte	0xd3
 1950 021f 77000000 		.4byte	0x77
 1951 0223 10       		.byte	0x10
 1952 0224 00       		.byte	0
 1953 0225 0E       		.uleb128 0xe
 1954 0226 6B000000 		.4byte	0x6b
 1955 022a 35020000 		.4byte	0x235
 1956 022e 0F       		.uleb128 0xf
 1957 022f CD000000 		.4byte	0xcd
 1958 0233 00       		.byte	0
 1959 0234 00       		.byte	0
 1960 0235 0B       		.uleb128 0xb
 1961 0236 A9050000 		.4byte	.LASF46
 1962 023a 05       		.byte	0x5
 1963 023b D4       		.byte	0xd4
 1964 023c 8C010000 		.4byte	0x18c
 1965 0240 09       		.uleb128 0x9
 1966 0241 12       		.byte	0x12
 1967 0242 05       		.byte	0x5
 1968 0243 D9       		.byte	0xd9
 1969 0244 DF020000 		.4byte	0x2df
 1970 0248 0A       		.uleb128 0xa
 1971 0249 83040000 		.4byte	.LASF34
 1972 024d 05       		.byte	0x5
 1973 024e DE       		.byte	0xde
 1974 024f 77000000 		.4byte	0x77
 1975 0253 00       		.byte	0
 1976 0254 0A       		.uleb128 0xa
 1977 0255 E5080000 		.4byte	.LASF35
 1978 0259 05       		.byte	0x5
 1979 025a E3       		.byte	0xe3
 1980 025b D6000000 		.4byte	0xd6
 1981 025f 02       		.byte	0x2
 1982 0260 0A       		.uleb128 0xa
 1983 0261 4E040000 		.4byte	.LASF36
 1984 0265 05       		.byte	0x5
 1985 0266 E8       		.byte	0xe8
 1986 0267 6B000000 		.4byte	0x6b
 1987 026b 04       		.byte	0x4
 1988 026c 0A       		.uleb128 0xa
 1989 026d 95050000 		.4byte	.LASF37
 1990 0271 05       		.byte	0x5
 1991 0272 ED       		.byte	0xed
 1992 0273 6B000000 		.4byte	0x6b
 1993 0277 05       		.byte	0x5
 1994 0278 0A       		.uleb128 0xa
 1995 0279 A0030000 		.4byte	.LASF38
 1996 027d 05       		.byte	0x5
 1997 027e F3       		.byte	0xf3
 1998 027f 6B000000 		.4byte	0x6b
 1999 0283 06       		.byte	0x6
 2000 0284 0A       		.uleb128 0xa
 2001 0285 15050000 		.4byte	.LASF39
 2002 0289 05       		.byte	0x5
 2003 028a F9       		.byte	0xf9
 2004 028b 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 77


 2005 028f 07       		.byte	0x7
 2006 0290 10       		.uleb128 0x10
 2007 0291 C4030000 		.4byte	.LASF40
 2008 0295 05       		.byte	0x5
 2009 0296 0001     		.2byte	0x100
 2010 0298 E2000000 		.4byte	0xe2
 2011 029c 08       		.byte	0x8
 2012 029d 10       		.uleb128 0x10
 2013 029e B3080000 		.4byte	.LASF41
 2014 02a2 05       		.byte	0x5
 2015 02a3 0701     		.2byte	0x107
 2016 02a5 25020000 		.4byte	0x225
 2017 02a9 09       		.byte	0x9
 2018 02aa 10       		.uleb128 0x10
 2019 02ab 080A0000 		.4byte	.LASF42
 2020 02af 05       		.byte	0x5
 2021 02b0 0F01     		.2byte	0x10f
 2022 02b2 77000000 		.4byte	0x77
 2023 02b6 0A       		.byte	0xa
 2024 02b7 10       		.uleb128 0x10
 2025 02b8 0B070000 		.4byte	.LASF43
 2026 02bc 05       		.byte	0x5
 2027 02bd 1401     		.2byte	0x114
 2028 02bf 6B000000 		.4byte	0x6b
 2029 02c3 0C       		.byte	0xc
 2030 02c4 10       		.uleb128 0x10
 2031 02c5 3A080000 		.4byte	.LASF44
 2032 02c9 05       		.byte	0x5
 2033 02ca 1A01     		.2byte	0x11a
 2034 02cc 77000000 		.4byte	0x77
 2035 02d0 0E       		.byte	0xe
 2036 02d1 10       		.uleb128 0x10
 2037 02d2 99030000 		.4byte	.LASF45
 2038 02d6 05       		.byte	0x5
 2039 02d7 1F01     		.2byte	0x11f
 2040 02d9 77000000 		.4byte	0x77
 2041 02dd 10       		.byte	0x10
 2042 02de 00       		.byte	0
 2043 02df 04       		.uleb128 0x4
 2044 02e0 F6080000 		.4byte	.LASF47
 2045 02e4 05       		.byte	0x5
 2046 02e5 2001     		.2byte	0x120
 2047 02e7 40020000 		.4byte	0x240
 2048 02eb 11       		.uleb128 0x11
 2049 02ec 14       		.byte	0x14
 2050 02ed 05       		.byte	0x5
 2051 02ee 2501     		.2byte	0x125
 2052 02f0 9E030000 		.4byte	0x39e
 2053 02f4 10       		.uleb128 0x10
 2054 02f5 83040000 		.4byte	.LASF34
 2055 02f9 05       		.byte	0x5
 2056 02fa 2A01     		.2byte	0x12a
 2057 02fc 77000000 		.4byte	0x77
 2058 0300 00       		.byte	0
 2059 0301 10       		.uleb128 0x10
 2060 0302 E5080000 		.4byte	.LASF35
 2061 0306 05       		.byte	0x5
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 78


 2062 0307 2F01     		.2byte	0x12f
 2063 0309 D6000000 		.4byte	0xd6
 2064 030d 02       		.byte	0x2
 2065 030e 10       		.uleb128 0x10
 2066 030f 4E040000 		.4byte	.LASF36
 2067 0313 05       		.byte	0x5
 2068 0314 3401     		.2byte	0x134
 2069 0316 6B000000 		.4byte	0x6b
 2070 031a 04       		.byte	0x4
 2071 031b 10       		.uleb128 0x10
 2072 031c 95050000 		.4byte	.LASF37
 2073 0320 05       		.byte	0x5
 2074 0321 3901     		.2byte	0x139
 2075 0323 6B000000 		.4byte	0x6b
 2076 0327 05       		.byte	0x5
 2077 0328 10       		.uleb128 0x10
 2078 0329 A0030000 		.4byte	.LASF38
 2079 032d 05       		.byte	0x5
 2080 032e 3F01     		.2byte	0x13f
 2081 0330 6B000000 		.4byte	0x6b
 2082 0334 06       		.byte	0x6
 2083 0335 10       		.uleb128 0x10
 2084 0336 15050000 		.4byte	.LASF39
 2085 033a 05       		.byte	0x5
 2086 033b 4501     		.2byte	0x145
 2087 033d 6B000000 		.4byte	0x6b
 2088 0341 07       		.byte	0x7
 2089 0342 10       		.uleb128 0x10
 2090 0343 C4030000 		.4byte	.LASF40
 2091 0347 05       		.byte	0x5
 2092 0348 4C01     		.2byte	0x14c
 2093 034a E2000000 		.4byte	0xe2
 2094 034e 08       		.byte	0x8
 2095 034f 10       		.uleb128 0x10
 2096 0350 B3080000 		.4byte	.LASF41
 2097 0354 05       		.byte	0x5
 2098 0355 5301     		.2byte	0x153
 2099 0357 25020000 		.4byte	0x225
 2100 035b 09       		.byte	0x9
 2101 035c 10       		.uleb128 0x10
 2102 035d 080A0000 		.4byte	.LASF42
 2103 0361 05       		.byte	0x5
 2104 0362 5B01     		.2byte	0x15b
 2105 0364 77000000 		.4byte	0x77
 2106 0368 0A       		.byte	0xa
 2107 0369 10       		.uleb128 0x10
 2108 036a 0B070000 		.4byte	.LASF43
 2109 036e 05       		.byte	0x5
 2110 036f 6001     		.2byte	0x160
 2111 0371 6B000000 		.4byte	0x6b
 2112 0375 0C       		.byte	0xc
 2113 0376 10       		.uleb128 0x10
 2114 0377 3A080000 		.4byte	.LASF44
 2115 037b 05       		.byte	0x5
 2116 037c 6601     		.2byte	0x166
 2117 037e 77000000 		.4byte	0x77
 2118 0382 0E       		.byte	0xe
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 79


 2119 0383 10       		.uleb128 0x10
 2120 0384 99030000 		.4byte	.LASF45
 2121 0388 05       		.byte	0x5
 2122 0389 6B01     		.2byte	0x16b
 2123 038b 77000000 		.4byte	0x77
 2124 038f 10       		.byte	0x10
 2125 0390 10       		.uleb128 0x10
 2126 0391 620B0000 		.4byte	.LASF48
 2127 0395 05       		.byte	0x5
 2128 0396 7001     		.2byte	0x170
 2129 0398 9E030000 		.4byte	0x39e
 2130 039c 12       		.byte	0x12
 2131 039d 00       		.byte	0
 2132 039e 0E       		.uleb128 0xe
 2133 039f 77000000 		.4byte	0x77
 2134 03a3 AE030000 		.4byte	0x3ae
 2135 03a7 0F       		.uleb128 0xf
 2136 03a8 CD000000 		.4byte	0xcd
 2137 03ac 00       		.byte	0
 2138 03ad 00       		.byte	0
 2139 03ae 04       		.uleb128 0x4
 2140 03af 4F080000 		.4byte	.LASF49
 2141 03b3 05       		.byte	0x5
 2142 03b4 7101     		.2byte	0x171
 2143 03b6 EB020000 		.4byte	0x2eb
 2144 03ba 11       		.uleb128 0x11
 2145 03bb 4A       		.byte	0x4a
 2146 03bc 05       		.byte	0x5
 2147 03bd 7701     		.2byte	0x177
 2148 03bf F8030000 		.4byte	0x3f8
 2149 03c3 10       		.uleb128 0x10
 2150 03c4 05040000 		.4byte	.LASF50
 2151 03c8 05       		.byte	0x5
 2152 03c9 7C01     		.2byte	0x17c
 2153 03cb DF020000 		.4byte	0x2df
 2154 03cf 00       		.byte	0
 2155 03d0 10       		.uleb128 0x10
 2156 03d1 0A040000 		.4byte	.LASF51
 2157 03d5 05       		.byte	0x5
 2158 03d6 8101     		.2byte	0x181
 2159 03d8 DF020000 		.4byte	0x2df
 2160 03dc 12       		.byte	0x12
 2161 03dd 10       		.uleb128 0x10
 2162 03de 0F040000 		.4byte	.LASF52
 2163 03e2 05       		.byte	0x5
 2164 03e3 8601     		.2byte	0x186
 2165 03e5 DF020000 		.4byte	0x2df
 2166 03e9 24       		.byte	0x24
 2167 03ea 12       		.uleb128 0x12
 2168 03eb 736C6400 		.ascii	"sld\000"
 2169 03ef 05       		.byte	0x5
 2170 03f0 8B01     		.2byte	0x18b
 2171 03f2 AE030000 		.4byte	0x3ae
 2172 03f6 36       		.byte	0x36
 2173 03f7 00       		.byte	0
 2174 03f8 04       		.uleb128 0x4
 2175 03f9 9B010000 		.4byte	.LASF53
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 80


 2176 03fd 05       		.byte	0x5
 2177 03fe 8C01     		.2byte	0x18c
 2178 0400 BA030000 		.4byte	0x3ba
 2179 0404 11       		.uleb128 0x11
 2180 0405 0A       		.byte	0xa
 2181 0406 05       		.byte	0x5
 2182 0407 9201     		.2byte	0x192
 2183 0409 5C040000 		.4byte	0x45c
 2184 040d 12       		.uleb128 0x12
 2185 040e 72617700 		.ascii	"raw\000"
 2186 0412 05       		.byte	0x5
 2187 0413 9701     		.2byte	0x197
 2188 0415 9E030000 		.4byte	0x39e
 2189 0419 00       		.byte	0
 2190 041a 10       		.uleb128 0x10
 2191 041b 7C0A0000 		.4byte	.LASF54
 2192 041f 05       		.byte	0x5
 2193 0420 9C01     		.2byte	0x19c
 2194 0422 9E030000 		.4byte	0x39e
 2195 0426 02       		.byte	0x2
 2196 0427 10       		.uleb128 0x10
 2197 0428 EE080000 		.4byte	.LASF55
 2198 042c 05       		.byte	0x5
 2199 042d A201     		.2byte	0x1a2
 2200 042f 25020000 		.4byte	0x225
 2201 0433 04       		.byte	0x4
 2202 0434 10       		.uleb128 0x10
 2203 0435 8D070000 		.4byte	.LASF56
 2204 0439 05       		.byte	0x5
 2205 043a A701     		.2byte	0x1a7
 2206 043c D6000000 		.4byte	0xd6
 2207 0440 06       		.byte	0x6
 2208 0441 10       		.uleb128 0x10
 2209 0442 DE0A0000 		.4byte	.LASF57
 2210 0446 05       		.byte	0x5
 2211 0447 AC01     		.2byte	0x1ac
 2212 0449 5C040000 		.4byte	0x45c
 2213 044d 08       		.byte	0x8
 2214 044e 10       		.uleb128 0x10
 2215 044f D7040000 		.4byte	.LASF58
 2216 0453 05       		.byte	0x5
 2217 0454 B101     		.2byte	0x1b1
 2218 0456 25020000 		.4byte	0x225
 2219 045a 09       		.byte	0x9
 2220 045b 00       		.byte	0
 2221 045c 0E       		.uleb128 0xe
 2222 045d E2000000 		.4byte	0xe2
 2223 0461 6C040000 		.4byte	0x46c
 2224 0465 0F       		.uleb128 0xf
 2225 0466 CD000000 		.4byte	0xcd
 2226 046a 00       		.byte	0
 2227 046b 00       		.byte	0
 2228 046c 04       		.uleb128 0x4
 2229 046d 74030000 		.4byte	.LASF59
 2230 0471 05       		.byte	0x5
 2231 0472 B201     		.2byte	0x1b2
 2232 0474 04040000 		.4byte	0x404
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 81


 2233 0478 11       		.uleb128 0x11
 2234 0479 50       		.byte	0x50
 2235 047a 05       		.byte	0x5
 2236 047b B801     		.2byte	0x1b8
 2237 047d B6040000 		.4byte	0x4b6
 2238 0481 10       		.uleb128 0x10
 2239 0482 05040000 		.4byte	.LASF50
 2240 0486 05       		.byte	0x5
 2241 0487 BD01     		.2byte	0x1bd
 2242 0489 B6040000 		.4byte	0x4b6
 2243 048d 00       		.byte	0
 2244 048e 10       		.uleb128 0x10
 2245 048f 0A040000 		.4byte	.LASF51
 2246 0493 05       		.byte	0x5
 2247 0494 C201     		.2byte	0x1c2
 2248 0496 B6040000 		.4byte	0x4b6
 2249 049a 0A       		.byte	0xa
 2250 049b 10       		.uleb128 0x10
 2251 049c 0F040000 		.4byte	.LASF52
 2252 04a0 05       		.byte	0x5
 2253 04a1 C701     		.2byte	0x1c7
 2254 04a3 B6040000 		.4byte	0x4b6
 2255 04a7 14       		.byte	0x14
 2256 04a8 12       		.uleb128 0x12
 2257 04a9 736C6400 		.ascii	"sld\000"
 2258 04ad 05       		.byte	0x5
 2259 04ae CC01     		.2byte	0x1cc
 2260 04b0 C6040000 		.4byte	0x4c6
 2261 04b4 1E       		.byte	0x1e
 2262 04b5 00       		.byte	0
 2263 04b6 0E       		.uleb128 0xe
 2264 04b7 6C040000 		.4byte	0x46c
 2265 04bb C6040000 		.4byte	0x4c6
 2266 04bf 0F       		.uleb128 0xf
 2267 04c0 CD000000 		.4byte	0xcd
 2268 04c4 00       		.byte	0
 2269 04c5 00       		.byte	0
 2270 04c6 0E       		.uleb128 0xe
 2271 04c7 6C040000 		.4byte	0x46c
 2272 04cb D6040000 		.4byte	0x4d6
 2273 04cf 0F       		.uleb128 0xf
 2274 04d0 CD000000 		.4byte	0xcd
 2275 04d4 04       		.byte	0x4
 2276 04d5 00       		.byte	0
 2277 04d6 04       		.uleb128 0x4
 2278 04d7 6B0B0000 		.4byte	.LASF60
 2279 04db 05       		.byte	0x5
 2280 04dc CD01     		.2byte	0x1cd
 2281 04de 78040000 		.4byte	0x478
 2282 04e2 11       		.uleb128 0x11
 2283 04e3 C0       		.byte	0xc0
 2284 04e4 05       		.byte	0x5
 2285 04e5 D301     		.2byte	0x1d3
 2286 04e7 D6050000 		.4byte	0x5d6
 2287 04eb 10       		.uleb128 0x10
 2288 04ec D9060000 		.4byte	.LASF61
 2289 04f0 05       		.byte	0x5
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 82


 2290 04f1 DA01     		.2byte	0x1da
 2291 04f3 77000000 		.4byte	0x77
 2292 04f7 00       		.byte	0
 2293 04f8 10       		.uleb128 0x10
 2294 04f9 320B0000 		.4byte	.LASF62
 2295 04fd 05       		.byte	0x5
 2296 04fe DF01     		.2byte	0x1df
 2297 0500 77000000 		.4byte	0x77
 2298 0504 02       		.byte	0x2
 2299 0505 10       		.uleb128 0x10
 2300 0506 29010000 		.4byte	.LASF63
 2301 050a 05       		.byte	0x5
 2302 050b E401     		.2byte	0x1e4
 2303 050d 77000000 		.4byte	0x77
 2304 0511 04       		.byte	0x4
 2305 0512 10       		.uleb128 0x10
 2306 0513 AA070000 		.4byte	.LASF64
 2307 0517 05       		.byte	0x5
 2308 0518 EA01     		.2byte	0x1ea
 2309 051a 77000000 		.4byte	0x77
 2310 051e 06       		.byte	0x6
 2311 051f 10       		.uleb128 0x10
 2312 0520 1D010000 		.4byte	.LASF65
 2313 0524 05       		.byte	0x5
 2314 0525 EF01     		.2byte	0x1ef
 2315 0527 77000000 		.4byte	0x77
 2316 052b 08       		.byte	0x8
 2317 052c 10       		.uleb128 0x10
 2318 052d 8E040000 		.4byte	.LASF66
 2319 0531 05       		.byte	0x5
 2320 0532 F401     		.2byte	0x1f4
 2321 0534 BA000000 		.4byte	0xba
 2322 0538 0C       		.byte	0xc
 2323 0539 10       		.uleb128 0x10
 2324 053a 82070000 		.4byte	.LASF67
 2325 053e 05       		.byte	0x5
 2326 053f FA01     		.2byte	0x1fa
 2327 0541 D6050000 		.4byte	0x5d6
 2328 0545 10       		.byte	0x10
 2329 0546 10       		.uleb128 0x10
 2330 0547 44080000 		.4byte	.LASF68
 2331 054b 05       		.byte	0x5
 2332 054c 0102     		.2byte	0x201
 2333 054e D6050000 		.4byte	0x5d6
 2334 0552 14       		.byte	0x14
 2335 0553 10       		.uleb128 0x10
 2336 0554 01070000 		.4byte	.LASF69
 2337 0558 05       		.byte	0x5
 2338 0559 1102     		.2byte	0x211
 2339 055b E6050000 		.4byte	0x5e6
 2340 055f 18       		.byte	0x18
 2341 0560 10       		.uleb128 0x10
 2342 0561 9E050000 		.4byte	.LASF70
 2343 0565 05       		.byte	0x5
 2344 0566 1702     		.2byte	0x217
 2345 0568 77000000 		.4byte	0x77
 2346 056c 1C       		.byte	0x1c
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 83


 2347 056d 10       		.uleb128 0x10
 2348 056e 6A030000 		.4byte	.LASF71
 2349 0572 05       		.byte	0x5
 2350 0573 1C02     		.2byte	0x21c
 2351 0575 6B000000 		.4byte	0x6b
 2352 0579 1E       		.byte	0x1e
 2353 057a 10       		.uleb128 0x10
 2354 057b 70090000 		.4byte	.LASF72
 2355 057f 05       		.byte	0x5
 2356 0580 2102     		.2byte	0x221
 2357 0582 6B000000 		.4byte	0x6b
 2358 0586 1F       		.byte	0x1f
 2359 0587 10       		.uleb128 0x10
 2360 0588 34050000 		.4byte	.LASF73
 2361 058c 05       		.byte	0x5
 2362 058d 2602     		.2byte	0x226
 2363 058f F8030000 		.4byte	0x3f8
 2364 0593 20       		.byte	0x20
 2365 0594 10       		.uleb128 0x10
 2366 0595 D5020000 		.4byte	.LASF74
 2367 0599 05       		.byte	0x5
 2368 059a 2B02     		.2byte	0x22b
 2369 059c D6040000 		.4byte	0x4d6
 2370 05a0 6A       		.byte	0x6a
 2371 05a1 10       		.uleb128 0x10
 2372 05a2 C3000000 		.4byte	.LASF75
 2373 05a6 05       		.byte	0x5
 2374 05a7 3002     		.2byte	0x230
 2375 05a9 6B000000 		.4byte	0x6b
 2376 05ad BA       		.byte	0xba
 2377 05ae 10       		.uleb128 0x10
 2378 05af 22030000 		.4byte	.LASF76
 2379 05b3 05       		.byte	0x5
 2380 05b4 3502     		.2byte	0x235
 2381 05b6 6B000000 		.4byte	0x6b
 2382 05ba BB       		.byte	0xbb
 2383 05bb 10       		.uleb128 0x10
 2384 05bc C6060000 		.4byte	.LASF77
 2385 05c0 05       		.byte	0x5
 2386 05c1 3A02     		.2byte	0x23a
 2387 05c3 77000000 		.4byte	0x77
 2388 05c7 BC       		.byte	0xbc
 2389 05c8 10       		.uleb128 0x10
 2390 05c9 85050000 		.4byte	.LASF78
 2391 05cd 05       		.byte	0x5
 2392 05ce 3F02     		.2byte	0x23f
 2393 05d0 9E030000 		.4byte	0x39e
 2394 05d4 BE       		.byte	0xbe
 2395 05d5 00       		.byte	0
 2396 05d6 0E       		.uleb128 0xe
 2397 05d7 83000000 		.4byte	0x83
 2398 05db E6050000 		.4byte	0x5e6
 2399 05df 0F       		.uleb128 0xf
 2400 05e0 CD000000 		.4byte	0xcd
 2401 05e4 00       		.byte	0
 2402 05e5 00       		.byte	0
 2403 05e6 0E       		.uleb128 0xe
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 84


 2404 05e7 6B000000 		.4byte	0x6b
 2405 05eb F6050000 		.4byte	0x5f6
 2406 05ef 0F       		.uleb128 0xf
 2407 05f0 CD000000 		.4byte	0xcd
 2408 05f4 03       		.byte	0x3
 2409 05f5 00       		.byte	0
 2410 05f6 04       		.uleb128 0x4
 2411 05f7 65070000 		.4byte	.LASF79
 2412 05fb 05       		.byte	0x5
 2413 05fc 4002     		.2byte	0x240
 2414 05fe E2040000 		.4byte	0x4e2
 2415 0602 11       		.uleb128 0x11
 2416 0603 1C       		.byte	0x1c
 2417 0604 05       		.byte	0x5
 2418 0605 4602     		.2byte	0x246
 2419 0607 81060000 		.4byte	0x681
 2420 060b 10       		.uleb128 0x10
 2421 060c C5050000 		.4byte	.LASF80
 2422 0610 05       		.byte	0x5
 2423 0611 4B02     		.2byte	0x24b
 2424 0613 81060000 		.4byte	0x681
 2425 0617 00       		.byte	0
 2426 0618 10       		.uleb128 0x10
 2427 0619 E0040000 		.4byte	.LASF81
 2428 061d 05       		.byte	0x5
 2429 061e 5002     		.2byte	0x250
 2430 0620 81060000 		.4byte	0x681
 2431 0624 04       		.byte	0x4
 2432 0625 10       		.uleb128 0x10
 2433 0626 93030000 		.4byte	.LASF82
 2434 062a 05       		.byte	0x5
 2435 062b 5502     		.2byte	0x255
 2436 062d 81060000 		.4byte	0x681
 2437 0631 08       		.byte	0x8
 2438 0632 10       		.uleb128 0x10
 2439 0633 D4070000 		.4byte	.LASF83
 2440 0637 05       		.byte	0x5
 2441 0638 5A02     		.2byte	0x25a
 2442 063a 81060000 		.4byte	0x681
 2443 063e 0C       		.byte	0xc
 2444 063f 10       		.uleb128 0x10
 2445 0640 D7090000 		.4byte	.LASF84
 2446 0644 05       		.byte	0x5
 2447 0645 5F02     		.2byte	0x25f
 2448 0647 83000000 		.4byte	0x83
 2449 064b 10       		.byte	0x10
 2450 064c 10       		.uleb128 0x10
 2451 064d 18060000 		.4byte	.LASF85
 2452 0651 05       		.byte	0x5
 2453 0652 6402     		.2byte	0x264
 2454 0654 83000000 		.4byte	0x83
 2455 0658 14       		.byte	0x14
 2456 0659 10       		.uleb128 0x10
 2457 065a 71040000 		.4byte	.LASF86
 2458 065e 05       		.byte	0x5
 2459 065f 6902     		.2byte	0x269
 2460 0661 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 85


 2461 0665 18       		.byte	0x18
 2462 0666 10       		.uleb128 0x10
 2463 0667 92080000 		.4byte	.LASF87
 2464 066b 05       		.byte	0x5
 2465 066c 6E02     		.2byte	0x26e
 2466 066e 6B000000 		.4byte	0x6b
 2467 0672 19       		.byte	0x19
 2468 0673 10       		.uleb128 0x10
 2469 0674 03020000 		.4byte	.LASF88
 2470 0678 05       		.byte	0x5
 2471 0679 7302     		.2byte	0x273
 2472 067b 6B000000 		.4byte	0x6b
 2473 067f 1A       		.byte	0x1a
 2474 0680 00       		.byte	0
 2475 0681 06       		.uleb128 0x6
 2476 0682 04       		.byte	0x4
 2477 0683 AE000000 		.4byte	0xae
 2478 0687 04       		.uleb128 0x4
 2479 0688 09030000 		.4byte	.LASF89
 2480 068c 05       		.byte	0x5
 2481 068d 7402     		.2byte	0x274
 2482 068f 02060000 		.4byte	0x602
 2483 0693 11       		.uleb128 0x11
 2484 0694 2C       		.byte	0x2c
 2485 0695 05       		.byte	0x5
 2486 0696 A702     		.2byte	0x2a7
 2487 0698 60070000 		.4byte	0x760
 2488 069c 10       		.uleb128 0x10
 2489 069d C40A0000 		.4byte	.LASF90
 2490 06a1 05       		.byte	0x5
 2491 06a2 B002     		.2byte	0x2b0
 2492 06a4 60070000 		.4byte	0x760
 2493 06a8 00       		.byte	0
 2494 06a9 10       		.uleb128 0x10
 2495 06aa 8E090000 		.4byte	.LASF91
 2496 06ae 05       		.byte	0x5
 2497 06af B702     		.2byte	0x2b7
 2498 06b1 D4000000 		.4byte	0xd4
 2499 06b5 04       		.byte	0x4
 2500 06b6 10       		.uleb128 0x10
 2501 06b7 E2060000 		.4byte	.LASF92
 2502 06bb 05       		.byte	0x5
 2503 06bc BD02     		.2byte	0x2bd
 2504 06be 67070000 		.4byte	0x767
 2505 06c2 08       		.byte	0x8
 2506 06c3 10       		.uleb128 0x10
 2507 06c4 F0050000 		.4byte	.LASF93
 2508 06c8 05       		.byte	0x5
 2509 06c9 C302     		.2byte	0x2c3
 2510 06cb D4000000 		.4byte	0xd4
 2511 06cf 0C       		.byte	0xc
 2512 06d0 10       		.uleb128 0x10
 2513 06d1 C1080000 		.4byte	.LASF94
 2514 06d5 05       		.byte	0x5
 2515 06d6 CA02     		.2byte	0x2ca
 2516 06d8 6D070000 		.4byte	0x76d
 2517 06dc 10       		.byte	0x10
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 86


 2518 06dd 10       		.uleb128 0x10
 2519 06de 57090000 		.4byte	.LASF95
 2520 06e2 05       		.byte	0x5
 2521 06e3 CF02     		.2byte	0x2cf
 2522 06e5 83000000 		.4byte	0x83
 2523 06e9 14       		.byte	0x14
 2524 06ea 10       		.uleb128 0x10
 2525 06eb 14040000 		.4byte	.LASF96
 2526 06ef 05       		.byte	0x5
 2527 06f0 D602     		.2byte	0x2d6
 2528 06f2 77000000 		.4byte	0x77
 2529 06f6 18       		.byte	0x18
 2530 06f7 10       		.uleb128 0x10
 2531 06f8 57030000 		.4byte	.LASF97
 2532 06fc 05       		.byte	0x5
 2533 06fd DD02     		.2byte	0x2dd
 2534 06ff 6B000000 		.4byte	0x6b
 2535 0703 1A       		.byte	0x1a
 2536 0704 10       		.uleb128 0x10
 2537 0705 64090000 		.4byte	.LASF98
 2538 0709 05       		.byte	0x5
 2539 070a E302     		.2byte	0x2e3
 2540 070c 6B000000 		.4byte	0x6b
 2541 0710 1B       		.byte	0x1b
 2542 0711 10       		.uleb128 0x10
 2543 0712 F4040000 		.4byte	.LASF99
 2544 0716 05       		.byte	0x5
 2545 0717 ED02     		.2byte	0x2ed
 2546 0719 6B000000 		.4byte	0x6b
 2547 071d 1C       		.byte	0x1c
 2548 071e 10       		.uleb128 0x10
 2549 071f CF090000 		.4byte	.LASF100
 2550 0723 05       		.byte	0x5
 2551 0724 F502     		.2byte	0x2f5
 2552 0726 6B000000 		.4byte	0x6b
 2553 072a 1D       		.byte	0x1d
 2554 072b 10       		.uleb128 0x10
 2555 072c 36070000 		.4byte	.LASF101
 2556 0730 05       		.byte	0x5
 2557 0731 FA02     		.2byte	0x2fa
 2558 0733 77000000 		.4byte	0x77
 2559 0737 1E       		.byte	0x1e
 2560 0738 10       		.uleb128 0x10
 2561 0739 D1080000 		.4byte	.LASF102
 2562 073d 05       		.byte	0x5
 2563 073e 0303     		.2byte	0x303
 2564 0740 83000000 		.4byte	0x83
 2565 0744 20       		.byte	0x20
 2566 0745 10       		.uleb128 0x10
 2567 0746 48030000 		.4byte	.LASF103
 2568 074a 05       		.byte	0x5
 2569 074b 0B03     		.2byte	0x30b
 2570 074d 73070000 		.4byte	0x773
 2571 0751 24       		.byte	0x24
 2572 0752 10       		.uleb128 0x10
 2573 0753 B7010000 		.4byte	.LASF104
 2574 0757 05       		.byte	0x5
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 87


 2575 0758 1003     		.2byte	0x310
 2576 075a 6B000000 		.4byte	0x6b
 2577 075e 28       		.byte	0x28
 2578 075f 00       		.byte	0
 2579 0760 06       		.uleb128 0x6
 2580 0761 04       		.byte	0x4
 2581 0762 66070000 		.4byte	0x766
 2582 0766 13       		.uleb128 0x13
 2583 0767 06       		.uleb128 0x6
 2584 0768 04       		.byte	0x4
 2585 0769 6C040000 		.4byte	0x46c
 2586 076d 06       		.uleb128 0x6
 2587 076e 04       		.byte	0x4
 2588 076f 6B000000 		.4byte	0x6b
 2589 0773 06       		.uleb128 0x6
 2590 0774 04       		.byte	0x4
 2591 0775 4B010000 		.4byte	0x14b
 2592 0779 04       		.uleb128 0x4
 2593 077a AB030000 		.4byte	.LASF105
 2594 077e 05       		.byte	0x5
 2595 077f 1103     		.2byte	0x311
 2596 0781 93060000 		.4byte	0x693
 2597 0785 11       		.uleb128 0x11
 2598 0786 B0       		.byte	0xb0
 2599 0787 05       		.byte	0x5
 2600 0788 1703     		.2byte	0x317
 2601 078a 9C070000 		.4byte	0x79c
 2602 078e 10       		.uleb128 0x10
 2603 078f F60B0000 		.4byte	.LASF106
 2604 0793 05       		.byte	0x5
 2605 0794 1C03     		.2byte	0x31c
 2606 0796 9C070000 		.4byte	0x79c
 2607 079a 00       		.byte	0
 2608 079b 00       		.byte	0
 2609 079c 0E       		.uleb128 0xe
 2610 079d 79070000 		.4byte	0x779
 2611 07a1 AC070000 		.4byte	0x7ac
 2612 07a5 0F       		.uleb128 0xf
 2613 07a6 CD000000 		.4byte	0xcd
 2614 07aa 03       		.byte	0x3
 2615 07ab 00       		.byte	0
 2616 07ac 04       		.uleb128 0x4
 2617 07ad 52050000 		.4byte	.LASF107
 2618 07b1 05       		.byte	0x5
 2619 07b2 1D03     		.2byte	0x31d
 2620 07b4 85070000 		.4byte	0x785
 2621 07b8 14       		.uleb128 0x14
 2622 07b9 37000000 		.4byte	.LASF178
 2623 07bd 01       		.byte	0x1
 2624 07be 5D05     		.2byte	0x55d
 2625 07c0 00000000 		.4byte	.LFB8
 2626 07c4 38000000 		.4byte	.LFE8-.LFB8
 2627 07c8 01       		.uleb128 0x1
 2628 07c9 9C       		.byte	0x9c
 2629 07ca 15       		.uleb128 0x15
 2630 07cb E8030000 		.4byte	.LASF179
 2631 07cf 01       		.byte	0x1
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 88


 2632 07d0 3707     		.2byte	0x737
 2633 07d2 77000000 		.4byte	0x77
 2634 07d6 00000000 		.4byte	.LFB16
 2635 07da 0C000000 		.4byte	.LFE16-.LFB16
 2636 07de 01       		.uleb128 0x1
 2637 07df 9C       		.byte	0x9c
 2638 07e0 05080000 		.4byte	0x805
 2639 07e4 16       		.uleb128 0x16
 2640 07e5 22090000 		.4byte	.LASF118
 2641 07e9 01       		.byte	0x1
 2642 07ea 3707     		.2byte	0x737
 2643 07ec 05080000 		.4byte	0x805
 2644 07f0 00000000 		.4byte	.LLST0
 2645 07f4 17       		.uleb128 0x17
 2646 07f5 B3070000 		.4byte	.LASF111
 2647 07f9 01       		.byte	0x1
 2648 07fa 3907     		.2byte	0x739
 2649 07fc 83000000 		.4byte	0x83
 2650 0800 21000000 		.4byte	.LLST1
 2651 0804 00       		.byte	0
 2652 0805 06       		.uleb128 0x6
 2653 0806 04       		.byte	0x4
 2654 0807 0B080000 		.4byte	0x80b
 2655 080b 18       		.uleb128 0x18
 2656 080c 35020000 		.4byte	0x235
 2657 0810 19       		.uleb128 0x19
 2658 0811 97060000 		.4byte	.LASF180
 2659 0815 01       		.byte	0x1
 2660 0816 DF07     		.2byte	0x7df
 2661 0818 03       		.byte	0x3
 2662 0819 42080000 		.4byte	0x842
 2663 081d 1A       		.uleb128 0x1a
 2664 081e 95040000 		.4byte	.LASF108
 2665 0822 01       		.byte	0x1
 2666 0823 E107     		.2byte	0x7e1
 2667 0825 83000000 		.4byte	0x83
 2668 0829 1A       		.uleb128 0x1a
 2669 082a 9B020000 		.4byte	.LASF109
 2670 082e 01       		.byte	0x1
 2671 082f E207     		.2byte	0x7e2
 2672 0831 83000000 		.4byte	0x83
 2673 0835 1A       		.uleb128 0x1a
 2674 0836 50060000 		.4byte	.LASF110
 2675 083a 01       		.byte	0x1
 2676 083b E407     		.2byte	0x7e4
 2677 083d 83000000 		.4byte	0x83
 2678 0841 00       		.byte	0
 2679 0842 1B       		.uleb128 0x1b
 2680 0843 CF010000 		.4byte	.LASF134
 2681 0847 01       		.byte	0x1
 2682 0848 2706     		.2byte	0x627
 2683 084a 00000000 		.4byte	.LFB10
 2684 084e 38010000 		.4byte	.LFE10-.LFB10
 2685 0852 01       		.uleb128 0x1
 2686 0853 9C       		.byte	0x9c
 2687 0854 9F080000 		.4byte	0x89f
 2688 0858 17       		.uleb128 0x17
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 89


 2689 0859 ED090000 		.4byte	.LASF112
 2690 085d 01       		.byte	0x1
 2691 085e 2906     		.2byte	0x629
 2692 0860 83000000 		.4byte	0x83
 2693 0864 45000000 		.4byte	.LLST2
 2694 0868 1C       		.uleb128 0x1c
 2695 0869 10080000 		.4byte	0x810
 2696 086d 1C000000 		.4byte	.LBB4
 2697 0871 B4000000 		.4byte	.LBE4-.LBB4
 2698 0875 01       		.byte	0x1
 2699 0876 3C06     		.2byte	0x63c
 2700 0878 1D       		.uleb128 0x1d
 2701 0879 1C000000 		.4byte	.LBB5
 2702 087d B4000000 		.4byte	.LBE5-.LBB5
 2703 0881 1E       		.uleb128 0x1e
 2704 0882 1D080000 		.4byte	0x81d
 2705 0886 77000000 		.4byte	.LLST3
 2706 088a 1E       		.uleb128 0x1e
 2707 088b 29080000 		.4byte	0x829
 2708 088f 8A000000 		.4byte	.LLST4
 2709 0893 1E       		.uleb128 0x1e
 2710 0894 35080000 		.4byte	0x835
 2711 0898 AB000000 		.4byte	.LLST5
 2712 089c 00       		.byte	0
 2713 089d 00       		.byte	0
 2714 089e 00       		.byte	0
 2715 089f 1F       		.uleb128 0x1f
 2716 08a0 7A090000 		.4byte	.LASF113
 2717 08a4 01       		.byte	0x1
 2718 08a5 9807     		.2byte	0x798
 2719 08a7 00000000 		.4byte	.LFB17
 2720 08ab 90000000 		.4byte	.LFE17-.LFB17
 2721 08af 01       		.uleb128 0x1
 2722 08b0 9C       		.byte	0x9c
 2723 08b1 D8080000 		.4byte	0x8d8
 2724 08b5 20       		.uleb128 0x20
 2725 08b6 08000000 		.4byte	.LVL16
 2726 08ba 9C0E0000 		.4byte	0xe9c
 2727 08be C8080000 		.4byte	0x8c8
 2728 08c2 21       		.uleb128 0x21
 2729 08c3 01       		.uleb128 0x1
 2730 08c4 50       		.byte	0x50
 2731 08c5 01       		.uleb128 0x1
 2732 08c6 3A       		.byte	0x3a
 2733 08c7 00       		.byte	0
 2734 08c8 22       		.uleb128 0x22
 2735 08c9 62000000 		.4byte	.LVL18
 2736 08cd A70E0000 		.4byte	0xea7
 2737 08d1 21       		.uleb128 0x21
 2738 08d2 01       		.uleb128 0x1
 2739 08d3 50       		.byte	0x50
 2740 08d4 01       		.uleb128 0x1
 2741 08d5 3A       		.byte	0x3a
 2742 08d6 00       		.byte	0
 2743 08d7 00       		.byte	0
 2744 08d8 23       		.uleb128 0x23
 2745 08d9 98000000 		.4byte	.LASF114
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 90


 2746 08dd 01       		.byte	0x1
 2747 08de 94       		.byte	0x94
 2748 08df 00000000 		.4byte	.LFB1
 2749 08e3 DC010000 		.4byte	.LFE1-.LFB1
 2750 08e7 01       		.uleb128 0x1
 2751 08e8 9C       		.byte	0x9c
 2752 08e9 A6090000 		.4byte	0x9a6
 2753 08ed 24       		.uleb128 0x24
 2754 08ee 40010000 		.4byte	.LASF115
 2755 08f2 01       		.byte	0x1
 2756 08f3 97       		.byte	0x97
 2757 08f4 6B000000 		.4byte	0x6b
 2758 08f8 BE000000 		.4byte	.LLST6
 2759 08fc 24       		.uleb128 0x24
 2760 08fd ED090000 		.4byte	.LASF112
 2761 0901 01       		.byte	0x1
 2762 0902 98       		.byte	0x98
 2763 0903 83000000 		.4byte	0x83
 2764 0907 08010000 		.4byte	.LLST7
 2765 090b 25       		.uleb128 0x25
 2766 090c 5C000000 		.4byte	.LVL19
 2767 0910 B20E0000 		.4byte	0xeb2
 2768 0914 25       		.uleb128 0x25
 2769 0915 70000000 		.4byte	.LVL23
 2770 0919 BD0E0000 		.4byte	0xebd
 2771 091d 25       		.uleb128 0x25
 2772 091e 82000000 		.4byte	.LVL24
 2773 0922 B20E0000 		.4byte	0xeb2
 2774 0926 25       		.uleb128 0x25
 2775 0927 96000000 		.4byte	.LVL28
 2776 092b BD0E0000 		.4byte	0xebd
 2777 092f 25       		.uleb128 0x25
 2778 0930 CA000000 		.4byte	.LVL29
 2779 0934 C80E0000 		.4byte	0xec8
 2780 0938 25       		.uleb128 0x25
 2781 0939 CE000000 		.4byte	.LVL30
 2782 093d B20E0000 		.4byte	0xeb2
 2783 0941 25       		.uleb128 0x25
 2784 0942 DC000000 		.4byte	.LVL33
 2785 0946 BD0E0000 		.4byte	0xebd
 2786 094a 25       		.uleb128 0x25
 2787 094b E0000000 		.4byte	.LVL34
 2788 094f B20E0000 		.4byte	0xeb2
 2789 0953 25       		.uleb128 0x25
 2790 0954 EC000000 		.4byte	.LVL37
 2791 0958 BD0E0000 		.4byte	0xebd
 2792 095c 25       		.uleb128 0x25
 2793 095d F0000000 		.4byte	.LVL38
 2794 0961 B20E0000 		.4byte	0xeb2
 2795 0965 25       		.uleb128 0x25
 2796 0966 04010000 		.4byte	.LVL42
 2797 096a BD0E0000 		.4byte	0xebd
 2798 096e 25       		.uleb128 0x25
 2799 096f 08010000 		.4byte	.LVL43
 2800 0973 B20E0000 		.4byte	0xeb2
 2801 0977 25       		.uleb128 0x25
 2802 0978 1A010000 		.4byte	.LVL47
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 91


 2803 097c BD0E0000 		.4byte	0xebd
 2804 0980 25       		.uleb128 0x25
 2805 0981 22010000 		.4byte	.LVL48
 2806 0985 D30E0000 		.4byte	0xed3
 2807 0989 25       		.uleb128 0x25
 2808 098a 26010000 		.4byte	.LVL49
 2809 098e DE0E0000 		.4byte	0xede
 2810 0992 22       		.uleb128 0x22
 2811 0993 2C010000 		.4byte	.LVL50
 2812 0997 E90E0000 		.4byte	0xee9
 2813 099b 21       		.uleb128 0x21
 2814 099c 01       		.uleb128 0x1
 2815 099d 50       		.byte	0x50
 2816 099e 05       		.uleb128 0x5
 2817 099f 03       		.byte	0x3
 2818 09a0 00000000 		.4byte	CapSense_CSXScanISR
 2819 09a4 00       		.byte	0
 2820 09a5 00       		.byte	0
 2821 09a6 26       		.uleb128 0x26
 2822 09a7 AF000000 		.4byte	.LASF116
 2823 09ab 01       		.byte	0x1
 2824 09ac 6603     		.2byte	0x366
 2825 09ae 00000000 		.4byte	.LFB6
 2826 09b2 1C000000 		.4byte	.LFE6-.LFB6
 2827 09b6 01       		.uleb128 0x1
 2828 09b7 9C       		.byte	0x9c
 2829 09b8 D9090000 		.4byte	0x9d9
 2830 09bc 20       		.uleb128 0x20
 2831 09bd 12000000 		.4byte	.LVL51
 2832 09c1 F40E0000 		.4byte	0xef4
 2833 09c5 CF090000 		.4byte	0x9cf
 2834 09c9 21       		.uleb128 0x21
 2835 09ca 01       		.uleb128 0x1
 2836 09cb 50       		.byte	0x50
 2837 09cc 01       		.uleb128 0x1
 2838 09cd 47       		.byte	0x47
 2839 09ce 00       		.byte	0
 2840 09cf 25       		.uleb128 0x25
 2841 09d0 16000000 		.4byte	.LVL52
 2842 09d4 42080000 		.4byte	0x842
 2843 09d8 00       		.byte	0
 2844 09d9 1F       		.uleb128 0x1f
 2845 09da 1D060000 		.4byte	.LASF117
 2846 09de 01       		.byte	0x1
 2847 09df B205     		.2byte	0x5b2
 2848 09e1 00000000 		.4byte	.LFB9
 2849 09e5 CC000000 		.4byte	.LFE9-.LFB9
 2850 09e9 01       		.uleb128 0x1
 2851 09ea 9C       		.byte	0x9c
 2852 09eb 930A0000 		.4byte	0xa93
 2853 09ef 16       		.uleb128 0x16
 2854 09f0 3B0B0000 		.4byte	.LASF119
 2855 09f4 01       		.byte	0x1
 2856 09f5 B205     		.2byte	0x5b2
 2857 09f7 83000000 		.4byte	0x83
 2858 09fb 94010000 		.4byte	.LLST8
 2859 09ff 16       		.uleb128 0x16
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 92


 2860 0a00 8C030000 		.4byte	.LASF120
 2861 0a04 01       		.byte	0x1
 2862 0a05 B205     		.2byte	0x5b2
 2863 0a07 77000000 		.4byte	0x77
 2864 0a0b B3010000 		.4byte	.LLST9
 2865 0a0f 17       		.uleb128 0x17
 2866 0a10 EF070000 		.4byte	.LASF121
 2867 0a14 01       		.byte	0x1
 2868 0a15 B505     		.2byte	0x5b5
 2869 0a17 83000000 		.4byte	0x83
 2870 0a1b D4010000 		.4byte	.LLST10
 2871 0a1f 17       		.uleb128 0x17
 2872 0a20 45040000 		.4byte	.LASF122
 2873 0a24 01       		.byte	0x1
 2874 0a25 B705     		.2byte	0x5b7
 2875 0a27 83000000 		.4byte	0x83
 2876 0a2b 03020000 		.4byte	.LLST11
 2877 0a2f 17       		.uleb128 0x17
 2878 0a30 2A090000 		.4byte	.LASF123
 2879 0a34 01       		.byte	0x1
 2880 0a35 B905     		.2byte	0x5b9
 2881 0a37 83000000 		.4byte	0x83
 2882 0a3b 16020000 		.4byte	.LLST12
 2883 0a3f 17       		.uleb128 0x17
 2884 0a40 F1010000 		.4byte	.LASF124
 2885 0a44 01       		.byte	0x1
 2886 0a45 BC05     		.2byte	0x5bc
 2887 0a47 6B000000 		.4byte	0x6b
 2888 0a4b 4C020000 		.4byte	.LLST13
 2889 0a4f 17       		.uleb128 0x17
 2890 0a50 10010000 		.4byte	.LASF125
 2891 0a54 01       		.byte	0x1
 2892 0a55 BE05     		.2byte	0x5be
 2893 0a57 6B000000 		.4byte	0x6b
 2894 0a5b 82020000 		.4byte	.LLST14
 2895 0a5f 20       		.uleb128 0x20
 2896 0a60 24000000 		.4byte	.LVL56
 2897 0a64 CA070000 		.4byte	0x7ca
 2898 0a68 740A0000 		.4byte	0xa74
 2899 0a6c 21       		.uleb128 0x21
 2900 0a6d 01       		.uleb128 0x1
 2901 0a6e 50       		.byte	0x50
 2902 0a6f 03       		.uleb128 0x3
 2903 0a70 74       		.byte	0x74
 2904 0a71 04       		.sleb128 4
 2905 0a72 06       		.byte	0x6
 2906 0a73 00       		.byte	0
 2907 0a74 20       		.uleb128 0x20
 2908 0a75 74000000 		.4byte	.LVL66
 2909 0a79 FF0E0000 		.4byte	0xeff
 2910 0a7d 890A0000 		.4byte	0xa89
 2911 0a81 21       		.uleb128 0x21
 2912 0a82 01       		.uleb128 0x1
 2913 0a83 50       		.byte	0x50
 2914 0a84 03       		.uleb128 0x3
 2915 0a85 91       		.byte	0x91
 2916 0a86 64       		.sleb128 -28
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 93


 2917 0a87 06       		.byte	0x6
 2918 0a88 00       		.byte	0
 2919 0a89 25       		.uleb128 0x25
 2920 0a8a 78000000 		.4byte	.LVL67
 2921 0a8e 0A0F0000 		.4byte	0xf0a
 2922 0a92 00       		.byte	0
 2923 0a93 26       		.uleb128 0x26
 2924 0a94 32030000 		.4byte	.LASF126
 2925 0a98 01       		.byte	0x1
 2926 0a99 8106     		.2byte	0x681
 2927 0a9b 00000000 		.4byte	.LFB11
 2928 0a9f 20000000 		.4byte	.LFE11-.LFB11
 2929 0aa3 01       		.uleb128 0x1
 2930 0aa4 9C       		.byte	0x9c
 2931 0aa5 CA0A0000 		.4byte	0xaca
 2932 0aa9 16       		.uleb128 0x16
 2933 0aaa 3A010000 		.4byte	.LASF127
 2934 0aae 01       		.byte	0x1
 2935 0aaf 8106     		.2byte	0x681
 2936 0ab1 CA0A0000 		.4byte	0xaca
 2937 0ab5 B8020000 		.4byte	.LLST15
 2938 0ab9 17       		.uleb128 0x17
 2939 0aba 31010000 		.4byte	.LASF128
 2940 0abe 01       		.byte	0x1
 2941 0abf 8306     		.2byte	0x683
 2942 0ac1 83000000 		.4byte	0x83
 2943 0ac5 D9020000 		.4byte	.LLST16
 2944 0ac9 00       		.byte	0
 2945 0aca 06       		.uleb128 0x6
 2946 0acb 04       		.byte	0x4
 2947 0acc D00A0000 		.4byte	0xad0
 2948 0ad0 18       		.uleb128 0x18
 2949 0ad1 87060000 		.4byte	0x687
 2950 0ad5 26       		.uleb128 0x26
 2951 0ad6 57010000 		.4byte	.LASF129
 2952 0ada 01       		.byte	0x1
 2953 0adb A306     		.2byte	0x6a3
 2954 0add 00000000 		.4byte	.LFB12
 2955 0ae1 20000000 		.4byte	.LFE12-.LFB12
 2956 0ae5 01       		.uleb128 0x1
 2957 0ae6 9C       		.byte	0x9c
 2958 0ae7 0C0B0000 		.4byte	0xb0c
 2959 0aeb 16       		.uleb128 0x16
 2960 0aec BB080000 		.4byte	.LASF130
 2961 0af0 01       		.byte	0x1
 2962 0af1 A306     		.2byte	0x6a3
 2963 0af3 CA0A0000 		.4byte	0xaca
 2964 0af7 0D030000 		.4byte	.LLST17
 2965 0afb 17       		.uleb128 0x17
 2966 0afc 31010000 		.4byte	.LASF128
 2967 0b00 01       		.byte	0x1
 2968 0b01 A506     		.2byte	0x6a5
 2969 0b03 83000000 		.4byte	0x83
 2970 0b07 2E030000 		.4byte	.LLST18
 2971 0b0b 00       		.byte	0
 2972 0b0c 26       		.uleb128 0x26
 2973 0b0d F7090000 		.4byte	.LASF131
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 94


 2974 0b11 01       		.byte	0x1
 2975 0b12 8502     		.2byte	0x285
 2976 0b14 00000000 		.4byte	.LFB5
 2977 0b18 6C000000 		.4byte	.LFE5-.LFB5
 2978 0b1c 01       		.uleb128 0x1
 2979 0b1d 9C       		.byte	0x9c
 2980 0b1e 510B0000 		.4byte	0xb51
 2981 0b22 25       		.uleb128 0x25
 2982 0b23 2E000000 		.4byte	.LVL87
 2983 0b27 930A0000 		.4byte	0xa93
 2984 0b2b 25       		.uleb128 0x25
 2985 0b2c 34000000 		.4byte	.LVL88
 2986 0b30 D50A0000 		.4byte	0xad5
 2987 0b34 20       		.uleb128 0x20
 2988 0b35 4A000000 		.4byte	.LVL89
 2989 0b39 F40E0000 		.4byte	0xef4
 2990 0b3d 470B0000 		.4byte	0xb47
 2991 0b41 21       		.uleb128 0x21
 2992 0b42 01       		.uleb128 0x1
 2993 0b43 50       		.byte	0x50
 2994 0b44 01       		.uleb128 0x1
 2995 0b45 47       		.byte	0x47
 2996 0b46 00       		.byte	0
 2997 0b47 25       		.uleb128 0x25
 2998 0b48 4E000000 		.4byte	.LVL90
 2999 0b4c 42080000 		.4byte	0x842
 3000 0b50 00       		.byte	0
 3001 0b51 26       		.uleb128 0x26
 3002 0b52 FC040000 		.4byte	.LASF132
 3003 0b56 01       		.byte	0x1
 3004 0b57 C606     		.2byte	0x6c6
 3005 0b59 00000000 		.4byte	.LFB13
 3006 0b5d 0C000000 		.4byte	.LFE13-.LFB13
 3007 0b61 01       		.uleb128 0x1
 3008 0b62 9C       		.byte	0x9c
 3009 0b63 840B0000 		.4byte	0xb84
 3010 0b67 27       		.uleb128 0x27
 3011 0b68 3A010000 		.4byte	.LASF127
 3012 0b6c 01       		.byte	0x1
 3013 0b6d C606     		.2byte	0x6c6
 3014 0b6f CA0A0000 		.4byte	0xaca
 3015 0b73 01       		.uleb128 0x1
 3016 0b74 50       		.byte	0x50
 3017 0b75 28       		.uleb128 0x28
 3018 0b76 31010000 		.4byte	.LASF128
 3019 0b7a 01       		.byte	0x1
 3020 0b7b C806     		.2byte	0x6c8
 3021 0b7d 83000000 		.4byte	0x83
 3022 0b81 01       		.uleb128 0x1
 3023 0b82 53       		.byte	0x53
 3024 0b83 00       		.byte	0
 3025 0b84 26       		.uleb128 0x26
 3026 0b85 CF030000 		.4byte	.LASF133
 3027 0b89 01       		.byte	0x1
 3028 0b8a E506     		.2byte	0x6e5
 3029 0b8c 00000000 		.4byte	.LFB14
 3030 0b90 2E000000 		.4byte	.LFE14-.LFB14
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 95


 3031 0b94 01       		.uleb128 0x1
 3032 0b95 9C       		.byte	0x9c
 3033 0b96 B90B0000 		.4byte	0xbb9
 3034 0b9a 27       		.uleb128 0x27
 3035 0b9b BB080000 		.4byte	.LASF130
 3036 0b9f 01       		.byte	0x1
 3037 0ba0 E506     		.2byte	0x6e5
 3038 0ba2 CA0A0000 		.4byte	0xaca
 3039 0ba6 01       		.uleb128 0x1
 3040 0ba7 50       		.byte	0x50
 3041 0ba8 17       		.uleb128 0x17
 3042 0ba9 31010000 		.4byte	.LASF128
 3043 0bad 01       		.byte	0x1
 3044 0bae E706     		.2byte	0x6e7
 3045 0bb0 83000000 		.4byte	0x83
 3046 0bb4 57030000 		.4byte	.LLST19
 3047 0bb8 00       		.byte	0
 3048 0bb9 29       		.uleb128 0x29
 3049 0bba 3B090000 		.4byte	.LASF135
 3050 0bbe 01       		.byte	0x1
 3051 0bbf 9303     		.2byte	0x393
 3052 0bc1 00000000 		.4byte	.LFB7
 3053 0bc5 DC000000 		.4byte	.LFE7-.LFB7
 3054 0bc9 01       		.uleb128 0x1
 3055 0bca 9C       		.byte	0x9c
 3056 0bcb 210C0000 		.4byte	0xc21
 3057 0bcf 25       		.uleb128 0x25
 3058 0bd0 1C000000 		.4byte	.LVL103
 3059 0bd4 510B0000 		.4byte	0xb51
 3060 0bd8 25       		.uleb128 0x25
 3061 0bd9 3E000000 		.4byte	.LVL104
 3062 0bdd 930A0000 		.4byte	0xa93
 3063 0be1 25       		.uleb128 0x25
 3064 0be2 4A000000 		.4byte	.LVL105
 3065 0be6 42080000 		.4byte	0x842
 3066 0bea 25       		.uleb128 0x25
 3067 0beb 62000000 		.4byte	.LVL106
 3068 0bef 840B0000 		.4byte	0xb84
 3069 0bf3 25       		.uleb128 0x25
 3070 0bf4 6C000000 		.4byte	.LVL107
 3071 0bf8 D50A0000 		.4byte	0xad5
 3072 0bfc 25       		.uleb128 0x25
 3073 0bfd 88000000 		.4byte	.LVL108
 3074 0c01 930A0000 		.4byte	0xa93
 3075 0c05 25       		.uleb128 0x25
 3076 0c06 94000000 		.4byte	.LVL109
 3077 0c0a 42080000 		.4byte	0x842
 3078 0c0e 25       		.uleb128 0x25
 3079 0c0f 9E000000 		.4byte	.LVL110
 3080 0c13 840B0000 		.4byte	0xb84
 3081 0c17 25       		.uleb128 0x25
 3082 0c18 AA000000 		.4byte	.LVL111
 3083 0c1c 150F0000 		.4byte	0xf15
 3084 0c20 00       		.byte	0
 3085 0c21 26       		.uleb128 0x26
 3086 0c22 CE050000 		.4byte	.LASF136
 3087 0c26 01       		.byte	0x1
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 96


 3088 0c27 3B01     		.2byte	0x13b
 3089 0c29 00000000 		.4byte	.LFB2
 3090 0c2d 24000000 		.4byte	.LFE2-.LFB2
 3091 0c31 01       		.uleb128 0x1
 3092 0c32 9C       		.byte	0x9c
 3093 0c33 4A0C0000 		.4byte	0xc4a
 3094 0c37 25       		.uleb128 0x25
 3095 0c38 12000000 		.4byte	.LVL112
 3096 0c3c 510B0000 		.4byte	0xb51
 3097 0c40 25       		.uleb128 0x25
 3098 0c41 18000000 		.4byte	.LVL113
 3099 0c45 840B0000 		.4byte	0xb84
 3100 0c49 00       		.byte	0
 3101 0c4a 26       		.uleb128 0x26
 3102 0c4b B3020000 		.4byte	.LASF137
 3103 0c4f 01       		.byte	0x1
 3104 0c50 9601     		.2byte	0x196
 3105 0c52 00000000 		.4byte	.LFB3
 3106 0c56 6C000000 		.4byte	.LFE3-.LFB3
 3107 0c5a 01       		.uleb128 0x1
 3108 0c5b 9C       		.byte	0x9c
 3109 0c5c DA0C0000 		.4byte	0xcda
 3110 0c60 16       		.uleb128 0x16
 3111 0c61 3B0B0000 		.4byte	.LASF119
 3112 0c65 01       		.byte	0x1
 3113 0c66 9601     		.2byte	0x196
 3114 0c68 83000000 		.4byte	0x83
 3115 0c6c 80030000 		.4byte	.LLST20
 3116 0c70 17       		.uleb128 0x17
 3117 0c71 940A0000 		.4byte	.LASF138
 3118 0c75 01       		.byte	0x1
 3119 0c76 9901     		.2byte	0x199
 3120 0c78 DA0C0000 		.4byte	0xcda
 3121 0c7c AC030000 		.4byte	.LLST21
 3122 0c80 17       		.uleb128 0x17
 3123 0c81 ED090000 		.4byte	.LASF112
 3124 0c85 01       		.byte	0x1
 3125 0c86 9C01     		.2byte	0x19c
 3126 0c88 83000000 		.4byte	0x83
 3127 0c8c BF030000 		.4byte	.LLST22
 3128 0c90 17       		.uleb128 0x17
 3129 0c91 60030000 		.4byte	.LASF139
 3130 0c95 01       		.byte	0x1
 3131 0c96 9D01     		.2byte	0x19d
 3132 0c98 83000000 		.4byte	0x83
 3133 0c9c EF030000 		.4byte	.LLST23
 3134 0ca0 20       		.uleb128 0x20
 3135 0ca1 10000000 		.4byte	.LVL116
 3136 0ca5 200F0000 		.4byte	0xf20
 3137 0ca9 B30C0000 		.4byte	0xcb3
 3138 0cad 21       		.uleb128 0x21
 3139 0cae 01       		.uleb128 0x1
 3140 0caf 50       		.byte	0x50
 3141 0cb0 01       		.uleb128 0x1
 3142 0cb1 32       		.byte	0x32
 3143 0cb2 00       		.byte	0
 3144 0cb3 25       		.uleb128 0x25
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 97


 3145 0cb4 14000000 		.4byte	.LVL117
 3146 0cb8 210C0000 		.4byte	0xc21
 3147 0cbc 20       		.uleb128 0x20
 3148 0cbd 30000000 		.4byte	.LVL120
 3149 0cc1 CA070000 		.4byte	0x7ca
 3150 0cc5 D00C0000 		.4byte	0xcd0
 3151 0cc9 21       		.uleb128 0x21
 3152 0cca 01       		.uleb128 0x1
 3153 0ccb 50       		.byte	0x50
 3154 0ccc 02       		.uleb128 0x2
 3155 0ccd 75       		.byte	0x75
 3156 0cce 00       		.sleb128 0
 3157 0ccf 00       		.byte	0
 3158 0cd0 25       		.uleb128 0x25
 3159 0cd1 4C000000 		.4byte	.LVL127
 3160 0cd5 D30E0000 		.4byte	0xed3
 3161 0cd9 00       		.byte	0
 3162 0cda 06       		.uleb128 0x6
 3163 0cdb 04       		.byte	0x4
 3164 0cdc 35020000 		.4byte	0x235
 3165 0ce0 1F       		.uleb128 0x1f
 3166 0ce1 60060000 		.4byte	.LASF140
 3167 0ce5 01       		.byte	0x1
 3168 0ce6 0402     		.2byte	0x204
 3169 0ce8 00000000 		.4byte	.LFB4
 3170 0cec 84000000 		.4byte	.LFE4-.LFB4
 3171 0cf0 01       		.uleb128 0x1
 3172 0cf1 9C       		.byte	0x9c
 3173 0cf2 5E0D0000 		.4byte	0xd5e
 3174 0cf6 16       		.uleb128 0x16
 3175 0cf7 3B0B0000 		.4byte	.LASF119
 3176 0cfb 01       		.byte	0x1
 3177 0cfc 0402     		.2byte	0x204
 3178 0cfe 83000000 		.4byte	0x83
 3179 0d02 1A040000 		.4byte	.LLST24
 3180 0d06 16       		.uleb128 0x16
 3181 0d07 C6010000 		.4byte	.LASF141
 3182 0d0b 01       		.byte	0x1
 3183 0d0c 0402     		.2byte	0x204
 3184 0d0e 83000000 		.4byte	0x83
 3185 0d12 3B040000 		.4byte	.LLST25
 3186 0d16 17       		.uleb128 0x17
 3187 0d17 AB020000 		.4byte	.LASF142
 3188 0d1b 01       		.byte	0x1
 3189 0d1c 0602     		.2byte	0x206
 3190 0d1e 83000000 		.4byte	0x83
 3191 0d22 67040000 		.4byte	.LLST26
 3192 0d26 17       		.uleb128 0x17
 3193 0d27 4F010000 		.4byte	.LASF143
 3194 0d2b 01       		.byte	0x1
 3195 0d2c 0702     		.2byte	0x207
 3196 0d2e 83000000 		.4byte	0x83
 3197 0d32 7A040000 		.4byte	.LLST27
 3198 0d36 20       		.uleb128 0x20
 3199 0d37 08000000 		.4byte	.LVL131
 3200 0d3b 4A0C0000 		.4byte	0xc4a
 3201 0d3f 4B0D0000 		.4byte	0xd4b
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 98


 3202 0d43 21       		.uleb128 0x21
 3203 0d44 01       		.uleb128 0x1
 3204 0d45 50       		.byte	0x50
 3205 0d46 03       		.uleb128 0x3
 3206 0d47 F3       		.byte	0xf3
 3207 0d48 01       		.uleb128 0x1
 3208 0d49 50       		.byte	0x50
 3209 0d4a 00       		.byte	0
 3210 0d4b 25       		.uleb128 0x25
 3211 0d4c 58000000 		.4byte	.LVL138
 3212 0d50 930A0000 		.4byte	0xa93
 3213 0d54 25       		.uleb128 0x25
 3214 0d55 5E000000 		.4byte	.LVL139
 3215 0d59 D50A0000 		.4byte	0xad5
 3216 0d5d 00       		.byte	0
 3217 0d5e 2A       		.uleb128 0x2a
 3218 0d5f 18070000 		.4byte	.LASF181
 3219 0d63 01       		.byte	0x1
 3220 0d64 0C07     		.2byte	0x70c
 3221 0d66 83000000 		.4byte	0x83
 3222 0d6a 00000000 		.4byte	.LFB15
 3223 0d6e 14000000 		.4byte	.LFE15-.LFB15
 3224 0d72 01       		.uleb128 0x1
 3225 0d73 9C       		.byte	0x9c
 3226 0d74 A50D0000 		.4byte	0xda5
 3227 0d78 16       		.uleb128 0x16
 3228 0d79 3B0B0000 		.4byte	.LASF119
 3229 0d7d 01       		.byte	0x1
 3230 0d7e 0C07     		.2byte	0x70c
 3231 0d80 83000000 		.4byte	0x83
 3232 0d84 98040000 		.4byte	.LLST28
 3233 0d88 28       		.uleb128 0x28
 3234 0d89 AC080000 		.4byte	.LASF144
 3235 0d8d 01       		.byte	0x1
 3236 0d8e 0E07     		.2byte	0x70e
 3237 0d90 83000000 		.4byte	0x83
 3238 0d94 01       		.uleb128 0x1
 3239 0d95 50       		.byte	0x50
 3240 0d96 28       		.uleb128 0x28
 3241 0d97 E9010000 		.4byte	.LASF145
 3242 0d9b 01       		.byte	0x1
 3243 0d9c 1207     		.2byte	0x712
 3244 0d9e DA0C0000 		.4byte	0xcda
 3245 0da2 01       		.uleb128 0x1
 3246 0da3 53       		.byte	0x53
 3247 0da4 00       		.byte	0
 3248 0da5 2B       		.uleb128 0x2b
 3249 0da6 ED060000 		.4byte	.LASF146
 3250 0daa 01       		.byte	0x1
 3251 0dab 49       		.byte	0x49
 3252 0dac CA0A0000 		.4byte	0xaca
 3253 0db0 05       		.uleb128 0x5
 3254 0db1 03       		.byte	0x3
 3255 0db2 0C000000 		.4byte	CapSense_curTxIOPtr
 3256 0db6 2B       		.uleb128 0x2b
 3257 0db7 20050000 		.4byte	.LASF147
 3258 0dbb 01       		.byte	0x1
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 99


 3259 0dbc 4B       		.byte	0x4b
 3260 0dbd CA0A0000 		.4byte	0xaca
 3261 0dc1 05       		.uleb128 0x5
 3262 0dc2 03       		.byte	0x3
 3263 0dc3 08000000 		.4byte	CapSense_curRxIOPtr
 3264 0dc7 2B       		.uleb128 0x2b
 3265 0dc8 00060000 		.4byte	.LASF148
 3266 0dcc 01       		.byte	0x1
 3267 0dcd 4D       		.byte	0x4d
 3268 0dce 77000000 		.4byte	0x77
 3269 0dd2 05       		.uleb128 0x5
 3270 0dd3 03       		.byte	0x3
 3271 0dd4 06000000 		.4byte	CapSense_curWdgtTotalRx
 3272 0dd8 2B       		.uleb128 0x2b
 3273 0dd9 92070000 		.4byte	.LASF149
 3274 0ddd 01       		.byte	0x1
 3275 0dde 4F       		.byte	0x4f
 3276 0ddf 77000000 		.4byte	0x77
 3277 0de3 05       		.uleb128 0x5
 3278 0de4 03       		.byte	0x3
 3279 0de5 04000000 		.4byte	CapSense_curWdgtTotalTx
 3280 0de9 2B       		.uleb128 0x2b
 3281 0dea 19000000 		.4byte	.LASF150
 3282 0dee 01       		.byte	0x1
 3283 0def 51       		.byte	0x51
 3284 0df0 77000000 		.4byte	0x77
 3285 0df4 05       		.uleb128 0x5
 3286 0df5 03       		.byte	0x3
 3287 0df6 10000000 		.4byte	CapSense_eleCsxDisconnectFlag
 3288 0dfa 2C       		.uleb128 0x2c
 3289 0dfb 76050000 		.4byte	.LASF151
 3290 0dff 05       		.byte	0x5
 3291 0e00 B104     		.2byte	0x4b1
 3292 0e02 F6050000 		.4byte	0x5f6
 3293 0e06 2C       		.uleb128 0x2c
 3294 0e07 29080000 		.4byte	.LASF152
 3295 0e0b 05       		.byte	0x5
 3296 0e0c B204     		.2byte	0x4b2
 3297 0e0e 120E0000 		.4byte	0xe12
 3298 0e12 18       		.uleb128 0x18
 3299 0e13 AC070000 		.4byte	0x7ac
 3300 0e17 2D       		.uleb128 0x2d
 3301 0e18 39060000 		.4byte	.LASF153
 3302 0e1c 01       		.byte	0x1
 3303 0e1d 40       		.byte	0x40
 3304 0e1e A9000000 		.4byte	0xa9
 3305 0e22 05       		.uleb128 0x5
 3306 0e23 03       		.byte	0x3
 3307 0e24 00000000 		.4byte	CapSense_csxScanPeriod
 3308 0e28 2D       		.uleb128 0x2d
 3309 0e29 3D050000 		.4byte	.LASF154
 3310 0e2d 01       		.byte	0x1
 3311 0e2e 42       		.byte	0x42
 3312 0e2f A9000000 		.4byte	0xa9
 3313 0e33 05       		.uleb128 0x5
 3314 0e34 03       		.byte	0x3
 3315 0e35 00000000 		.4byte	CapSense_csxRawCount
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 100


 3316 0e39 2D       		.uleb128 0x2d
 3317 0e3a F5000000 		.4byte	.LASF155
 3318 0e3e 01       		.byte	0x1
 3319 0e3f 73       		.byte	0x73
 3320 0e40 BF000000 		.4byte	0xbf
 3321 0e44 05       		.uleb128 0x5
 3322 0e45 03       		.byte	0x3
 3323 0e46 00000000 		.4byte	CapSense_CSXPostScanApiPtr
 3324 0e4a 2E       		.uleb128 0x2e
 3325 0e4b 1D0B0000 		.4byte	.LASF156
 3326 0e4f 06       		.byte	0x6
 3327 0e50 9D       		.byte	0x9d
 3328 0e51 A4000000 		.4byte	0xa4
 3329 0e55 2E       		.uleb128 0x2e
 3330 0e56 F4020000 		.4byte	.LASF157
 3331 0e5a 06       		.byte	0x6
 3332 0e5b 9E       		.byte	0x9e
 3333 0e5c A4000000 		.4byte	0xa4
 3334 0e60 2E       		.uleb128 0x2e
 3335 0e61 440B0000 		.4byte	.LASF158
 3336 0e65 06       		.byte	0x6
 3337 0e66 9F       		.byte	0x9f
 3338 0e67 6B000000 		.4byte	0x6b
 3339 0e6b 2E       		.uleb128 0x2e
 3340 0e6c 430A0000 		.4byte	.LASF159
 3341 0e70 06       		.byte	0x6
 3342 0e71 A1       		.byte	0xa1
 3343 0e72 67070000 		.4byte	0x767
 3344 0e76 2E       		.uleb128 0x2e
 3345 0e77 650A0000 		.4byte	.LASF160
 3346 0e7b 06       		.byte	0x6
 3347 0e7c A8       		.byte	0xa8
 3348 0e7d 810E0000 		.4byte	0xe81
 3349 0e81 18       		.uleb128 0x18
 3350 0e82 6B000000 		.4byte	0x6b
 3351 0e86 2E       		.uleb128 0x2e
 3352 0e87 00000000 		.4byte	.LASF161
 3353 0e8b 06       		.byte	0x6
 3354 0e8c AE       		.byte	0xae
 3355 0e8d 910E0000 		.4byte	0xe91
 3356 0e91 06       		.uleb128 0x6
 3357 0e92 04       		.byte	0x4
 3358 0e93 970E0000 		.4byte	0xe97
 3359 0e97 18       		.uleb128 0x18
 3360 0e98 79070000 		.4byte	0x779
 3361 0e9c 2F       		.uleb128 0x2f
 3362 0e9d 6D010000 		.4byte	.LASF162
 3363 0ea1 6D010000 		.4byte	.LASF162
 3364 0ea5 07       		.byte	0x7
 3365 0ea6 C5       		.byte	0xc5
 3366 0ea7 2F       		.uleb128 0x2f
 3367 0ea8 E1090000 		.4byte	.LASF163
 3368 0eac E1090000 		.4byte	.LASF163
 3369 0eb0 07       		.byte	0x7
 3370 0eb1 C3       		.byte	0xc3
 3371 0eb2 2F       		.uleb128 0x2f
 3372 0eb3 2C0A0000 		.4byte	.LASF164
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 101


 3373 0eb7 2C0A0000 		.4byte	.LASF164
 3374 0ebb 07       		.byte	0x7
 3375 0ebc E5       		.byte	0xe5
 3376 0ebd 2F       		.uleb128 0x2f
 3377 0ebe 5B040000 		.4byte	.LASF165
 3378 0ec2 5B040000 		.4byte	.LASF165
 3379 0ec6 07       		.byte	0x7
 3380 0ec7 E6       		.byte	0xe6
 3381 0ec8 2F       		.uleb128 0x2f
 3382 0ec9 74000000 		.4byte	.LASF166
 3383 0ecd 74000000 		.4byte	.LASF166
 3384 0ed1 06       		.byte	0x6
 3385 0ed2 93       		.byte	0x93
 3386 0ed3 2F       		.uleb128 0x2f
 3387 0ed4 7A010000 		.4byte	.LASF167
 3388 0ed8 7A010000 		.4byte	.LASF167
 3389 0edc 06       		.byte	0x6
 3390 0edd 68       		.byte	0x68
 3391 0ede 2F       		.uleb128 0x2f
 3392 0edf 54000000 		.4byte	.LASF168
 3393 0ee3 54000000 		.4byte	.LASF168
 3394 0ee7 06       		.byte	0x6
 3395 0ee8 6D       		.byte	0x6d
 3396 0ee9 2F       		.uleb128 0x2f
 3397 0eea 42070000 		.4byte	.LASF169
 3398 0eee 42070000 		.4byte	.LASF169
 3399 0ef2 06       		.byte	0x6
 3400 0ef3 6B       		.byte	0x6b
 3401 0ef4 2F       		.uleb128 0x2f
 3402 0ef5 CB020000 		.4byte	.LASF170
 3403 0ef9 CB020000 		.4byte	.LASF170
 3404 0efd 07       		.byte	0x7
 3405 0efe DA       		.byte	0xda
 3406 0eff 2F       		.uleb128 0x2f
 3407 0f00 DA070000 		.4byte	.LASF171
 3408 0f04 DA070000 		.4byte	.LASF171
 3409 0f08 06       		.byte	0x6
 3410 0f09 49       		.byte	0x49
 3411 0f0a 2F       		.uleb128 0x2f
 3412 0f0b 68050000 		.4byte	.LASF172
 3413 0f0f 68050000 		.4byte	.LASF172
 3414 0f13 06       		.byte	0x6
 3415 0f14 4A       		.byte	0x4a
 3416 0f15 2F       		.uleb128 0x2f
 3417 0f16 A60A0000 		.4byte	.LASF173
 3418 0f1a A60A0000 		.4byte	.LASF173
 3419 0f1e 06       		.byte	0x6
 3420 0f1f 6C       		.byte	0x6c
 3421 0f20 2F       		.uleb128 0x2f
 3422 0f21 0F0A0000 		.4byte	.LASF174
 3423 0f25 0F0A0000 		.4byte	.LASF174
 3424 0f29 06       		.byte	0x6
 3425 0f2a 6E       		.byte	0x6e
 3426 0f2b 00       		.byte	0
 3427              		.section	.debug_abbrev,"",%progbits
 3428              	.Ldebug_abbrev0:
 3429 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 102


 3430 0001 11       		.uleb128 0x11
 3431 0002 01       		.byte	0x1
 3432 0003 25       		.uleb128 0x25
 3433 0004 0E       		.uleb128 0xe
 3434 0005 13       		.uleb128 0x13
 3435 0006 0B       		.uleb128 0xb
 3436 0007 03       		.uleb128 0x3
 3437 0008 0E       		.uleb128 0xe
 3438 0009 1B       		.uleb128 0x1b
 3439 000a 0E       		.uleb128 0xe
 3440 000b 55       		.uleb128 0x55
 3441 000c 17       		.uleb128 0x17
 3442 000d 11       		.uleb128 0x11
 3443 000e 01       		.uleb128 0x1
 3444 000f 10       		.uleb128 0x10
 3445 0010 17       		.uleb128 0x17
 3446 0011 00       		.byte	0
 3447 0012 00       		.byte	0
 3448 0013 02       		.uleb128 0x2
 3449 0014 24       		.uleb128 0x24
 3450 0015 00       		.byte	0
 3451 0016 0B       		.uleb128 0xb
 3452 0017 0B       		.uleb128 0xb
 3453 0018 3E       		.uleb128 0x3e
 3454 0019 0B       		.uleb128 0xb
 3455 001a 03       		.uleb128 0x3
 3456 001b 0E       		.uleb128 0xe
 3457 001c 00       		.byte	0
 3458 001d 00       		.byte	0
 3459 001e 03       		.uleb128 0x3
 3460 001f 24       		.uleb128 0x24
 3461 0020 00       		.byte	0
 3462 0021 0B       		.uleb128 0xb
 3463 0022 0B       		.uleb128 0xb
 3464 0023 3E       		.uleb128 0x3e
 3465 0024 0B       		.uleb128 0xb
 3466 0025 03       		.uleb128 0x3
 3467 0026 08       		.uleb128 0x8
 3468 0027 00       		.byte	0
 3469 0028 00       		.byte	0
 3470 0029 04       		.uleb128 0x4
 3471 002a 16       		.uleb128 0x16
 3472 002b 00       		.byte	0
 3473 002c 03       		.uleb128 0x3
 3474 002d 0E       		.uleb128 0xe
 3475 002e 3A       		.uleb128 0x3a
 3476 002f 0B       		.uleb128 0xb
 3477 0030 3B       		.uleb128 0x3b
 3478 0031 05       		.uleb128 0x5
 3479 0032 49       		.uleb128 0x49
 3480 0033 13       		.uleb128 0x13
 3481 0034 00       		.byte	0
 3482 0035 00       		.byte	0
 3483 0036 05       		.uleb128 0x5
 3484 0037 35       		.uleb128 0x35
 3485 0038 00       		.byte	0
 3486 0039 49       		.uleb128 0x49
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 103


 3487 003a 13       		.uleb128 0x13
 3488 003b 00       		.byte	0
 3489 003c 00       		.byte	0
 3490 003d 06       		.uleb128 0x6
 3491 003e 0F       		.uleb128 0xf
 3492 003f 00       		.byte	0
 3493 0040 0B       		.uleb128 0xb
 3494 0041 0B       		.uleb128 0xb
 3495 0042 49       		.uleb128 0x49
 3496 0043 13       		.uleb128 0x13
 3497 0044 00       		.byte	0
 3498 0045 00       		.byte	0
 3499 0046 07       		.uleb128 0x7
 3500 0047 15       		.uleb128 0x15
 3501 0048 00       		.byte	0
 3502 0049 27       		.uleb128 0x27
 3503 004a 19       		.uleb128 0x19
 3504 004b 00       		.byte	0
 3505 004c 00       		.byte	0
 3506 004d 08       		.uleb128 0x8
 3507 004e 0F       		.uleb128 0xf
 3508 004f 00       		.byte	0
 3509 0050 0B       		.uleb128 0xb
 3510 0051 0B       		.uleb128 0xb
 3511 0052 00       		.byte	0
 3512 0053 00       		.byte	0
 3513 0054 09       		.uleb128 0x9
 3514 0055 13       		.uleb128 0x13
 3515 0056 01       		.byte	0x1
 3516 0057 0B       		.uleb128 0xb
 3517 0058 0B       		.uleb128 0xb
 3518 0059 3A       		.uleb128 0x3a
 3519 005a 0B       		.uleb128 0xb
 3520 005b 3B       		.uleb128 0x3b
 3521 005c 0B       		.uleb128 0xb
 3522 005d 01       		.uleb128 0x1
 3523 005e 13       		.uleb128 0x13
 3524 005f 00       		.byte	0
 3525 0060 00       		.byte	0
 3526 0061 0A       		.uleb128 0xa
 3527 0062 0D       		.uleb128 0xd
 3528 0063 00       		.byte	0
 3529 0064 03       		.uleb128 0x3
 3530 0065 0E       		.uleb128 0xe
 3531 0066 3A       		.uleb128 0x3a
 3532 0067 0B       		.uleb128 0xb
 3533 0068 3B       		.uleb128 0x3b
 3534 0069 0B       		.uleb128 0xb
 3535 006a 49       		.uleb128 0x49
 3536 006b 13       		.uleb128 0x13
 3537 006c 38       		.uleb128 0x38
 3538 006d 0B       		.uleb128 0xb
 3539 006e 00       		.byte	0
 3540 006f 00       		.byte	0
 3541 0070 0B       		.uleb128 0xb
 3542 0071 16       		.uleb128 0x16
 3543 0072 00       		.byte	0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 104


 3544 0073 03       		.uleb128 0x3
 3545 0074 0E       		.uleb128 0xe
 3546 0075 3A       		.uleb128 0x3a
 3547 0076 0B       		.uleb128 0xb
 3548 0077 3B       		.uleb128 0x3b
 3549 0078 0B       		.uleb128 0xb
 3550 0079 49       		.uleb128 0x49
 3551 007a 13       		.uleb128 0x13
 3552 007b 00       		.byte	0
 3553 007c 00       		.byte	0
 3554 007d 0C       		.uleb128 0xc
 3555 007e 04       		.uleb128 0x4
 3556 007f 01       		.byte	0x1
 3557 0080 0B       		.uleb128 0xb
 3558 0081 0B       		.uleb128 0xb
 3559 0082 49       		.uleb128 0x49
 3560 0083 13       		.uleb128 0x13
 3561 0084 3A       		.uleb128 0x3a
 3562 0085 0B       		.uleb128 0xb
 3563 0086 3B       		.uleb128 0x3b
 3564 0087 0B       		.uleb128 0xb
 3565 0088 01       		.uleb128 0x1
 3566 0089 13       		.uleb128 0x13
 3567 008a 00       		.byte	0
 3568 008b 00       		.byte	0
 3569 008c 0D       		.uleb128 0xd
 3570 008d 28       		.uleb128 0x28
 3571 008e 00       		.byte	0
 3572 008f 03       		.uleb128 0x3
 3573 0090 0E       		.uleb128 0xe
 3574 0091 1C       		.uleb128 0x1c
 3575 0092 0B       		.uleb128 0xb
 3576 0093 00       		.byte	0
 3577 0094 00       		.byte	0
 3578 0095 0E       		.uleb128 0xe
 3579 0096 01       		.uleb128 0x1
 3580 0097 01       		.byte	0x1
 3581 0098 49       		.uleb128 0x49
 3582 0099 13       		.uleb128 0x13
 3583 009a 01       		.uleb128 0x1
 3584 009b 13       		.uleb128 0x13
 3585 009c 00       		.byte	0
 3586 009d 00       		.byte	0
 3587 009e 0F       		.uleb128 0xf
 3588 009f 21       		.uleb128 0x21
 3589 00a0 00       		.byte	0
 3590 00a1 49       		.uleb128 0x49
 3591 00a2 13       		.uleb128 0x13
 3592 00a3 2F       		.uleb128 0x2f
 3593 00a4 0B       		.uleb128 0xb
 3594 00a5 00       		.byte	0
 3595 00a6 00       		.byte	0
 3596 00a7 10       		.uleb128 0x10
 3597 00a8 0D       		.uleb128 0xd
 3598 00a9 00       		.byte	0
 3599 00aa 03       		.uleb128 0x3
 3600 00ab 0E       		.uleb128 0xe
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 105


 3601 00ac 3A       		.uleb128 0x3a
 3602 00ad 0B       		.uleb128 0xb
 3603 00ae 3B       		.uleb128 0x3b
 3604 00af 05       		.uleb128 0x5
 3605 00b0 49       		.uleb128 0x49
 3606 00b1 13       		.uleb128 0x13
 3607 00b2 38       		.uleb128 0x38
 3608 00b3 0B       		.uleb128 0xb
 3609 00b4 00       		.byte	0
 3610 00b5 00       		.byte	0
 3611 00b6 11       		.uleb128 0x11
 3612 00b7 13       		.uleb128 0x13
 3613 00b8 01       		.byte	0x1
 3614 00b9 0B       		.uleb128 0xb
 3615 00ba 0B       		.uleb128 0xb
 3616 00bb 3A       		.uleb128 0x3a
 3617 00bc 0B       		.uleb128 0xb
 3618 00bd 3B       		.uleb128 0x3b
 3619 00be 05       		.uleb128 0x5
 3620 00bf 01       		.uleb128 0x1
 3621 00c0 13       		.uleb128 0x13
 3622 00c1 00       		.byte	0
 3623 00c2 00       		.byte	0
 3624 00c3 12       		.uleb128 0x12
 3625 00c4 0D       		.uleb128 0xd
 3626 00c5 00       		.byte	0
 3627 00c6 03       		.uleb128 0x3
 3628 00c7 08       		.uleb128 0x8
 3629 00c8 3A       		.uleb128 0x3a
 3630 00c9 0B       		.uleb128 0xb
 3631 00ca 3B       		.uleb128 0x3b
 3632 00cb 05       		.uleb128 0x5
 3633 00cc 49       		.uleb128 0x49
 3634 00cd 13       		.uleb128 0x13
 3635 00ce 38       		.uleb128 0x38
 3636 00cf 0B       		.uleb128 0xb
 3637 00d0 00       		.byte	0
 3638 00d1 00       		.byte	0
 3639 00d2 13       		.uleb128 0x13
 3640 00d3 26       		.uleb128 0x26
 3641 00d4 00       		.byte	0
 3642 00d5 00       		.byte	0
 3643 00d6 00       		.byte	0
 3644 00d7 14       		.uleb128 0x14
 3645 00d8 2E       		.uleb128 0x2e
 3646 00d9 00       		.byte	0
 3647 00da 03       		.uleb128 0x3
 3648 00db 0E       		.uleb128 0xe
 3649 00dc 3A       		.uleb128 0x3a
 3650 00dd 0B       		.uleb128 0xb
 3651 00de 3B       		.uleb128 0x3b
 3652 00df 05       		.uleb128 0x5
 3653 00e0 27       		.uleb128 0x27
 3654 00e1 19       		.uleb128 0x19
 3655 00e2 11       		.uleb128 0x11
 3656 00e3 01       		.uleb128 0x1
 3657 00e4 12       		.uleb128 0x12
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 106


 3658 00e5 06       		.uleb128 0x6
 3659 00e6 40       		.uleb128 0x40
 3660 00e7 18       		.uleb128 0x18
 3661 00e8 9742     		.uleb128 0x2117
 3662 00ea 19       		.uleb128 0x19
 3663 00eb 00       		.byte	0
 3664 00ec 00       		.byte	0
 3665 00ed 15       		.uleb128 0x15
 3666 00ee 2E       		.uleb128 0x2e
 3667 00ef 01       		.byte	0x1
 3668 00f0 03       		.uleb128 0x3
 3669 00f1 0E       		.uleb128 0xe
 3670 00f2 3A       		.uleb128 0x3a
 3671 00f3 0B       		.uleb128 0xb
 3672 00f4 3B       		.uleb128 0x3b
 3673 00f5 05       		.uleb128 0x5
 3674 00f6 27       		.uleb128 0x27
 3675 00f7 19       		.uleb128 0x19
 3676 00f8 49       		.uleb128 0x49
 3677 00f9 13       		.uleb128 0x13
 3678 00fa 11       		.uleb128 0x11
 3679 00fb 01       		.uleb128 0x1
 3680 00fc 12       		.uleb128 0x12
 3681 00fd 06       		.uleb128 0x6
 3682 00fe 40       		.uleb128 0x40
 3683 00ff 18       		.uleb128 0x18
 3684 0100 9742     		.uleb128 0x2117
 3685 0102 19       		.uleb128 0x19
 3686 0103 01       		.uleb128 0x1
 3687 0104 13       		.uleb128 0x13
 3688 0105 00       		.byte	0
 3689 0106 00       		.byte	0
 3690 0107 16       		.uleb128 0x16
 3691 0108 05       		.uleb128 0x5
 3692 0109 00       		.byte	0
 3693 010a 03       		.uleb128 0x3
 3694 010b 0E       		.uleb128 0xe
 3695 010c 3A       		.uleb128 0x3a
 3696 010d 0B       		.uleb128 0xb
 3697 010e 3B       		.uleb128 0x3b
 3698 010f 05       		.uleb128 0x5
 3699 0110 49       		.uleb128 0x49
 3700 0111 13       		.uleb128 0x13
 3701 0112 02       		.uleb128 0x2
 3702 0113 17       		.uleb128 0x17
 3703 0114 00       		.byte	0
 3704 0115 00       		.byte	0
 3705 0116 17       		.uleb128 0x17
 3706 0117 34       		.uleb128 0x34
 3707 0118 00       		.byte	0
 3708 0119 03       		.uleb128 0x3
 3709 011a 0E       		.uleb128 0xe
 3710 011b 3A       		.uleb128 0x3a
 3711 011c 0B       		.uleb128 0xb
 3712 011d 3B       		.uleb128 0x3b
 3713 011e 05       		.uleb128 0x5
 3714 011f 49       		.uleb128 0x49
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 107


 3715 0120 13       		.uleb128 0x13
 3716 0121 02       		.uleb128 0x2
 3717 0122 17       		.uleb128 0x17
 3718 0123 00       		.byte	0
 3719 0124 00       		.byte	0
 3720 0125 18       		.uleb128 0x18
 3721 0126 26       		.uleb128 0x26
 3722 0127 00       		.byte	0
 3723 0128 49       		.uleb128 0x49
 3724 0129 13       		.uleb128 0x13
 3725 012a 00       		.byte	0
 3726 012b 00       		.byte	0
 3727 012c 19       		.uleb128 0x19
 3728 012d 2E       		.uleb128 0x2e
 3729 012e 01       		.byte	0x1
 3730 012f 03       		.uleb128 0x3
 3731 0130 0E       		.uleb128 0xe
 3732 0131 3A       		.uleb128 0x3a
 3733 0132 0B       		.uleb128 0xb
 3734 0133 3B       		.uleb128 0x3b
 3735 0134 05       		.uleb128 0x5
 3736 0135 27       		.uleb128 0x27
 3737 0136 19       		.uleb128 0x19
 3738 0137 20       		.uleb128 0x20
 3739 0138 0B       		.uleb128 0xb
 3740 0139 01       		.uleb128 0x1
 3741 013a 13       		.uleb128 0x13
 3742 013b 00       		.byte	0
 3743 013c 00       		.byte	0
 3744 013d 1A       		.uleb128 0x1a
 3745 013e 34       		.uleb128 0x34
 3746 013f 00       		.byte	0
 3747 0140 03       		.uleb128 0x3
 3748 0141 0E       		.uleb128 0xe
 3749 0142 3A       		.uleb128 0x3a
 3750 0143 0B       		.uleb128 0xb
 3751 0144 3B       		.uleb128 0x3b
 3752 0145 05       		.uleb128 0x5
 3753 0146 49       		.uleb128 0x49
 3754 0147 13       		.uleb128 0x13
 3755 0148 00       		.byte	0
 3756 0149 00       		.byte	0
 3757 014a 1B       		.uleb128 0x1b
 3758 014b 2E       		.uleb128 0x2e
 3759 014c 01       		.byte	0x1
 3760 014d 03       		.uleb128 0x3
 3761 014e 0E       		.uleb128 0xe
 3762 014f 3A       		.uleb128 0x3a
 3763 0150 0B       		.uleb128 0xb
 3764 0151 3B       		.uleb128 0x3b
 3765 0152 05       		.uleb128 0x5
 3766 0153 27       		.uleb128 0x27
 3767 0154 19       		.uleb128 0x19
 3768 0155 11       		.uleb128 0x11
 3769 0156 01       		.uleb128 0x1
 3770 0157 12       		.uleb128 0x12
 3771 0158 06       		.uleb128 0x6
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 108


 3772 0159 40       		.uleb128 0x40
 3773 015a 18       		.uleb128 0x18
 3774 015b 9642     		.uleb128 0x2116
 3775 015d 19       		.uleb128 0x19
 3776 015e 01       		.uleb128 0x1
 3777 015f 13       		.uleb128 0x13
 3778 0160 00       		.byte	0
 3779 0161 00       		.byte	0
 3780 0162 1C       		.uleb128 0x1c
 3781 0163 1D       		.uleb128 0x1d
 3782 0164 01       		.byte	0x1
 3783 0165 31       		.uleb128 0x31
 3784 0166 13       		.uleb128 0x13
 3785 0167 11       		.uleb128 0x11
 3786 0168 01       		.uleb128 0x1
 3787 0169 12       		.uleb128 0x12
 3788 016a 06       		.uleb128 0x6
 3789 016b 58       		.uleb128 0x58
 3790 016c 0B       		.uleb128 0xb
 3791 016d 59       		.uleb128 0x59
 3792 016e 05       		.uleb128 0x5
 3793 016f 00       		.byte	0
 3794 0170 00       		.byte	0
 3795 0171 1D       		.uleb128 0x1d
 3796 0172 0B       		.uleb128 0xb
 3797 0173 01       		.byte	0x1
 3798 0174 11       		.uleb128 0x11
 3799 0175 01       		.uleb128 0x1
 3800 0176 12       		.uleb128 0x12
 3801 0177 06       		.uleb128 0x6
 3802 0178 00       		.byte	0
 3803 0179 00       		.byte	0
 3804 017a 1E       		.uleb128 0x1e
 3805 017b 34       		.uleb128 0x34
 3806 017c 00       		.byte	0
 3807 017d 31       		.uleb128 0x31
 3808 017e 13       		.uleb128 0x13
 3809 017f 02       		.uleb128 0x2
 3810 0180 17       		.uleb128 0x17
 3811 0181 00       		.byte	0
 3812 0182 00       		.byte	0
 3813 0183 1F       		.uleb128 0x1f
 3814 0184 2E       		.uleb128 0x2e
 3815 0185 01       		.byte	0x1
 3816 0186 3F       		.uleb128 0x3f
 3817 0187 19       		.uleb128 0x19
 3818 0188 03       		.uleb128 0x3
 3819 0189 0E       		.uleb128 0xe
 3820 018a 3A       		.uleb128 0x3a
 3821 018b 0B       		.uleb128 0xb
 3822 018c 3B       		.uleb128 0x3b
 3823 018d 05       		.uleb128 0x5
 3824 018e 27       		.uleb128 0x27
 3825 018f 19       		.uleb128 0x19
 3826 0190 11       		.uleb128 0x11
 3827 0191 01       		.uleb128 0x1
 3828 0192 12       		.uleb128 0x12
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 109


 3829 0193 06       		.uleb128 0x6
 3830 0194 40       		.uleb128 0x40
 3831 0195 18       		.uleb128 0x18
 3832 0196 9642     		.uleb128 0x2116
 3833 0198 19       		.uleb128 0x19
 3834 0199 01       		.uleb128 0x1
 3835 019a 13       		.uleb128 0x13
 3836 019b 00       		.byte	0
 3837 019c 00       		.byte	0
 3838 019d 20       		.uleb128 0x20
 3839 019e 898201   		.uleb128 0x4109
 3840 01a1 01       		.byte	0x1
 3841 01a2 11       		.uleb128 0x11
 3842 01a3 01       		.uleb128 0x1
 3843 01a4 31       		.uleb128 0x31
 3844 01a5 13       		.uleb128 0x13
 3845 01a6 01       		.uleb128 0x1
 3846 01a7 13       		.uleb128 0x13
 3847 01a8 00       		.byte	0
 3848 01a9 00       		.byte	0
 3849 01aa 21       		.uleb128 0x21
 3850 01ab 8A8201   		.uleb128 0x410a
 3851 01ae 00       		.byte	0
 3852 01af 02       		.uleb128 0x2
 3853 01b0 18       		.uleb128 0x18
 3854 01b1 9142     		.uleb128 0x2111
 3855 01b3 18       		.uleb128 0x18
 3856 01b4 00       		.byte	0
 3857 01b5 00       		.byte	0
 3858 01b6 22       		.uleb128 0x22
 3859 01b7 898201   		.uleb128 0x4109
 3860 01ba 01       		.byte	0x1
 3861 01bb 11       		.uleb128 0x11
 3862 01bc 01       		.uleb128 0x1
 3863 01bd 31       		.uleb128 0x31
 3864 01be 13       		.uleb128 0x13
 3865 01bf 00       		.byte	0
 3866 01c0 00       		.byte	0
 3867 01c1 23       		.uleb128 0x23
 3868 01c2 2E       		.uleb128 0x2e
 3869 01c3 01       		.byte	0x1
 3870 01c4 3F       		.uleb128 0x3f
 3871 01c5 19       		.uleb128 0x19
 3872 01c6 03       		.uleb128 0x3
 3873 01c7 0E       		.uleb128 0xe
 3874 01c8 3A       		.uleb128 0x3a
 3875 01c9 0B       		.uleb128 0xb
 3876 01ca 3B       		.uleb128 0x3b
 3877 01cb 0B       		.uleb128 0xb
 3878 01cc 27       		.uleb128 0x27
 3879 01cd 19       		.uleb128 0x19
 3880 01ce 11       		.uleb128 0x11
 3881 01cf 01       		.uleb128 0x1
 3882 01d0 12       		.uleb128 0x12
 3883 01d1 06       		.uleb128 0x6
 3884 01d2 40       		.uleb128 0x40
 3885 01d3 18       		.uleb128 0x18
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 110


 3886 01d4 9742     		.uleb128 0x2117
 3887 01d6 19       		.uleb128 0x19
 3888 01d7 01       		.uleb128 0x1
 3889 01d8 13       		.uleb128 0x13
 3890 01d9 00       		.byte	0
 3891 01da 00       		.byte	0
 3892 01db 24       		.uleb128 0x24
 3893 01dc 34       		.uleb128 0x34
 3894 01dd 00       		.byte	0
 3895 01de 03       		.uleb128 0x3
 3896 01df 0E       		.uleb128 0xe
 3897 01e0 3A       		.uleb128 0x3a
 3898 01e1 0B       		.uleb128 0xb
 3899 01e2 3B       		.uleb128 0x3b
 3900 01e3 0B       		.uleb128 0xb
 3901 01e4 49       		.uleb128 0x49
 3902 01e5 13       		.uleb128 0x13
 3903 01e6 02       		.uleb128 0x2
 3904 01e7 17       		.uleb128 0x17
 3905 01e8 00       		.byte	0
 3906 01e9 00       		.byte	0
 3907 01ea 25       		.uleb128 0x25
 3908 01eb 898201   		.uleb128 0x4109
 3909 01ee 00       		.byte	0
 3910 01ef 11       		.uleb128 0x11
 3911 01f0 01       		.uleb128 0x1
 3912 01f1 31       		.uleb128 0x31
 3913 01f2 13       		.uleb128 0x13
 3914 01f3 00       		.byte	0
 3915 01f4 00       		.byte	0
 3916 01f5 26       		.uleb128 0x26
 3917 01f6 2E       		.uleb128 0x2e
 3918 01f7 01       		.byte	0x1
 3919 01f8 3F       		.uleb128 0x3f
 3920 01f9 19       		.uleb128 0x19
 3921 01fa 03       		.uleb128 0x3
 3922 01fb 0E       		.uleb128 0xe
 3923 01fc 3A       		.uleb128 0x3a
 3924 01fd 0B       		.uleb128 0xb
 3925 01fe 3B       		.uleb128 0x3b
 3926 01ff 05       		.uleb128 0x5
 3927 0200 27       		.uleb128 0x27
 3928 0201 19       		.uleb128 0x19
 3929 0202 11       		.uleb128 0x11
 3930 0203 01       		.uleb128 0x1
 3931 0204 12       		.uleb128 0x12
 3932 0205 06       		.uleb128 0x6
 3933 0206 40       		.uleb128 0x40
 3934 0207 18       		.uleb128 0x18
 3935 0208 9742     		.uleb128 0x2117
 3936 020a 19       		.uleb128 0x19
 3937 020b 01       		.uleb128 0x1
 3938 020c 13       		.uleb128 0x13
 3939 020d 00       		.byte	0
 3940 020e 00       		.byte	0
 3941 020f 27       		.uleb128 0x27
 3942 0210 05       		.uleb128 0x5
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 111


 3943 0211 00       		.byte	0
 3944 0212 03       		.uleb128 0x3
 3945 0213 0E       		.uleb128 0xe
 3946 0214 3A       		.uleb128 0x3a
 3947 0215 0B       		.uleb128 0xb
 3948 0216 3B       		.uleb128 0x3b
 3949 0217 05       		.uleb128 0x5
 3950 0218 49       		.uleb128 0x49
 3951 0219 13       		.uleb128 0x13
 3952 021a 02       		.uleb128 0x2
 3953 021b 18       		.uleb128 0x18
 3954 021c 00       		.byte	0
 3955 021d 00       		.byte	0
 3956 021e 28       		.uleb128 0x28
 3957 021f 34       		.uleb128 0x34
 3958 0220 00       		.byte	0
 3959 0221 03       		.uleb128 0x3
 3960 0222 0E       		.uleb128 0xe
 3961 0223 3A       		.uleb128 0x3a
 3962 0224 0B       		.uleb128 0xb
 3963 0225 3B       		.uleb128 0x3b
 3964 0226 05       		.uleb128 0x5
 3965 0227 49       		.uleb128 0x49
 3966 0228 13       		.uleb128 0x13
 3967 0229 02       		.uleb128 0x2
 3968 022a 18       		.uleb128 0x18
 3969 022b 00       		.byte	0
 3970 022c 00       		.byte	0
 3971 022d 29       		.uleb128 0x29
 3972 022e 2E       		.uleb128 0x2e
 3973 022f 01       		.byte	0x1
 3974 0230 03       		.uleb128 0x3
 3975 0231 0E       		.uleb128 0xe
 3976 0232 3A       		.uleb128 0x3a
 3977 0233 0B       		.uleb128 0xb
 3978 0234 3B       		.uleb128 0x3b
 3979 0235 05       		.uleb128 0x5
 3980 0236 27       		.uleb128 0x27
 3981 0237 19       		.uleb128 0x19
 3982 0238 11       		.uleb128 0x11
 3983 0239 01       		.uleb128 0x1
 3984 023a 12       		.uleb128 0x12
 3985 023b 06       		.uleb128 0x6
 3986 023c 40       		.uleb128 0x40
 3987 023d 18       		.uleb128 0x18
 3988 023e 9742     		.uleb128 0x2117
 3989 0240 19       		.uleb128 0x19
 3990 0241 01       		.uleb128 0x1
 3991 0242 13       		.uleb128 0x13
 3992 0243 00       		.byte	0
 3993 0244 00       		.byte	0
 3994 0245 2A       		.uleb128 0x2a
 3995 0246 2E       		.uleb128 0x2e
 3996 0247 01       		.byte	0x1
 3997 0248 3F       		.uleb128 0x3f
 3998 0249 19       		.uleb128 0x19
 3999 024a 03       		.uleb128 0x3
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 112


 4000 024b 0E       		.uleb128 0xe
 4001 024c 3A       		.uleb128 0x3a
 4002 024d 0B       		.uleb128 0xb
 4003 024e 3B       		.uleb128 0x3b
 4004 024f 05       		.uleb128 0x5
 4005 0250 27       		.uleb128 0x27
 4006 0251 19       		.uleb128 0x19
 4007 0252 49       		.uleb128 0x49
 4008 0253 13       		.uleb128 0x13
 4009 0254 11       		.uleb128 0x11
 4010 0255 01       		.uleb128 0x1
 4011 0256 12       		.uleb128 0x12
 4012 0257 06       		.uleb128 0x6
 4013 0258 40       		.uleb128 0x40
 4014 0259 18       		.uleb128 0x18
 4015 025a 9742     		.uleb128 0x2117
 4016 025c 19       		.uleb128 0x19
 4017 025d 01       		.uleb128 0x1
 4018 025e 13       		.uleb128 0x13
 4019 025f 00       		.byte	0
 4020 0260 00       		.byte	0
 4021 0261 2B       		.uleb128 0x2b
 4022 0262 34       		.uleb128 0x34
 4023 0263 00       		.byte	0
 4024 0264 03       		.uleb128 0x3
 4025 0265 0E       		.uleb128 0xe
 4026 0266 3A       		.uleb128 0x3a
 4027 0267 0B       		.uleb128 0xb
 4028 0268 3B       		.uleb128 0x3b
 4029 0269 0B       		.uleb128 0xb
 4030 026a 49       		.uleb128 0x49
 4031 026b 13       		.uleb128 0x13
 4032 026c 02       		.uleb128 0x2
 4033 026d 18       		.uleb128 0x18
 4034 026e 00       		.byte	0
 4035 026f 00       		.byte	0
 4036 0270 2C       		.uleb128 0x2c
 4037 0271 34       		.uleb128 0x34
 4038 0272 00       		.byte	0
 4039 0273 03       		.uleb128 0x3
 4040 0274 0E       		.uleb128 0xe
 4041 0275 3A       		.uleb128 0x3a
 4042 0276 0B       		.uleb128 0xb
 4043 0277 3B       		.uleb128 0x3b
 4044 0278 05       		.uleb128 0x5
 4045 0279 49       		.uleb128 0x49
 4046 027a 13       		.uleb128 0x13
 4047 027b 3F       		.uleb128 0x3f
 4048 027c 19       		.uleb128 0x19
 4049 027d 3C       		.uleb128 0x3c
 4050 027e 19       		.uleb128 0x19
 4051 027f 00       		.byte	0
 4052 0280 00       		.byte	0
 4053 0281 2D       		.uleb128 0x2d
 4054 0282 34       		.uleb128 0x34
 4055 0283 00       		.byte	0
 4056 0284 03       		.uleb128 0x3
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 113


 4057 0285 0E       		.uleb128 0xe
 4058 0286 3A       		.uleb128 0x3a
 4059 0287 0B       		.uleb128 0xb
 4060 0288 3B       		.uleb128 0x3b
 4061 0289 0B       		.uleb128 0xb
 4062 028a 49       		.uleb128 0x49
 4063 028b 13       		.uleb128 0x13
 4064 028c 3F       		.uleb128 0x3f
 4065 028d 19       		.uleb128 0x19
 4066 028e 02       		.uleb128 0x2
 4067 028f 18       		.uleb128 0x18
 4068 0290 00       		.byte	0
 4069 0291 00       		.byte	0
 4070 0292 2E       		.uleb128 0x2e
 4071 0293 34       		.uleb128 0x34
 4072 0294 00       		.byte	0
 4073 0295 03       		.uleb128 0x3
 4074 0296 0E       		.uleb128 0xe
 4075 0297 3A       		.uleb128 0x3a
 4076 0298 0B       		.uleb128 0xb
 4077 0299 3B       		.uleb128 0x3b
 4078 029a 0B       		.uleb128 0xb
 4079 029b 49       		.uleb128 0x49
 4080 029c 13       		.uleb128 0x13
 4081 029d 3F       		.uleb128 0x3f
 4082 029e 19       		.uleb128 0x19
 4083 029f 3C       		.uleb128 0x3c
 4084 02a0 19       		.uleb128 0x19
 4085 02a1 00       		.byte	0
 4086 02a2 00       		.byte	0
 4087 02a3 2F       		.uleb128 0x2f
 4088 02a4 2E       		.uleb128 0x2e
 4089 02a5 00       		.byte	0
 4090 02a6 3F       		.uleb128 0x3f
 4091 02a7 19       		.uleb128 0x19
 4092 02a8 3C       		.uleb128 0x3c
 4093 02a9 19       		.uleb128 0x19
 4094 02aa 6E       		.uleb128 0x6e
 4095 02ab 0E       		.uleb128 0xe
 4096 02ac 03       		.uleb128 0x3
 4097 02ad 0E       		.uleb128 0xe
 4098 02ae 3A       		.uleb128 0x3a
 4099 02af 0B       		.uleb128 0xb
 4100 02b0 3B       		.uleb128 0x3b
 4101 02b1 0B       		.uleb128 0xb
 4102 02b2 00       		.byte	0
 4103 02b3 00       		.byte	0
 4104 02b4 00       		.byte	0
 4105              		.section	.debug_loc,"",%progbits
 4106              	.Ldebug_loc0:
 4107              	.LLST0:
 4108 0000 00000000 		.4byte	.LVL0
 4109 0004 06000000 		.4byte	.LVL2
 4110 0008 0100     		.2byte	0x1
 4111 000a 50       		.byte	0x50
 4112 000b 06000000 		.4byte	.LVL2
 4113 000f 0C000000 		.4byte	.LFE16
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 114


 4114 0013 0400     		.2byte	0x4
 4115 0015 F3       		.byte	0xf3
 4116 0016 01       		.uleb128 0x1
 4117 0017 50       		.byte	0x50
 4118 0018 9F       		.byte	0x9f
 4119 0019 00000000 		.4byte	0
 4120 001d 00000000 		.4byte	0
 4121              	.LLST1:
 4122 0021 02000000 		.4byte	.LVL1
 4123 0025 0A000000 		.4byte	.LVL3
 4124 0029 0100     		.2byte	0x1
 4125 002b 53       		.byte	0x53
 4126 002c 0A000000 		.4byte	.LVL3
 4127 0030 0C000000 		.4byte	.LFE16
 4128 0034 0700     		.2byte	0x7
 4129 0036 70       		.byte	0x70
 4130 0037 00       		.sleb128 0
 4131 0038 0A       		.byte	0xa
 4132 0039 FFFF     		.2byte	0xffff
 4133 003b 1A       		.byte	0x1a
 4134 003c 9F       		.byte	0x9f
 4135 003d 00000000 		.4byte	0
 4136 0041 00000000 		.4byte	0
 4137              	.LLST2:
 4138 0045 0E000000 		.4byte	.LVL4
 4139 0049 12000000 		.4byte	.LVL5
 4140 004d 0600     		.2byte	0x6
 4141 004f 73       		.byte	0x73
 4142 0050 00       		.sleb128 0
 4143 0051 08       		.byte	0x8
 4144 0052 FF       		.byte	0xff
 4145 0053 1A       		.byte	0x1a
 4146 0054 9F       		.byte	0x9f
 4147 0055 12000000 		.4byte	.LVL5
 4148 0059 1A000000 		.4byte	.LVL6
 4149 005d 0100     		.2byte	0x1
 4150 005f 53       		.byte	0x53
 4151 0060 1A000000 		.4byte	.LVL6
 4152 0064 1C000000 		.4byte	.LVL7
 4153 0068 0500     		.2byte	0x5
 4154 006a 0C       		.byte	0xc
 4155 006b C0010B40 		.4byte	0x400b01c0
 4156 006f 00000000 		.4byte	0
 4157 0073 00000000 		.4byte	0
 4158              	.LLST3:
 4159 0077 96000000 		.4byte	.LVL13
 4160 007b 9A000000 		.4byte	.LVL14
 4161 007f 0100     		.2byte	0x1
 4162 0081 53       		.byte	0x53
 4163 0082 00000000 		.4byte	0
 4164 0086 00000000 		.4byte	0
 4165              	.LLST4:
 4166 008a 52000000 		.4byte	.LVL8
 4167 008e 58000000 		.4byte	.LVL9
 4168 0092 0400     		.2byte	0x4
 4169 0094 0A       		.byte	0xa
 4170 0095 E001     		.2byte	0x1e0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 115


 4171 0097 9F       		.byte	0x9f
 4172 0098 58000000 		.4byte	.LVL9
 4173 009c 68000000 		.4byte	.LVL11
 4174 00a0 0100     		.2byte	0x1
 4175 00a2 53       		.byte	0x53
 4176 00a3 00000000 		.4byte	0
 4177 00a7 00000000 		.4byte	0
 4178              	.LLST5:
 4179 00ab 80000000 		.4byte	.LVL12
 4180 00af B4000000 		.4byte	.LVL15
 4181 00b3 0100     		.2byte	0x1
 4182 00b5 50       		.byte	0x50
 4183 00b6 00000000 		.4byte	0
 4184 00ba 00000000 		.4byte	0
 4185              	.LLST6:
 4186 00be 5C000000 		.4byte	.LVL19
 4187 00c2 6F000000 		.4byte	.LVL23-1
 4188 00c6 0100     		.2byte	0x1
 4189 00c8 50       		.byte	0x50
 4190 00c9 82000000 		.4byte	.LVL24
 4191 00cd 95000000 		.4byte	.LVL28-1
 4192 00d1 0100     		.2byte	0x1
 4193 00d3 50       		.byte	0x50
 4194 00d4 CE000000 		.4byte	.LVL30
 4195 00d8 DB000000 		.4byte	.LVL33-1
 4196 00dc 0100     		.2byte	0x1
 4197 00de 50       		.byte	0x50
 4198 00df E0000000 		.4byte	.LVL34
 4199 00e3 EB000000 		.4byte	.LVL37-1
 4200 00e7 0100     		.2byte	0x1
 4201 00e9 50       		.byte	0x50
 4202 00ea F0000000 		.4byte	.LVL38
 4203 00ee 03010000 		.4byte	.LVL42-1
 4204 00f2 0100     		.2byte	0x1
 4205 00f4 50       		.byte	0x50
 4206 00f5 08010000 		.4byte	.LVL43
 4207 00f9 19010000 		.4byte	.LVL47-1
 4208 00fd 0100     		.2byte	0x1
 4209 00ff 50       		.byte	0x50
 4210 0100 00000000 		.4byte	0
 4211 0104 00000000 		.4byte	0
 4212              	.LLST7:
 4213 0108 60000000 		.4byte	.LVL20
 4214 010c 64000000 		.4byte	.LVL21
 4215 0110 0100     		.2byte	0x1
 4216 0112 51       		.byte	0x51
 4217 0113 64000000 		.4byte	.LVL21
 4218 0117 6F000000 		.4byte	.LVL23-1
 4219 011b 0100     		.2byte	0x1
 4220 011d 53       		.byte	0x53
 4221 011e 86000000 		.4byte	.LVL25
 4222 0122 8A000000 		.4byte	.LVL26
 4223 0126 0100     		.2byte	0x1
 4224 0128 51       		.byte	0x51
 4225 0129 8A000000 		.4byte	.LVL26
 4226 012d 95000000 		.4byte	.LVL28-1
 4227 0131 0100     		.2byte	0x1
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 116


 4228 0133 53       		.byte	0x53
 4229 0134 D2000000 		.4byte	.LVL31
 4230 0138 D6000000 		.4byte	.LVL32
 4231 013c 0100     		.2byte	0x1
 4232 013e 52       		.byte	0x52
 4233 013f D6000000 		.4byte	.LVL32
 4234 0143 DB000000 		.4byte	.LVL33-1
 4235 0147 0100     		.2byte	0x1
 4236 0149 53       		.byte	0x53
 4237 014a E2000000 		.4byte	.LVL35
 4238 014e E6000000 		.4byte	.LVL36
 4239 0152 0100     		.2byte	0x1
 4240 0154 52       		.byte	0x52
 4241 0155 E6000000 		.4byte	.LVL36
 4242 0159 EB000000 		.4byte	.LVL37-1
 4243 015d 0100     		.2byte	0x1
 4244 015f 53       		.byte	0x53
 4245 0160 F4000000 		.4byte	.LVL39
 4246 0164 F8000000 		.4byte	.LVL40
 4247 0168 0100     		.2byte	0x1
 4248 016a 52       		.byte	0x52
 4249 016b F8000000 		.4byte	.LVL40
 4250 016f 03010000 		.4byte	.LVL42-1
 4251 0173 0100     		.2byte	0x1
 4252 0175 53       		.byte	0x53
 4253 0176 0A010000 		.4byte	.LVL44
 4254 017a 0E010000 		.4byte	.LVL45
 4255 017e 0100     		.2byte	0x1
 4256 0180 52       		.byte	0x52
 4257 0181 0E010000 		.4byte	.LVL45
 4258 0185 19010000 		.4byte	.LVL47-1
 4259 0189 0100     		.2byte	0x1
 4260 018b 53       		.byte	0x53
 4261 018c 00000000 		.4byte	0
 4262 0190 00000000 		.4byte	0
 4263              	.LLST8:
 4264 0194 00000000 		.4byte	.LVL53
 4265 0198 20000000 		.4byte	.LVL55
 4266 019c 0100     		.2byte	0x1
 4267 019e 50       		.byte	0x50
 4268 019f 20000000 		.4byte	.LVL55
 4269 01a3 CC000000 		.4byte	.LFE9
 4270 01a7 0200     		.2byte	0x2
 4271 01a9 91       		.byte	0x91
 4272 01aa 64       		.sleb128 -28
 4273 01ab 00000000 		.4byte	0
 4274 01af 00000000 		.4byte	0
 4275              	.LLST9:
 4276 01b3 00000000 		.4byte	.LVL53
 4277 01b7 23000000 		.4byte	.LVL56-1
 4278 01bb 0100     		.2byte	0x1
 4279 01bd 51       		.byte	0x51
 4280 01be 23000000 		.4byte	.LVL56-1
 4281 01c2 CC000000 		.4byte	.LFE9
 4282 01c6 0400     		.2byte	0x4
 4283 01c8 F3       		.byte	0xf3
 4284 01c9 01       		.uleb128 0x1
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 117


 4285 01ca 51       		.byte	0x51
 4286 01cb 9F       		.byte	0x9f
 4287 01cc 00000000 		.4byte	0
 4288 01d0 00000000 		.4byte	0
 4289              	.LLST10:
 4290 01d4 2A000000 		.4byte	.LVL57
 4291 01d8 2C000000 		.4byte	.LVL58
 4292 01dc 0700     		.2byte	0x7
 4293 01de 70       		.byte	0x70
 4294 01df 00       		.sleb128 0
 4295 01e0 0A       		.byte	0xa
 4296 01e1 FFFF     		.2byte	0xffff
 4297 01e3 1A       		.byte	0x1a
 4298 01e4 9F       		.byte	0x9f
 4299 01e5 34000000 		.4byte	.LVL60
 4300 01e9 4E000000 		.4byte	.LVL62
 4301 01ed 0100     		.2byte	0x1
 4302 01ef 50       		.byte	0x50
 4303 01f0 4E000000 		.4byte	.LVL62
 4304 01f4 B6000000 		.4byte	.LVL74
 4305 01f8 0100     		.2byte	0x1
 4306 01fa 57       		.byte	0x57
 4307 01fb 00000000 		.4byte	0
 4308 01ff 00000000 		.4byte	0
 4309              	.LLST11:
 4310 0203 4A000000 		.4byte	.LVL61
 4311 0207 B4000000 		.4byte	.LVL73
 4312 020b 0100     		.2byte	0x1
 4313 020d 56       		.byte	0x56
 4314 020e 00000000 		.4byte	0
 4315 0212 00000000 		.4byte	0
 4316              	.LLST12:
 4317 0216 4A000000 		.4byte	.LVL61
 4318 021a 4E000000 		.4byte	.LVL62
 4319 021e 0200     		.2byte	0x2
 4320 0220 30       		.byte	0x30
 4321 0221 9F       		.byte	0x9f
 4322 0222 4E000000 		.4byte	.LVL62
 4323 0226 73000000 		.4byte	.LVL66-1
 4324 022a 0100     		.2byte	0x1
 4325 022c 51       		.byte	0x51
 4326 022d 86000000 		.4byte	.LVL68
 4327 0231 8A000000 		.4byte	.LVL69
 4328 0235 0200     		.2byte	0x2
 4329 0237 30       		.byte	0x30
 4330 0238 9F       		.byte	0x9f
 4331 0239 8A000000 		.4byte	.LVL69
 4332 023d B4000000 		.4byte	.LVL73
 4333 0241 0100     		.2byte	0x1
 4334 0243 51       		.byte	0x51
 4335 0244 00000000 		.4byte	0
 4336 0248 00000000 		.4byte	0
 4337              	.LLST13:
 4338 024c 0C000000 		.4byte	.LVL54
 4339 0250 6C000000 		.4byte	.LVL64
 4340 0254 0300     		.2byte	0x3
 4341 0256 08       		.byte	0x8
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 118


 4342 0257 40       		.byte	0x40
 4343 0258 9F       		.byte	0x9f
 4344 0259 6C000000 		.4byte	.LVL64
 4345 025d 6E000000 		.4byte	.LVL65
 4346 0261 0100     		.2byte	0x1
 4347 0263 54       		.byte	0x54
 4348 0264 6E000000 		.4byte	.LVL65
 4349 0268 AC000000 		.4byte	.LVL71
 4350 026c 0100     		.2byte	0x1
 4351 026e 55       		.byte	0x55
 4352 026f AC000000 		.4byte	.LVL71
 4353 0273 B4000000 		.4byte	.LVL73
 4354 0277 0100     		.2byte	0x1
 4355 0279 54       		.byte	0x54
 4356 027a 00000000 		.4byte	0
 4357 027e 00000000 		.4byte	0
 4358              	.LLST14:
 4359 0282 0C000000 		.4byte	.LVL54
 4360 0286 6C000000 		.4byte	.LVL64
 4361 028a 0300     		.2byte	0x3
 4362 028c 08       		.byte	0x8
 4363 028d 20       		.byte	0x20
 4364 028e 9F       		.byte	0x9f
 4365 028f 6C000000 		.4byte	.LVL64
 4366 0293 6E000000 		.4byte	.LVL65
 4367 0297 0100     		.2byte	0x1
 4368 0299 53       		.byte	0x53
 4369 029a 6E000000 		.4byte	.LVL65
 4370 029e B0000000 		.4byte	.LVL72
 4371 02a2 0100     		.2byte	0x1
 4372 02a4 54       		.byte	0x54
 4373 02a5 B0000000 		.4byte	.LVL72
 4374 02a9 B4000000 		.4byte	.LVL73
 4375 02ad 0100     		.2byte	0x1
 4376 02af 53       		.byte	0x53
 4377 02b0 00000000 		.4byte	0
 4378 02b4 00000000 		.4byte	0
 4379              	.LLST15:
 4380 02b8 00000000 		.4byte	.LVL75
 4381 02bc 16000000 		.4byte	.LVL79
 4382 02c0 0100     		.2byte	0x1
 4383 02c2 50       		.byte	0x50
 4384 02c3 16000000 		.4byte	.LVL79
 4385 02c7 20000000 		.4byte	.LFE11
 4386 02cb 0400     		.2byte	0x4
 4387 02cd F3       		.byte	0xf3
 4388 02ce 01       		.uleb128 0x1
 4389 02cf 50       		.byte	0x50
 4390 02d0 9F       		.byte	0x9f
 4391 02d1 00000000 		.4byte	0
 4392 02d5 00000000 		.4byte	0
 4393              	.LLST16:
 4394 02d9 06000000 		.4byte	.LVL76
 4395 02dd 0E000000 		.4byte	.LVL77
 4396 02e1 0100     		.2byte	0x1
 4397 02e3 51       		.byte	0x51
 4398 02e4 0E000000 		.4byte	.LVL77
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 119


 4399 02e8 14000000 		.4byte	.LVL78
 4400 02ec 0100     		.2byte	0x1
 4401 02ee 53       		.byte	0x53
 4402 02ef 14000000 		.4byte	.LVL78
 4403 02f3 1C000000 		.4byte	.LVL80
 4404 02f7 0100     		.2byte	0x1
 4405 02f9 51       		.byte	0x51
 4406 02fa 1C000000 		.4byte	.LVL80
 4407 02fe 20000000 		.4byte	.LFE11
 4408 0302 0100     		.2byte	0x1
 4409 0304 53       		.byte	0x53
 4410 0305 00000000 		.4byte	0
 4411 0309 00000000 		.4byte	0
 4412              	.LLST17:
 4413 030d 00000000 		.4byte	.LVL81
 4414 0311 16000000 		.4byte	.LVL85
 4415 0315 0100     		.2byte	0x1
 4416 0317 50       		.byte	0x50
 4417 0318 16000000 		.4byte	.LVL85
 4418 031c 20000000 		.4byte	.LFE12
 4419 0320 0400     		.2byte	0x4
 4420 0322 F3       		.byte	0xf3
 4421 0323 01       		.uleb128 0x1
 4422 0324 50       		.byte	0x50
 4423 0325 9F       		.byte	0x9f
 4424 0326 00000000 		.4byte	0
 4425 032a 00000000 		.4byte	0
 4426              	.LLST18:
 4427 032e 06000000 		.4byte	.LVL82
 4428 0332 14000000 		.4byte	.LVL84
 4429 0336 0100     		.2byte	0x1
 4430 0338 53       		.byte	0x53
 4431 0339 14000000 		.4byte	.LVL84
 4432 033d 1C000000 		.4byte	.LVL86
 4433 0341 0100     		.2byte	0x1
 4434 0343 51       		.byte	0x51
 4435 0344 1C000000 		.4byte	.LVL86
 4436 0348 20000000 		.4byte	.LFE12
 4437 034c 0100     		.2byte	0x1
 4438 034e 53       		.byte	0x53
 4439 034f 00000000 		.4byte	0
 4440 0353 00000000 		.4byte	0
 4441              	.LLST19:
 4442 0357 06000000 		.4byte	.LVL95
 4443 035b 18000000 		.4byte	.LVL98
 4444 035f 0100     		.2byte	0x1
 4445 0361 53       		.byte	0x53
 4446 0362 1A000000 		.4byte	.LVL99
 4447 0366 20000000 		.4byte	.LVL100
 4448 036a 0100     		.2byte	0x1
 4449 036c 52       		.byte	0x52
 4450 036d 20000000 		.4byte	.LVL100
 4451 0371 2E000000 		.4byte	.LFE14
 4452 0375 0100     		.2byte	0x1
 4453 0377 53       		.byte	0x53
 4454 0378 00000000 		.4byte	0
 4455 037c 00000000 		.4byte	0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 120


 4456              	.LLST20:
 4457 0380 00000000 		.4byte	.LVL114
 4458 0384 0C000000 		.4byte	.LVL115
 4459 0388 0100     		.2byte	0x1
 4460 038a 50       		.byte	0x50
 4461 038b 0C000000 		.4byte	.LVL115
 4462 038f 24000000 		.4byte	.LVL119
 4463 0393 0100     		.2byte	0x1
 4464 0395 54       		.byte	0x54
 4465 0396 24000000 		.4byte	.LVL119
 4466 039a 6C000000 		.4byte	.LFE3
 4467 039e 0400     		.2byte	0x4
 4468 03a0 F3       		.byte	0xf3
 4469 03a1 01       		.uleb128 0x1
 4470 03a2 50       		.byte	0x50
 4471 03a3 9F       		.byte	0x9f
 4472 03a4 00000000 		.4byte	0
 4473 03a8 00000000 		.4byte	0
 4474              	.LLST21:
 4475 03ac 22000000 		.4byte	.LVL118
 4476 03b0 4C000000 		.4byte	.LVL129
 4477 03b4 0100     		.2byte	0x1
 4478 03b6 55       		.byte	0x55
 4479 03b7 00000000 		.4byte	0
 4480 03bb 00000000 		.4byte	0
 4481              	.LLST22:
 4482 03bf 36000000 		.4byte	.LVL121
 4483 03c3 3E000000 		.4byte	.LVL125
 4484 03c7 0100     		.2byte	0x1
 4485 03c9 53       		.byte	0x53
 4486 03ca 3E000000 		.4byte	.LVL125
 4487 03ce 40000000 		.4byte	.LVL126
 4488 03d2 0800     		.2byte	0x8
 4489 03d4 75       		.byte	0x75
 4490 03d5 0C       		.sleb128 12
 4491 03d6 94       		.byte	0x94
 4492 03d7 01       		.byte	0x1
 4493 03d8 08       		.byte	0x8
 4494 03d9 FF       		.byte	0xff
 4495 03da 1A       		.byte	0x1a
 4496 03db 9F       		.byte	0x9f
 4497 03dc 40000000 		.4byte	.LVL126
 4498 03e0 4C000000 		.4byte	.LVL128
 4499 03e4 0100     		.2byte	0x1
 4500 03e6 54       		.byte	0x54
 4501 03e7 00000000 		.4byte	0
 4502 03eb 00000000 		.4byte	0
 4503              	.LLST23:
 4504 03ef 24000000 		.4byte	.LVL119
 4505 03f3 38000000 		.4byte	.LVL122
 4506 03f7 0100     		.2byte	0x1
 4507 03f9 54       		.byte	0x54
 4508 03fa 38000000 		.4byte	.LVL122
 4509 03fe 3A000000 		.4byte	.LVL123
 4510 0402 0300     		.2byte	0x3
 4511 0404 74       		.byte	0x74
 4512 0405 01       		.sleb128 1
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 121


 4513 0406 9F       		.byte	0x9f
 4514 0407 3C000000 		.4byte	.LVL124
 4515 040b 40000000 		.4byte	.LVL126
 4516 040f 0100     		.2byte	0x1
 4517 0411 54       		.byte	0x54
 4518 0412 00000000 		.4byte	0
 4519 0416 00000000 		.4byte	0
 4520              	.LLST24:
 4521 041a 00000000 		.4byte	.LVL130
 4522 041e 07000000 		.4byte	.LVL131-1
 4523 0422 0100     		.2byte	0x1
 4524 0424 50       		.byte	0x50
 4525 0425 07000000 		.4byte	.LVL131-1
 4526 0429 84000000 		.4byte	.LFE4
 4527 042d 0400     		.2byte	0x4
 4528 042f F3       		.byte	0xf3
 4529 0430 01       		.uleb128 0x1
 4530 0431 50       		.byte	0x50
 4531 0432 9F       		.byte	0x9f
 4532 0433 00000000 		.4byte	0
 4533 0437 00000000 		.4byte	0
 4534              	.LLST25:
 4535 043b 00000000 		.4byte	.LVL130
 4536 043f 07000000 		.4byte	.LVL131-1
 4537 0443 0100     		.2byte	0x1
 4538 0445 51       		.byte	0x51
 4539 0446 07000000 		.4byte	.LVL131-1
 4540 044a 3A000000 		.4byte	.LVL136
 4541 044e 0100     		.2byte	0x1
 4542 0450 54       		.byte	0x54
 4543 0451 3A000000 		.4byte	.LVL136
 4544 0455 84000000 		.4byte	.LFE4
 4545 0459 0400     		.2byte	0x4
 4546 045b F3       		.byte	0xf3
 4547 045c 01       		.uleb128 0x1
 4548 045d 51       		.byte	0x51
 4549 045e 9F       		.byte	0x9f
 4550 045f 00000000 		.4byte	0
 4551 0463 00000000 		.4byte	0
 4552              	.LLST26:
 4553 0467 36000000 		.4byte	.LVL135
 4554 046b 4A000000 		.4byte	.LVL137
 4555 046f 0100     		.2byte	0x1
 4556 0471 51       		.byte	0x51
 4557 0472 00000000 		.4byte	0
 4558 0476 00000000 		.4byte	0
 4559              	.LLST27:
 4560 047a 2E000000 		.4byte	.LVL133
 4561 047e 32000000 		.4byte	.LVL134
 4562 0482 0100     		.2byte	0x1
 4563 0484 50       		.byte	0x50
 4564 0485 32000000 		.4byte	.LVL134
 4565 0489 68000000 		.4byte	.LVL140
 4566 048d 0100     		.2byte	0x1
 4567 048f 56       		.byte	0x56
 4568 0490 00000000 		.4byte	0
 4569 0494 00000000 		.4byte	0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 122


 4570              	.LLST28:
 4571 0498 00000000 		.4byte	.LVL141
 4572 049c 04000000 		.4byte	.LVL142
 4573 04a0 0100     		.2byte	0x1
 4574 04a2 50       		.byte	0x50
 4575 04a3 04000000 		.4byte	.LVL142
 4576 04a7 14000000 		.4byte	.LFE15
 4577 04ab 0400     		.2byte	0x4
 4578 04ad F3       		.byte	0xf3
 4579 04ae 01       		.uleb128 0x1
 4580 04af 50       		.byte	0x50
 4581 04b0 9F       		.byte	0x9f
 4582 04b1 00000000 		.4byte	0
 4583 04b5 00000000 		.4byte	0
 4584              		.section	.debug_aranges,"",%progbits
 4585 0000 9C000000 		.4byte	0x9c
 4586 0004 0200     		.2byte	0x2
 4587 0006 00000000 		.4byte	.Ldebug_info0
 4588 000a 04       		.byte	0x4
 4589 000b 00       		.byte	0
 4590 000c 0000     		.2byte	0
 4591 000e 0000     		.2byte	0
 4592 0010 00000000 		.4byte	.LFB8
 4593 0014 38000000 		.4byte	.LFE8-.LFB8
 4594 0018 00000000 		.4byte	.LFB16
 4595 001c 0C000000 		.4byte	.LFE16-.LFB16
 4596 0020 00000000 		.4byte	.LFB10
 4597 0024 38010000 		.4byte	.LFE10-.LFB10
 4598 0028 00000000 		.4byte	.LFB17
 4599 002c 90000000 		.4byte	.LFE17-.LFB17
 4600 0030 00000000 		.4byte	.LFB1
 4601 0034 DC010000 		.4byte	.LFE1-.LFB1
 4602 0038 00000000 		.4byte	.LFB6
 4603 003c 1C000000 		.4byte	.LFE6-.LFB6
 4604 0040 00000000 		.4byte	.LFB9
 4605 0044 CC000000 		.4byte	.LFE9-.LFB9
 4606 0048 00000000 		.4byte	.LFB11
 4607 004c 20000000 		.4byte	.LFE11-.LFB11
 4608 0050 00000000 		.4byte	.LFB12
 4609 0054 20000000 		.4byte	.LFE12-.LFB12
 4610 0058 00000000 		.4byte	.LFB5
 4611 005c 6C000000 		.4byte	.LFE5-.LFB5
 4612 0060 00000000 		.4byte	.LFB13
 4613 0064 0C000000 		.4byte	.LFE13-.LFB13
 4614 0068 00000000 		.4byte	.LFB14
 4615 006c 2E000000 		.4byte	.LFE14-.LFB14
 4616 0070 00000000 		.4byte	.LFB7
 4617 0074 DC000000 		.4byte	.LFE7-.LFB7
 4618 0078 00000000 		.4byte	.LFB2
 4619 007c 24000000 		.4byte	.LFE2-.LFB2
 4620 0080 00000000 		.4byte	.LFB3
 4621 0084 6C000000 		.4byte	.LFE3-.LFB3
 4622 0088 00000000 		.4byte	.LFB4
 4623 008c 84000000 		.4byte	.LFE4-.LFB4
 4624 0090 00000000 		.4byte	.LFB15
 4625 0094 14000000 		.4byte	.LFE15-.LFB15
 4626 0098 00000000 		.4byte	0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 123


 4627 009c 00000000 		.4byte	0
 4628              		.section	.debug_ranges,"",%progbits
 4629              	.Ldebug_ranges0:
 4630 0000 00000000 		.4byte	.LFB8
 4631 0004 38000000 		.4byte	.LFE8
 4632 0008 00000000 		.4byte	.LFB16
 4633 000c 0C000000 		.4byte	.LFE16
 4634 0010 00000000 		.4byte	.LFB10
 4635 0014 38010000 		.4byte	.LFE10
 4636 0018 00000000 		.4byte	.LFB17
 4637 001c 90000000 		.4byte	.LFE17
 4638 0020 00000000 		.4byte	.LFB1
 4639 0024 DC010000 		.4byte	.LFE1
 4640 0028 00000000 		.4byte	.LFB6
 4641 002c 1C000000 		.4byte	.LFE6
 4642 0030 00000000 		.4byte	.LFB9
 4643 0034 CC000000 		.4byte	.LFE9
 4644 0038 00000000 		.4byte	.LFB11
 4645 003c 20000000 		.4byte	.LFE11
 4646 0040 00000000 		.4byte	.LFB12
 4647 0044 20000000 		.4byte	.LFE12
 4648 0048 00000000 		.4byte	.LFB5
 4649 004c 6C000000 		.4byte	.LFE5
 4650 0050 00000000 		.4byte	.LFB13
 4651 0054 0C000000 		.4byte	.LFE13
 4652 0058 00000000 		.4byte	.LFB14
 4653 005c 2E000000 		.4byte	.LFE14
 4654 0060 00000000 		.4byte	.LFB7
 4655 0064 DC000000 		.4byte	.LFE7
 4656 0068 00000000 		.4byte	.LFB2
 4657 006c 24000000 		.4byte	.LFE2
 4658 0070 00000000 		.4byte	.LFB3
 4659 0074 6C000000 		.4byte	.LFE3
 4660 0078 00000000 		.4byte	.LFB4
 4661 007c 84000000 		.4byte	.LFE4
 4662 0080 00000000 		.4byte	.LFB15
 4663 0084 14000000 		.4byte	.LFE15
 4664 0088 00000000 		.4byte	0
 4665 008c 00000000 		.4byte	0
 4666              		.section	.debug_line,"",%progbits
 4667              	.Ldebug_line0:
 4668 0000 51030000 		.section	.debug_str,"MS",%progbits,1
 4668      0200C400 
 4668      00000201 
 4668      FB0E0D00 
 4668      01010101 
 4669              	.LASF161:
 4670 0000 43617053 		.ascii	"CapSense_curFlashWdgtPtr\000"
 4670      656E7365 
 4670      5F637572 
 4670      466C6173 
 4670      68576467 
 4671              	.LASF150:
 4672 0019 43617053 		.ascii	"CapSense_eleCsxDisconnectFlag\000"
 4672      656E7365 
 4672      5F656C65 
 4672      43737844 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 124


 4672      6973636F 
 4673              	.LASF178:
 4674 0037 43617053 		.ascii	"CapSense_SsCSXPostSingleScan\000"
 4674      656E7365 
 4674      5F537343 
 4674      5358506F 
 4674      73745369 
 4675              	.LASF168:
 4676 0054 43617053 		.ascii	"CapSense_SsSetIOsInDefaultState\000"
 4676      656E7365 
 4676      5F537353 
 4676      6574494F 
 4676      73496E44 
 4677              	.LASF166:
 4678 0074 43617053 		.ascii	"CapSense_BistDischargeExtCapacitors\000"
 4678      656E7365 
 4678      5F426973 
 4678      74446973 
 4678      63686172 
 4679              	.LASF114:
 4680 0098 43617053 		.ascii	"CapSense_CSXInitialize\000"
 4680      656E7365 
 4680      5F435358 
 4680      496E6974 
 4680      69616C69 
 4681              	.LASF116:
 4682 00af 43617053 		.ascii	"CapSense_CSXScanExt\000"
 4682      656E7365 
 4682      5F435358 
 4682      5363616E 
 4682      45787400 
 4683              	.LASF75:
 4684 00c3 736E7254 		.ascii	"snrTestWidgetId\000"
 4684      65737457 
 4684      69646765 
 4684      74496400 
 4685              	.LASF28:
 4686 00d3 43617053 		.ascii	"CapSense_UNDEFINED_E\000"
 4686      656E7365 
 4686      5F554E44 
 4686      4546494E 
 4686      45445F45 
 4687              	.LASF8:
 4688 00e8 756E7369 		.ascii	"unsigned int\000"
 4688      676E6564 
 4688      20696E74 
 4688      00
 4689              	.LASF155:
 4690 00f5 43617053 		.ascii	"CapSense_CSXPostScanApiPtr\000"
 4690      656E7365 
 4690      5F435358 
 4690      506F7374 
 4690      5363616E 
 4691              	.LASF125:
 4692 0110 6E657874 		.ascii	"nextIdacMask\000"
 4692      49646163 
 4692      4D61736B 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 125


 4692      00
 4693              	.LASF65:
 4694 011d 7363616E 		.ascii	"scanCounter\000"
 4694      436F756E 
 4694      74657200 
 4695              	.LASF63:
 4696 0129 6877436C 		.ascii	"hwClock\000"
 4696      6F636B00 
 4697              	.LASF128:
 4698 0131 72656756 		.ascii	"regValue\000"
 4698      616C7565 
 4698      00
 4699              	.LASF127:
 4700 013a 74785074 		.ascii	"txPtr\000"
 4700      7200
 4701              	.LASF115:
 4702 0140 696E7465 		.ascii	"interruptState\000"
 4702      72727570 
 4702      74537461 
 4702      746500
 4703              	.LASF143:
 4704 014f 7278496E 		.ascii	"rxIndex\000"
 4704      64657800 
 4705              	.LASF129:
 4706 0157 43617053 		.ascii	"CapSense_CSXConnectRx\000"
 4706      656E7365 
 4706      5F435358 
 4706      436F6E6E 
 4706      65637452 
 4707              	.LASF162:
 4708 016d 4379496E 		.ascii	"CyIntDisable\000"
 4708      74446973 
 4708      61626C65 
 4708      00
 4709              	.LASF167:
 4710 017a 43617053 		.ascii	"CapSense_SsSetModClkClockDivider\000"
 4710      656E7365 
 4710      5F537353 
 4710      65744D6F 
 4710      64436C6B 
 4711              	.LASF53:
 4712 019b 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 4712      656E7365 
 4712      5F52414D 
 4712      5F57445F 
 4712      4C495354 
 4713              	.LASF104:
 4714 01b7 69697246 		.ascii	"iirFilterCoeff\000"
 4714      696C7465 
 4714      72436F65 
 4714      666600
 4715              	.LASF141:
 4716 01c6 73656E73 		.ascii	"sensorId\000"
 4716      6F724964 
 4716      00
 4717              	.LASF134:
 4718 01cf 43617053 		.ascii	"CapSense_SsCSXStartSample\000"
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 126


 4718      656E7365 
 4718      5F537343 
 4718      53585374 
 4718      61727453 
 4719              	.LASF145:
 4720 01e9 70747257 		.ascii	"ptrWdgt\000"
 4720      64677400 
 4721              	.LASF124:
 4722 01f1 63757249 		.ascii	"curIdacMask\000"
 4722      6461634D 
 4722      61736B00 
 4723              	.LASF12:
 4724 01fd 666C6F61 		.ascii	"float\000"
 4724      7400
 4725              	.LASF88:
 4726 0203 73686966 		.ascii	"shift\000"
 4726      7400
 4727              	.LASF175:
 4728 0209 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4728      43313120 
 4728      352E342E 
 4728      31203230 
 4728      31363036 
 4729 023c 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 4729      20726576 
 4729      6973696F 
 4729      6E203233 
 4729      37373135 
 4730 026f 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 4730      67202D66 
 4730      66756E63 
 4730      74696F6E 
 4730      2D736563 
 4731              	.LASF109:
 4732 029b 77617463 		.ascii	"watchdogCounter\000"
 4732      68646F67 
 4732      436F756E 
 4732      74657200 
 4733              	.LASF142:
 4734 02ab 7478496E 		.ascii	"txIndex\000"
 4734      64657800 
 4735              	.LASF137:
 4736 02b3 43617053 		.ascii	"CapSense_CSXSetupWidget\000"
 4736      656E7365 
 4736      5F435358 
 4736      53657475 
 4736      70576964 
 4737              	.LASF170:
 4738 02cb 43794465 		.ascii	"CyDelayUs\000"
 4738      6C617955 
 4738      7300
 4739              	.LASF74:
 4740 02d5 736E734C 		.ascii	"snsList\000"
 4740      69737400 
 4741              	.LASF7:
 4742 02dd 6C6F6E67 		.ascii	"long long unsigned int\000"
 4742      206C6F6E 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 127


 4742      6720756E 
 4742      7369676E 
 4742      65642069 
 4743              	.LASF157:
 4744 02f4 43617053 		.ascii	"CapSense_sensorIndex\000"
 4744      656E7365 
 4744      5F73656E 
 4744      736F7249 
 4744      6E646578 
 4745              	.LASF89:
 4746 0309 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 4746      656E7365 
 4746      5F464C41 
 4746      53485F49 
 4746      4F5F5354 
 4747              	.LASF76:
 4748 0322 736E7254 		.ascii	"snrTestSensorId\000"
 4748      65737453 
 4748      656E736F 
 4748      72496400 
 4749              	.LASF126:
 4750 0332 43617053 		.ascii	"CapSense_CSXConnectTx\000"
 4750      656E7365 
 4750      5F435358 
 4750      436F6E6E 
 4750      65637454 
 4751              	.LASF103:
 4752 0348 70747232 		.ascii	"ptr2NoiseEnvlp\000"
 4752      4E6F6973 
 4752      65456E76 
 4752      6C7000
 4753              	.LASF97:
 4754 0357 77646774 		.ascii	"wdgtType\000"
 4754      54797065 
 4754      00
 4755              	.LASF139:
 4756 0360 736E7343 		.ascii	"snsClkVal\000"
 4756      6C6B5661 
 4756      6C00
 4757              	.LASF71:
 4758 036a 6D6F6443 		.ascii	"modCsdClk\000"
 4758      7364436C 
 4758      6B00
 4759              	.LASF59:
 4760 0374 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 4760      656E7365 
 4760      5F52414D 
 4760      5F534E53 
 4760      5F535452 
 4761              	.LASF120:
 4762 038c 74617267 		.ascii	"target\000"
 4762      657400
 4763              	.LASF82:
 4764 0393 64725074 		.ascii	"drPtr\000"
 4764      7200
 4765              	.LASF45:
 4766 0399 73696750 		.ascii	"sigPFC\000"
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 128


 4766      464300
 4767              	.LASF38:
 4768 03a0 68797374 		.ascii	"hysteresis\000"
 4768      65726573 
 4768      697300
 4769              	.LASF105:
 4770 03ab 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 4770      656E7365 
 4770      5F464C41 
 4770      53485F57 
 4770      445F5354 
 4771              	.LASF40:
 4772 03c4 6C6F7742 		.ascii	"lowBslnRst\000"
 4772      736C6E52 
 4772      737400
 4773              	.LASF133:
 4774 03cf 43617053 		.ascii	"CapSense_CSXDisconnectRx\000"
 4774      656E7365 
 4774      5F435358 
 4774      44697363 
 4774      6F6E6E65 
 4775              	.LASF179:
 4776 03e8 43617053 		.ascii	"CapSense_SsCalcCsxScanPeriod\000"
 4776      656E7365 
 4776      5F537343 
 4776      616C6343 
 4776      73785363 
 4777              	.LASF50:
 4778 0405 62746E30 		.ascii	"btn0\000"
 4778      00
 4779              	.LASF51:
 4780 040a 62746E31 		.ascii	"btn1\000"
 4780      00
 4781              	.LASF52:
 4782 040f 62746E32 		.ascii	"btn2\000"
 4782      00
 4783              	.LASF96:
 4784 0414 746F7461 		.ascii	"totalNumSns\000"
 4784      6C4E756D 
 4784      536E7300 
 4785              	.LASF27:
 4786 0420 534D4152 		.ascii	"SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT\000"
 4786      5453454E 
 4786      53455F43 
 4786      53445F4E 
 4786      4F495345 
 4787              	.LASF122:
 4788 0445 746F7461 		.ascii	"totalSns\000"
 4788      6C536E73 
 4788      00
 4789              	.LASF36:
 4790 044e 6E6F6973 		.ascii	"noiseTh\000"
 4790      65546800 
 4791              	.LASF14:
 4792 0456 63686172 		.ascii	"char\000"
 4792      00
 4793              	.LASF165:
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 129


 4794 045b 43794578 		.ascii	"CyExitCriticalSection\000"
 4794      69744372 
 4794      69746963 
 4794      616C5365 
 4794      6374696F 
 4795              	.LASF86:
 4796 0471 6873696F 		.ascii	"hsiomShift\000"
 4796      6D536869 
 4796      667400
 4797              	.LASF10:
 4798 047c 75696E74 		.ascii	"uint16\000"
 4798      313600
 4799              	.LASF34:
 4800 0483 7265736F 		.ascii	"resolution\000"
 4800      6C757469 
 4800      6F6E00
 4801              	.LASF66:
 4802 048e 73746174 		.ascii	"status\000"
 4802      757300
 4803              	.LASF108:
 4804 0495 66696C74 		.ascii	"filterDelay\000"
 4804      65724465 
 4804      6C617900 
 4805              	.LASF19:
 4806 04a1 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 4806      656E7365 
 4806      5F4C4F57 
 4806      5F42534C 
 4806      4E5F5253 
 4807              	.LASF33:
 4808 04bc 43617053 		.ascii	"CapSense_SENSE_METHOD_ENUM\000"
 4808      656E7365 
 4808      5F53454E 
 4808      53455F4D 
 4808      4554484F 
 4809              	.LASF58:
 4810 04d7 69646163 		.ascii	"idacComp\000"
 4810      436F6D70 
 4810      00
 4811              	.LASF81:
 4812 04e0 70635074 		.ascii	"pcPtr\000"
 4812      7200
 4813              	.LASF6:
 4814 04e6 6C6F6E67 		.ascii	"long long int\000"
 4814      206C6F6E 
 4814      6720696E 
 4814      7400
 4815              	.LASF99:
 4816 04f4 6E756D43 		.ascii	"numCols\000"
 4816      6F6C7300 
 4817              	.LASF132:
 4818 04fc 43617053 		.ascii	"CapSense_CSXDisconnectTx\000"
 4818      656E7365 
 4818      5F435358 
 4818      44697363 
 4818      6F6E6E65 
 4819              	.LASF39:
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 130


 4820 0515 6F6E4465 		.ascii	"onDebounce\000"
 4820      626F756E 
 4820      636500
 4821              	.LASF147:
 4822 0520 43617053 		.ascii	"CapSense_curRxIOPtr\000"
 4822      656E7365 
 4822      5F637572 
 4822      5278494F 
 4822      50747200 
 4823              	.LASF73:
 4824 0534 77646774 		.ascii	"wdgtList\000"
 4824      4C697374 
 4824      00
 4825              	.LASF154:
 4826 053d 43617053 		.ascii	"CapSense_csxRawCount\000"
 4826      656E7365 
 4826      5F637378 
 4826      52617743 
 4826      6F756E74 
 4827              	.LASF107:
 4828 0552 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 4828      656E7365 
 4828      5F464C41 
 4828      53485F53 
 4828      54525543 
 4829              	.LASF172:
 4830 0568 43617053 		.ascii	"CapSense_Scan\000"
 4830      656E7365 
 4830      5F536361 
 4830      6E00
 4831              	.LASF151:
 4832 0576 43617053 		.ascii	"CapSense_dsRam\000"
 4832      656E7365 
 4832      5F647352 
 4832      616D00
 4833              	.LASF78:
 4834 0585 736E7254 		.ascii	"snrTestRawCount\000"
 4834      65737452 
 4834      6177436F 
 4834      756E7400 
 4835              	.LASF37:
 4836 0595 6E4E6F69 		.ascii	"nNoiseTh\000"
 4836      73655468 
 4836      00
 4837              	.LASF70:
 4838 059e 63736430 		.ascii	"csd0Config\000"
 4838      436F6E66 
 4838      696700
 4839              	.LASF46:
 4840 05a9 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 4840      656E7365 
 4840      5F52414D 
 4840      5F57445F 
 4840      42415345 
 4841              	.LASF80:
 4842 05c5 6873696F 		.ascii	"hsiomPtr\000"
 4842      6D507472 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 131


 4842      00
 4843              	.LASF136:
 4844 05ce 43617053 		.ascii	"CapSense_CSXElectrodeCheck\000"
 4844      656E7365 
 4844      5F435358 
 4844      456C6563 
 4844      74726F64 
 4845              	.LASF11:
 4846 05e9 75696E74 		.ascii	"uint32\000"
 4846      333200
 4847              	.LASF93:
 4848 05f0 70747232 		.ascii	"ptr2FltrHistory\000"
 4848      466C7472 
 4848      48697374 
 4848      6F727900 
 4849              	.LASF148:
 4850 0600 43617053 		.ascii	"CapSense_curWdgtTotalRx\000"
 4850      656E7365 
 4850      5F637572 
 4850      57646774 
 4850      546F7461 
 4851              	.LASF85:
 4852 0618 6D61736B 		.ascii	"mask\000"
 4852      00
 4853              	.LASF117:
 4854 061d 43617053 		.ascii	"CapSense_CSXCalibrateWidget\000"
 4854      656E7365 
 4854      5F435358 
 4854      43616C69 
 4854      62726174 
 4855              	.LASF153:
 4856 0639 43617053 		.ascii	"CapSense_csxScanPeriod\000"
 4856      656E7365 
 4856      5F637378 
 4856      5363616E 
 4856      50657269 
 4857              	.LASF110:
 4858 0650 73616D70 		.ascii	"sampleClkFreqHz\000"
 4858      6C65436C 
 4858      6B467265 
 4858      71487A00 
 4859              	.LASF140:
 4860 0660 43617053 		.ascii	"CapSense_CSXSetupWidgetExt\000"
 4860      656E7365 
 4860      5F435358 
 4860      53657475 
 4860      70576964 
 4861              	.LASF32:
 4862 067b 43617053 		.ascii	"CapSense_SENSE_METHOD_ISX_E\000"
 4862      656E7365 
 4862      5F53454E 
 4862      53455F4D 
 4862      4554484F 
 4863              	.LASF180:
 4864 0697 43617053 		.ascii	"CapSense_SsCSXStartSampleExt\000"
 4864      656E7365 
 4864      5F537343 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 132


 4864      53585374 
 4864      61727453 
 4865              	.LASF16:
 4866 06b4 6C6F6E67 		.ascii	"long double\000"
 4866      20646F75 
 4866      626C6500 
 4867              	.LASF15:
 4868 06c0 72656733 		.ascii	"reg32\000"
 4868      3200
 4869              	.LASF77:
 4870 06c6 736E7254 		.ascii	"snrTestScanCounter\000"
 4870      65737453 
 4870      63616E43 
 4870      6F756E74 
 4870      657200
 4871              	.LASF61:
 4872 06d9 636F6E66 		.ascii	"configId\000"
 4872      69674964 
 4872      00
 4873              	.LASF92:
 4874 06e2 70747232 		.ascii	"ptr2SnsRam\000"
 4874      536E7352 
 4874      616D00
 4875              	.LASF146:
 4876 06ed 43617053 		.ascii	"CapSense_curTxIOPtr\000"
 4876      656E7365 
 4876      5F637572 
 4876      5478494F 
 4876      50747200 
 4877              	.LASF69:
 4878 0701 736E7353 		.ascii	"snsStatus\000"
 4878      74617475 
 4878      7300
 4879              	.LASF43:
 4880 070b 736E7343 		.ascii	"snsClkSource\000"
 4880      6C6B536F 
 4880      75726365 
 4880      00
 4881              	.LASF181:
 4882 0718 43617053 		.ascii	"CapSense_SsCSXGetTxClkDivider\000"
 4882      656E7365 
 4882      5F537343 
 4882      53584765 
 4882      74547843 
 4883              	.LASF101:
 4884 0736 78526573 		.ascii	"xResolution\000"
 4884      6F6C7574 
 4884      696F6E00 
 4885              	.LASF169:
 4886 0742 43617053 		.ascii	"CapSense_SsIsrInitialize\000"
 4886      656E7365 
 4886      5F537349 
 4886      7372496E 
 4886      69746961 
 4887              	.LASF2:
 4888 075b 73686F72 		.ascii	"short int\000"
 4888      7420696E 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 133


 4888      7400
 4889              	.LASF79:
 4890 0765 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 4890      656E7365 
 4890      5F52414D 
 4890      5F535452 
 4890      55435400 
 4891              	.LASF4:
 4892 0779 6C6F6E67 		.ascii	"long int\000"
 4892      20696E74 
 4892      00
 4893              	.LASF67:
 4894 0782 77646774 		.ascii	"wdgtEnable\000"
 4894      456E6162 
 4894      6C6500
 4895              	.LASF56:
 4896 078d 64696666 		.ascii	"diff\000"
 4896      00
 4897              	.LASF149:
 4898 0792 43617053 		.ascii	"CapSense_curWdgtTotalTx\000"
 4898      656E7365 
 4898      5F637572 
 4898      57646774 
 4898      546F7461 
 4899              	.LASF64:
 4900 07aa 74756E65 		.ascii	"tunerCmd\000"
 4900      72436D64 
 4900      00
 4901              	.LASF111:
 4902 07b3 74656D70 		.ascii	"temp\000"
 4902      00
 4903              	.LASF30:
 4904 07b8 43617053 		.ascii	"CapSense_SENSE_METHOD_CSX_E\000"
 4904      656E7365 
 4904      5F53454E 
 4904      53455F4D 
 4904      4554484F 
 4905              	.LASF83:
 4906 07d4 70735074 		.ascii	"psPtr\000"
 4906      7200
 4907              	.LASF171:
 4908 07da 43617053 		.ascii	"CapSense_SetupWidget\000"
 4908      656E7365 
 4908      5F536574 
 4908      75705769 
 4908      64676574 
 4909              	.LASF121:
 4910 07ef 72617754 		.ascii	"rawTarget\000"
 4910      61726765 
 4910      7400
 4911              	.LASF176:
 4912 07f9 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_SensingCSX_LL.c\000"
 4912      72617465 
 4912      645F536F 
 4912      75726365 
 4912      5C50536F 
 4913              	.LASF152:
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 134


 4914 0829 43617053 		.ascii	"CapSense_dsFlash\000"
 4914      656E7365 
 4914      5F647346 
 4914      6C617368 
 4914      00
 4915              	.LASF44:
 4916 083a 66696E67 		.ascii	"fingerCap\000"
 4916      65724361 
 4916      7000
 4917              	.LASF68:
 4918 0844 77646774 		.ascii	"wdgtStatus\000"
 4918      53746174 
 4918      757300
 4919              	.LASF49:
 4920 084f 43617053 		.ascii	"CapSense_RAM_WD_SLIDER_STRUCT\000"
 4920      656E7365 
 4920      5F52414D 
 4920      5F57445F 
 4920      534C4944 
 4921              	.LASF29:
 4922 086d 43617053 		.ascii	"CapSense_SENSE_METHOD_CSD_E\000"
 4922      656E7365 
 4922      5F53454E 
 4922      53455F4D 
 4922      4554484F 
 4923              	.LASF17:
 4924 0889 73697A65 		.ascii	"sizetype\000"
 4924      74797065 
 4924      00
 4925              	.LASF87:
 4926 0892 64725368 		.ascii	"drShift\000"
 4926      69667400 
 4927              	.LASF5:
 4928 089a 6C6F6E67 		.ascii	"long unsigned int\000"
 4928      20756E73 
 4928      69676E65 
 4928      6420696E 
 4928      7400
 4929              	.LASF144:
 4930 08ac 72657456 		.ascii	"retVal\000"
 4930      616C00
 4931              	.LASF41:
 4932 08b3 69646163 		.ascii	"idacMod\000"
 4932      4D6F6400 
 4933              	.LASF130:
 4934 08bb 72785074 		.ascii	"rxPtr\000"
 4934      7200
 4935              	.LASF94:
 4936 08c1 70747232 		.ascii	"ptr2DebounceArr\000"
 4936      4465626F 
 4936      756E6365 
 4936      41727200 
 4937              	.LASF102:
 4938 08d1 7843656E 		.ascii	"xCentroidMultiplier\000"
 4938      74726F69 
 4938      644D756C 
 4938      7469706C 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 135


 4938      69657200 
 4939              	.LASF35:
 4940 08e5 66696E67 		.ascii	"fingerTh\000"
 4940      65725468 
 4940      00
 4941              	.LASF55:
 4942 08ee 62736C6E 		.ascii	"bslnExt\000"
 4942      45787400 
 4943              	.LASF47:
 4944 08f6 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 4944      656E7365 
 4944      5F52414D 
 4944      5F57445F 
 4944      42555454 
 4945              	.LASF1:
 4946 0914 756E7369 		.ascii	"unsigned char\000"
 4946      676E6564 
 4946      20636861 
 4946      7200
 4947              	.LASF118:
 4948 0922 77646774 		.ascii	"wdgtPtr\000"
 4948      50747200 
 4949              	.LASF123:
 4950 092a 63616C69 		.ascii	"calibrationIndex\000"
 4950      62726174 
 4950      696F6E49 
 4950      6E646578 
 4950      00
 4951              	.LASF135:
 4952 093b 43617053 		.ascii	"CapSense_SsCSXPostMultiScan\000"
 4952      656E7365 
 4952      5F537343 
 4952      5358506F 
 4952      73744D75 
 4953              	.LASF95:
 4954 0957 73746174 		.ascii	"staticConfig\000"
 4954      6963436F 
 4954      6E666967 
 4954      00
 4955              	.LASF98:
 4956 0964 73656E73 		.ascii	"senseMethod\000"
 4956      654D6574 
 4956      686F6400 
 4957              	.LASF72:
 4958 0970 6D6F6443 		.ascii	"modCsxClk\000"
 4958      7378436C 
 4958      6B00
 4959              	.LASF113:
 4960 097a 43617053 		.ascii	"CapSense_CSXScanISR\000"
 4960      656E7365 
 4960      5F435358 
 4960      5363616E 
 4960      49535200 
 4961              	.LASF91:
 4962 098e 70747232 		.ascii	"ptr2WdgtRam\000"
 4962      57646774 
 4962      52616D00 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 136


 4963              	.LASF18:
 4964 099a 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 4964      656E7365 
 4964      5F544852 
 4964      4553484F 
 4964      4C445F54 
 4965              	.LASF31:
 4966 09b2 43617053 		.ascii	"CapSense_SENSE_METHOD_BIST_E\000"
 4966      656E7365 
 4966      5F53454E 
 4966      53455F4D 
 4966      4554484F 
 4967              	.LASF100:
 4968 09cf 6E756D52 		.ascii	"numRows\000"
 4968      6F777300 
 4969              	.LASF84:
 4970 09d7 6873696F 		.ascii	"hsiomMask\000"
 4970      6D4D6173 
 4970      6B00
 4971              	.LASF163:
 4972 09e1 4379496E 		.ascii	"CyIntEnable\000"
 4972      74456E61 
 4972      626C6500 
 4973              	.LASF112:
 4974 09ed 746D7052 		.ascii	"tmpRegVal\000"
 4974      65675661 
 4974      6C00
 4975              	.LASF131:
 4976 09f7 43617053 		.ascii	"CapSense_CSXScan\000"
 4976      656E7365 
 4976      5F435358 
 4976      5363616E 
 4976      00
 4977              	.LASF42:
 4978 0a08 736E7343 		.ascii	"snsClk\000"
 4978      6C6B00
 4979              	.LASF174:
 4980 0a0f 43617053 		.ascii	"CapSense_SsSwitchSensingMode\000"
 4980      656E7365 
 4980      5F537353 
 4980      77697463 
 4980      6853656E 
 4981              	.LASF164:
 4982 0a2c 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4982      74657243 
 4982      72697469 
 4982      63616C53 
 4982      65637469 
 4983              	.LASF159:
 4984 0a43 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 4984      656E7365 
 4984      5F637572 
 4984      52616D53 
 4984      6E735074 
 4985              	.LASF0:
 4986 0a59 7369676E 		.ascii	"signed char\000"
 4986      65642063 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 137


 4986      68617200 
 4987              	.LASF160:
 4988 0a65 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 4988      656E7365 
 4988      5F736361 
 4988      6E467265 
 4988      71496E64 
 4989              	.LASF54:
 4990 0a7c 62736C6E 		.ascii	"bsln\000"
 4990      00
 4991              	.LASF3:
 4992 0a81 73686F72 		.ascii	"short unsigned int\000"
 4992      7420756E 
 4992      7369676E 
 4992      65642069 
 4992      6E7400
 4993              	.LASF138:
 4994 0a94 63757252 		.ascii	"curRamWdgtBasePtr\000"
 4994      616D5764 
 4994      67744261 
 4994      73655074 
 4994      7200
 4995              	.LASF173:
 4996 0aa6 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
 4996      656E7365 
 4996      5F537350 
 4996      6F737441 
 4996      6C6C5769 
 4997              	.LASF90:
 4998 0ac4 70747232 		.ascii	"ptr2SnsFlash\000"
 4998      536E7346 
 4998      6C617368 
 4998      00
 4999              	.LASF9:
 5000 0ad1 75696E74 		.ascii	"uint8\000"
 5000      3800
 5001              	.LASF13:
 5002 0ad7 646F7562 		.ascii	"double\000"
 5002      6C6500
 5003              	.LASF57:
 5004 0ade 6E656742 		.ascii	"negBslnRstCnt\000"
 5004      736C6E52 
 5004      7374436E 
 5004      7400
 5005              	.LASF20:
 5006 0aec 70617261 		.ascii	"param0\000"
 5006      6D3000
 5007              	.LASF21:
 5008 0af3 70617261 		.ascii	"param1\000"
 5008      6D3100
 5009              	.LASF22:
 5010 0afa 70617261 		.ascii	"param2\000"
 5010      6D3200
 5011              	.LASF23:
 5012 0b01 70617261 		.ascii	"param3\000"
 5012      6D3300
 5013              	.LASF24:
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 138


 5014 0b08 70617261 		.ascii	"param4\000"
 5014      6D3400
 5015              	.LASF25:
 5016 0b0f 70617261 		.ascii	"param5\000"
 5016      6D3500
 5017              	.LASF26:
 5018 0b16 70617261 		.ascii	"param6\000"
 5018      6D3600
 5019              	.LASF156:
 5020 0b1d 43617053 		.ascii	"CapSense_widgetIndex\000"
 5020      656E7365 
 5020      5F776964 
 5020      67657449 
 5020      6E646578 
 5021              	.LASF62:
 5022 0b32 64657669 		.ascii	"deviceId\000"
 5022      63654964 
 5022      00
 5023              	.LASF119:
 5024 0b3b 77696467 		.ascii	"widgetId\000"
 5024      65744964 
 5024      00
 5025              	.LASF158:
 5026 0b44 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 5026      656E7365 
 5026      5F726571 
 5026      75657374 
 5026      5363616E 
 5027              	.LASF48:
 5028 0b62 706F7369 		.ascii	"position\000"
 5028      74696F6E 
 5028      00
 5029              	.LASF60:
 5030 0b6b 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 5030      656E7365 
 5030      5F52414D 
 5030      5F534E53 
 5030      5F4C4953 
 5031              	.LASF177:
 5032 0b88 433A5C55 		.ascii	"C:\\Users\\rpbri\\Downloads\\Lab145_19\\Lab145\\Tem"
 5032      73657273 
 5032      5C727062 
 5032      72695C44 
 5032      6F776E6C 
 5033 0bb5 706C6174 		.ascii	"plate\\CE210709_CapSense_Linear_Slider_and_Buttons\\"
 5033      655C4345 
 5033      32313037 
 5033      30395F43 
 5033      61705365 
 5034 0be7 6E657720 		.ascii	"new hoep.cydsn\000"
 5034      686F6570 
 5034      2E637964 
 5034      736E00
 5035              	.LASF106:
 5036 0bf6 77646774 		.ascii	"wdgtArray\000"
 5036      41727261 
 5036      7900
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccEmuD1h.s 			page 139


 5037              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
