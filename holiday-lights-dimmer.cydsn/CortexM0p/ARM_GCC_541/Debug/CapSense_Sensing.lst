ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_uidivmod
  20              		.section	.text.CapSense_SsCalcLfsrSize,"ax",%progbits
  21              		.align	2
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_SsCalcLfsrSize, %function
  25              	CapSense_SsCalcLfsrSize:
  26              	.LFB22:
  27              		.file 1 "Generated_Source\\PSoC4\\CapSense_Sensing.c"
   1:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_Sensing.c **** * \file CapSense_Sensing.c
   3:Generated_Source\PSoC4/CapSense_Sensing.c **** * \version 5.0
   4:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   5:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/CapSense_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   9:Generated_Source\PSoC4/CapSense_Sensing.c **** * \see CapSense v5.0 Datasheet
  10:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  11:Generated_Source\PSoC4/CapSense_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_Sensing.c **** * Copyright (2016-2017), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  26:Generated_Source\PSoC4/CapSense_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 2


  31:Generated_Source\PSoC4/CapSense_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
  32:Generated_Source\PSoC4/CapSense_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  40:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Structure.h"
  43:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
  45:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
  47:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
  48:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingISX_LL.h"
  49:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
  50:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
  53:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) */
  56:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
  57:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_Adc.h"
  58:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
  59:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  60:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SelfTest.h"
  61:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  62:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  63:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (0u != CapSense_ISX_EN)
  64:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_DigPrt2.h"
  65:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_USES_PORT_3)
  66:Generated_Source\PSoC4/CapSense_Sensing.c ****         #include "CapSense_DigPrt3.h"
  67:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (0u != CapSense_ISX_EN) */
  69:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************
  70:Generated_Source\PSoC4/CapSense_Sensing.c **** * API Constants
  71:Generated_Source\PSoC4/CapSense_Sensing.c **** ***************************************/
  72:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  73:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MIN               (0u)
  74:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MAX               (255u)
  75:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CALIBRATION_RESOLUTION                 (12u)
  76:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CALIBRATION_FREQ_KHZ                   (1500u)
  77:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CSD_AUTOTUNE_CAL_LEVEL                 (CapSense_CSD_RAWCOUNT_CAL_LEVEL)
  78:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CSD_AUTOTUNE_CAL_UNITS                 (1000u)
  79:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_MIN                                 (0u)
  80:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_MAX                                 (65000Lu)
  81:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_ERROR                               (4000Lu)
  82:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  83:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  84:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  85:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
  87:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (12600u)
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 3


  88:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
  89:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  90:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  92:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  96:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 100:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 102:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_PORT_TEST_DM;
 105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 106:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 108:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_TEST_TYPE;
 111:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 112:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 113:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CapSense_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/CapSense_Sensing.c **** /**
 117:Generated_Source\PSoC4/CapSense_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/CapSense_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/CapSense_Sensing.c **** * \{
 120:Generated_Source\PSoC4/CapSense_Sensing.c **** */
 121:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 122:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
 123:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 125:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 126:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 129:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 131:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 132:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 135:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 138:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 139:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 141:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 142:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 144:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 4


 145:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void);
 146:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 147:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 148:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
 149:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 150:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
 153:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 154:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 158:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 159:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
 161:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 162:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 163:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
 164:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
 165:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 166:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 167:Generated_Source\PSoC4/CapSense_Sensing.c **** /** \}
 168:Generated_Source\PSoC4/CapSense_Sensing.c **** * \endcond */
 169:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 170:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 171:Generated_Source\PSoC4/CapSense_Sensing.c **** * Defines module variables
 172:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 173:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 174:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_SENSE_METHOD_ENUM CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 175:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 176:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 177:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 178:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_scanFreqIndex = 0u;
 179:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Variable keep frequency offsets */
 180:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_immunity[CapSense_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 181:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 182:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* const allows C-compiler to do optimization */
 183:Generated_Source\PSoC4/CapSense_Sensing.c ****     const uint8 CapSense_scanFreqIndex = 0u;
 184:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 185:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 186:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Global software variables */
 187:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_widgetIndex = 0u;    /* Index of the scanning widget */
 188:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_sensorIndex = 0u;    /* Index of the scanning sensor */
 189:Generated_Source\PSoC4/CapSense_Sensing.c **** uint8 CapSense_requestScanAllWidget = 0u;
 190:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 191:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 192:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_RAM_SNS_STRUCT *CapSense_curRamSnsPtr;
 193:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 194:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) || \
 195:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSX_EN) || \
 196:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_ISX_EN))
 197:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 198:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_WD_STRUCT const *CapSense_curFlashWdgtPtr = 0u;
 199:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 200:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 201:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 5


 202:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
 203:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_SNS_STRUCT const *CapSense_curFlashSnsPtr = 0u;
 204:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 205:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 206:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 207:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_FLASH_IO_STRUCT const *CapSense_curSnsIOPtr;
 208:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 210:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 211:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_IsBusy
 212:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 213:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 214:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 215:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 216:Generated_Source\PSoC4/CapSense_Sensing.c **** *  progress).
 217:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 218:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 219:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 220:Generated_Source\PSoC4/CapSense_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or setup
 221:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widgets is made. The critical section (i.e. disable global interrupt)
 222:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is recommended for the application when the device transitions from
 223:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 224:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 225:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 226:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component:
 227:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_NOT_BUSY - No scan is in progress and a next scan
 228:Generated_Source\PSoC4/CapSense_Sensing.c **** *      can be initiated.
 229:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_SW_STS_BUSY - The previous scanning is not completed
 230:Generated_Source\PSoC4/CapSense_Sensing.c **** *      and the hardware block is busy.
 231:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 232:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/CapSense_Sensing.c **** uint32 CapSense_IsBusy(void)
 234:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 235:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 236:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 238:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 239:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidget
 240:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 241:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 242:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 243:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 247:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget by executing the following tasks:
 248:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 249:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 250:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing methods are used in the Component.
 251:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 252:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 253:Generated_Source\PSoC4/CapSense_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 254:Generated_Source\PSoC4/CapSense_Sensing.c **** *       connected by the
 255:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \if SECTION_C_HIGH_LEVEL
 256:Generated_Source\PSoC4/CapSense_Sensing.c **** *       CapSense_CSDSetupWidgetExt(), CapSense_CSXSetupWidgetExt(),
 257:Generated_Source\PSoC4/CapSense_Sensing.c **** *       CapSense_CSDConnectSns() functions and not disconnected.
 258:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \endif
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 6


 259:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \if SECTION_I_REP
 260:Generated_Source\PSoC4/CapSense_Sensing.c **** *       CapSense_ISXSetupWidgetExt() function and not disconnected.
 261:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \endif
 262:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 263:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does not start sensor scanning, the CapSense_Scan()
 264:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 265:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 266:Generated_Source\PSoC4/CapSense_Sensing.c **** *  but only the last initialized widget is in effect.
 267:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 268:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 269:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 270:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the
 271:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_WDGT_ID.
 273:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 274:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 275:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the widget setting up operation:
 276:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 277:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 278:Generated_Source\PSoC4/CapSense_Sensing.c **** *      disabled
 279:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 280:Generated_Source\PSoC4/CapSense_Sensing.c **** *      hardware block is busy.
 281:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 282:Generated_Source\PSoC4/CapSense_Sensing.c **** *      other spurious error occurred.
 283:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 284:Generated_Source\PSoC4/CapSense_Sensing.c **** **********************************************************************************/
 285:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidget(uint32 widgetId)
 286:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 287:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 288:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 290:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 291:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 292:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 293:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 294:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 295:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 297:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 298:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 301:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 302:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 303:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 305:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 306:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 308:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 309:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 310:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 311:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 312:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 313:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 314:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 315:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 7


 316:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 317:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 318:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 319:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 320:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 321:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidget(widgetId);
 322:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 323:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 324:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 325:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 326:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 327:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidget(widgetId);
 328:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 329:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 330:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 331:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 332:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 333:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidget(widgetId);
 334:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 335:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 336:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 337:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 338:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 339:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 340:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 341:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 342:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 343:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 344:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 345:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 346:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 347:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_Scan
 348:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 349:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 350:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 351:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 352:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidget(), if no scan is in progress.
 353:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 354:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 355:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called only after the CapSense_SetupWidget()
 356:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 357:Generated_Source\PSoC4/CapSense_Sensing.c **** *  status of a sensor scan must be checked using the CapSense_IsBusy()
 358:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 359:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 360:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 361:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 362:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 363:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 364:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 365:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 366:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 367:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************/
 368:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_Scan(void)
 369:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 370:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 371:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 8


 373:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 374:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 375:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 376:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 377:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 378:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 379:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 380:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 381:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 382:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 383:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScan();
 384:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 385:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 386:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 387:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 388:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScan();
 389:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 390:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 391:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 392:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 393:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScan();
 394:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 395:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 396:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 397:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 398:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 399:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 400:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 401:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 402:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 403:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 404:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 405:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 406:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanAllWidgets
 407:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 408:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 409:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 410:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 411:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 412:Generated_Source\PSoC4/CapSense_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 413:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 414:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 415:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 416:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 417:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_SetupWidget() and CapSense_Scan() functions are
 418:Generated_Source\PSoC4/CapSense_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 419:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_IsBusy() API prior to starting a next scan
 420:Generated_Source\PSoC4/CapSense_Sensing.c **** *  or setting up another widget.
 421:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 422:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 423:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 424:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 425:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 426:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 427:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 428:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 429:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 9


 430:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanAllWidgets(void)
 431:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 432:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 433:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 434:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 435:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
 437:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 438:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 439:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 440:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 441:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 442:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 443:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
 444:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  Set up widget first widget.
 445:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
 447:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u;
 448:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 449:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex++)
 450:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 451:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 452:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CapSense_SetupWidget(wdgtIndex);
 453:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 454:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 455:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 456:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (0u != (CapSense_TOTAL_WIDGETS - 1u))
 457:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 458:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_TOTAL_WIDGETS - 1u) > wdgtIndex)
 459:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 460:Generated_Source\PSoC4/CapSense_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 461:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_ENABLE;
 462:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 463:Generated_Source\PSoC4/CapSense_Sensing.c ****                     else
 464:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 465:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 466:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 467:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 468:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
 469:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 470:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 471:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 472:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (0u != (CapSense_TOTAL_WIDGETS - 1u)) */
 474:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initiate scan and quit loop */
 476:Generated_Source\PSoC4/CapSense_Sensing.c ****                 scanStatus = CapSense_Scan();
 477:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 478:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 479:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 480:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 481:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 482:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 483:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 484:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 485:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 486:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 10


 487:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 488:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitialize
 489:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 490:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 491:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 492:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 493:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 494:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 495:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 496:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 497:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 498:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 499:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 500:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 501:Generated_Source\PSoC4/CapSense_Sensing.c **** *     for the corresponding sensing mode.
 502:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 503:Generated_Source\PSoC4/CapSense_Sensing.c **** *     is enabled.
 504:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 505:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling the CapSense_Start API is the recommended method to initialize
 506:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense Component at power-up. The CapSense_SsInitialize()
 507:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 508:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 509:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 510:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return status
 511:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns status of operation:
 512:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Indicates successful initialization.
 513:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 514:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 515:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 516:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsInitialize(void)
 517:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 518:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 519:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 520:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 521:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_MFS_IMO == CapSense_MFS_METHOD))
 522:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 centerFreqTrim;
 523:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 524:Generated_Source\PSoC4/CapSense_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
 525:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_immunity[CapSense_FREQ_CHANNEL_0] = centerFreqTrim;
 526:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 527:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (centerFreqTrim < CapSense_IMO_FREQUENCY_OFFSET_F1)
 528:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 529:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 530:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_IMO_FREQUENCY_O
 531:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 532:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 533:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (centerFreqTrim > (CapSense_IMO_FREQUENCY_OFFSET_MAX - CapSense_IMO_FREQUENCY_OFFSE
 534:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 535:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 536:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_IMO_FREQUENCY_O
 537:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 538:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 540:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 541:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 542:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 543:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 11


 544:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 545:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 546:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_MFS_IMO == CapSense_MFS_METHOD)) */
 547:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 548:Generated_Source\PSoC4/CapSense_Sensing.c ****     initStatus = CYRET_SUCCESS;
 549:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_DISABLE == CapSense_CSDV2)
 551:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsTrimIdacs();
 552:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 553:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
 555:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)))
 556:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsInitializeSourceSenseClk();
 557:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****               ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))) */
 559:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 560:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set all IO states to the default state */
 561:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetIOsInDefaultState();
 562:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 563:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_DISABLE != CapSense_USES_MANY_SENSE_MODES)
 564:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize CSD block for ADC scanning */
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_UNDEFINED_E);
 566:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSD_EN)
 567:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize CSD block for CSD scanning */
 568:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDInitialize();
 569:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
 570:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 571:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize CSD block for CSX scanning */
 572:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXInitialize();
 573:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSX_E);
 574:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_ISX_EN)
 575:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize CSD block for ISX scanning */
 576:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ISXInitialize();
 577:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ISX_E);
 578:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 579:Generated_Source\PSoC4/CapSense_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 580:Generated_Source\PSoC4/CapSense_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 581:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 582:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 583:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (initStatus);
 584:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 585:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 586:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 587:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 588:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetPinState
 589:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 590:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 591:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 592:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 593:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 594:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 595:Generated_Source\PSoC4/CapSense_Sensing.c **** *  associated with the ganged sensor is updated.
 596:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 597:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 598:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 599:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 600:Generated_Source\PSoC4/CapSense_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 12


 601:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
 602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 603:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 604:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function accepts the CapSense_SHIELD and
 605:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SENSOR states as an input only if there is at least
 606:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSD widget. Similarly, this function accepts the CapSense_TX_PIN
 607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and CapSense_RX_PIN states as an input only if there is at least
 608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSX widget in the project.
 609:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 610:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 611:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 612:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  automatically set the required pin states. They ignore changes
 614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  in the design made by the CapSense_SetPinState() function.
 615:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 616:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 617:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 618:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 619:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensor.
 620:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense Configuration
 621:Generated_Source\PSoC4/CapSense_Sensing.c **** *  header file defined as CapSense_<WidgetName>_WDGT_ID.
 622:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 623:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorElement
 624:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 625:Generated_Source\PSoC4/CapSense_Sensing.c **** *  its pin state.
 626:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 627:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 628:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 629:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 630:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 631:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 632:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 633:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 634:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \endif
 635:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 636:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as:
 637:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_RX<RXNumber>_ID
 638:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_TX<TXNumber>_ID.
 639:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 640:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param state
 641:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the state of the sensor to be set:
 642:Generated_Source\PSoC4/CapSense_Sensing.c **** *     1. CapSense_GROUND - The pin is connected to the ground.
 643:Generated_Source\PSoC4/CapSense_Sensing.c **** *     2. CapSense_HIGHZ - The drive mode of the pin is set to High-Z
 644:Generated_Source\PSoC4/CapSense_Sensing.c **** *        Analog.
 645:Generated_Source\PSoC4/CapSense_Sensing.c **** *     3. CapSense_SHIELD - The shield signal is routed to the pin
 646:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 647:Generated_Source\PSoC4/CapSense_Sensing.c **** *     4. CapSense_SENSOR - The pin is connected to the scanning bus
 648:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method is enabled).
 649:Generated_Source\PSoC4/CapSense_Sensing.c **** *     5. CapSense_TX_PIN - The Tx signal is routed to the sensor
 650:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX sensing method is enabled).
 651:Generated_Source\PSoC4/CapSense_Sensing.c **** *     6. CapSense_RX_PIN - The pin is connected to the scanning bus
 652:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX sensing method is enabled).
 653:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 654:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 655:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 656:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 657:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 13


 658:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdIndex;
 659:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
 660:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr;
 661:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 662:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 663:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 664:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 665:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 666:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 667:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check the ganged sns flag */
 668:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[widgetId].staticConfig & CapSen
 669:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 670:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr = CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 671:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr += sensorElement;
 672:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId];
 673:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 674:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 675:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 676:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 677:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 678:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = 1u;
 679:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 680:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 681:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash
 682:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 683:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 684:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 685:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 686:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 687:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 688:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Reset HSIOM and PC registers */
 689:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 690:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 691:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 692:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 693:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 694:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (state)
 695:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 696:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_GROUND:
 697:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 698:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 699:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 700:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 701:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 702:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 703:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 704:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_HIGHZ:
 705:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 706:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 707:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 708:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 709:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 710:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 711:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSOR:
 712:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Enable sensor */
 713:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDConnectSns(ioPtr);
 714:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 14


 715:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 716:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 717:Generated_Source\PSoC4/CapSense_Sensing.c ****                 case CapSense_SHIELD:
 718:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 719:Generated_Source\PSoC4/CapSense_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 720:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_S
 721:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CyExitCriticalSection(interruptState);
 722:Generated_Source\PSoC4/CapSense_Sensing.c ****                     break;
 723:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 724:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 725:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 726:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 727:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_ISX_EN))
 728:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_TX_PIN:
 729:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 730:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_C
 731:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_GPIO_STRGDRV << i
 732:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 733:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 734:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 735:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_RX_PIN:
 736:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 737:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_A
 738:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << 
 739:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 740:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 741:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 742:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 743:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 744:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wrong state */
 745:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 746:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 747:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 748:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr++;
 749:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 750:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 751:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 752:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 753:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 754:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDDisableMode
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 756:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 757:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 758:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSD mode.
 759:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 760:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 761:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 762:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
 763:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 764:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 765:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  4. Disable Shield Electrodes.
 766:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 767:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 768:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void)
 769:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 770:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 771:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 15


 772:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
 773:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CMOD_HSIOM_PTR);
 774:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CMOD_HSIOM_MASK);
 775:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CMOD_HSIOM_PTR, newRegValue);
 776:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 777:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSDV2) && \
 778:Generated_Source\PSoC4/CapSense_Sensing.c ****              ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
 779:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN)))
 780:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect IDACA and IDACB */
 781:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 782:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 783:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 784:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 785:Generated_Source\PSoC4/CapSense_Sensing.c ****                    ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
 786:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN))) */
 787:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 788:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 789:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDElectrodeCheck();
 790:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 791:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 792:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 793:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 794:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_CSH_HSIOM_PTR);
 795:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~(uint32)(CapSense_CSH_TO_AMUXBUS_B_MASK << CapSense_CSH_HSIOM_
 796:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_CSH_HSIOM_PTR, newRegValue);
 797:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 798:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)) */
 799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 800:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 801:Generated_Source\PSoC4/CapSense_Sensing.c ****              (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
 802:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableShieldElectrodes();
 803:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 804:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (0u != CapSense_CSD_TOTAL_SHIELD_COUNT)) */
 805:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 806:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 807:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 808:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 809:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 810:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 811:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableCSXMode
 812:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 813:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 814:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 815:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSX mode.
 816:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 817:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 818:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 819:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 820:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 821:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 822:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 823:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void)
 824:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 825:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 826:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 827:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
 828:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 16


 829:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintA_HSIOM_MASK);
 830:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, newRegValue);
 831:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 832:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
 833:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 834:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintB_HSIOM_MASK);
 835:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, newRegValue);
 836:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 837:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
 838:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXElectrodeCheck();
 839:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 840:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 841:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 842:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
 843:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 844:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableISXMode
 845:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 846:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 847:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 848:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables ISX mode.
 849:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 850:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 851:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
 852:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
 853:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
 854:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 855:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 856:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void)
 857:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 858:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 859:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 860:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers.   */
 861:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
 862:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintA_HSIOM_MASK);
 863:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, newRegValue);
 864:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 865:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers.   */
 866:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 867:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintB_HSIOM_MASK);
 868:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, newRegValue);
 869:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 870:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ISXElectrodeCheck();
 872:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_DigPrt2_Stop();
 873:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_USES_PORT_3)
 874:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DigPrt3_Stop();
 875:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* CapSense_USES_PORT_3 */
 876:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 877:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 878:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 879:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 880:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSwitchSensingMode
 881:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 882:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 883:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 884:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function changes the mode for case when both CSD and CSX widgets are
 885:Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanned.
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 17


 886:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 887:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 888:Generated_Source\PSoC4/CapSense_Sensing.c **** *  To switch to the CSD mode the following tasks are performed:
 889:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Disconnect CintA and CintB from AMUXBUS-A.
 890:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnect previous CSD electrode if it has been connected.
 891:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Initialize CSD mode.
 892:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 893:Generated_Source\PSoC4/CapSense_Sensing.c **** *  To switch to the CSX mode the following tasks are performed:
 894:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Disconnect Cmod from AMUXBUS-A.
 895:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnect previous CSX electrode if it has been connected.
 896:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Initialize CSX mode.
 897:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 898:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mode
 899:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the scan mode:
 900:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSD_E
 901:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSX_E
 902:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_ISX_E
 903:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_BIST_E
 904:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_UNDEFINED_E
 905:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 906:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 907:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ENUM mode)
 908:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 909:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 910:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 911:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* The requested mode differes to the current one. Disable the current mode */
 912:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == CapSense_currentSenseMethod)
 913:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 914:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
 915:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDDisableMode();
 916:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 917:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 918:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == CapSense_currentSenseMethod)
 919:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 920:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
 921:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableCSXMode();
 922:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 923:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 924:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == CapSense_currentSenseMethod)
 925:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 926:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
 927:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableISXMode();
 928:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 929:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 930:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == CapSense_currentSenseMethod)
 931:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 932:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
 933:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistDisableMode();
 934:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
 935:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 936:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 937:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 938:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ADC_EN)
 939:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Release ADC resources */
 940:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_AdcReleaseResources();
 941:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
 942:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 18


 943:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 944:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Enable the specified mode */
 945:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == mode)
 946:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 947:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
 948:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
 949:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDInitialize();
 950:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
 951:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 952:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 953:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == mode)
 954:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 955:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
 956:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
 957:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXInitialize();
 958:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSX_E;
 959:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 960:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == mode)
 962:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 963:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
 964:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
 965:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXInitialize();
 966:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_ISX_E;
 967:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 968:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 969:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == mode)
 970:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 971:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
 972:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistInitialize();
 973:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_BIST_E;
 974:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
 975:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 976:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 977:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 978:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 979:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 980:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 981:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 982:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 983:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 984:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 985:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetIOsInDefaultState
 986:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 987:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 988:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 989:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all electrodes into a default state.
 990:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 991:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 992:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
 993:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 994:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - Strong drive.
 995:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
 996:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 997:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the ADC channels into a default state:
 998:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 999:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - HiZ-Analog.
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 19


1000:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
1001:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1002:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly from the application
1003:Generated_Source\PSoC4/CapSense_Sensing.c **** *  layer.
1004:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1005:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1006:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetIOsInDefaultState(void)
1007:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1008:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr = &CapSense_ioList[0u];
1009:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 loopIndex;
1010:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 regValue;
1011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1012:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes */
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_TOTAL_ELECTRODES; loopIndex++)
1014:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1015:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1016:Generated_Source\PSoC4/CapSense_Sensing.c ****         * 1. Disconnect HSIOM.
1017:Generated_Source\PSoC4/CapSense_Sensing.c ****         * 2. Set strong DM.
1018:Generated_Source\PSoC4/CapSense_Sensing.c ****         * 3. Set pin state to logic 0.
1019:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1020:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->hsiomPtr);
1021:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
1022:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
1023:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1024:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->pcPtr);
1025:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(CapSense_GPIO_PC_MASK << ioPtr->shift);
1026:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue |=  (CapSense_GPIO_STRGDRV << ioPtr->shift);
1027:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
1028:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1029:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->drPtr);
1030:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->mask);
1031:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
1032:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1033:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get next electrode */
1034:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr++;
1035:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1036:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1037:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if(CapSense_ENABLE == CapSense_ADC_EN)
1038:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ClearAdcChannels();
1039:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1040:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1041:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1042:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
1043:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1044:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsReleaseResources()
1045:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1046:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1047:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1048:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1049:Generated_Source\PSoC4/CapSense_Sensing.c **** *  default state.
1050:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1051:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1052:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The function performs following tasks:
1053:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1054:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1055:Generated_Source\PSoC4/CapSense_Sensing.c **** *     Cmod for CSD mode)
1056:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Disconnect electroded if they have been connected.
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 20


1057:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1058:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
1059:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
1060:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Resources released successfully.
1061:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1062:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1063:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1064:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsReleaseResources(void)
1065:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1066:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1067:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1068:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1070:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1071:Generated_Source\PSoC4/CapSense_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1073:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
1074:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1075:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
1076:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableCSXMode();
1077:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1078:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1079:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
1080:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableISXMode();
1081:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1082:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1083:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
1084:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableMode();
1085:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1086:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1087:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1088:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_BistDisableMode();
1089:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1090:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1091:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_EN) && \
1092:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&  \
1093:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_SNS_CONNECTION_SHIELD == CapSense_CSD_INACTIVE_SNS_CONNECTION))
1094:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsSetIOsInDefaultState();
1095:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) && \
1096:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_DISABLE != CapSense_CSD_SHIELD_EN) &&  \
1097:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_SNS_CONNECTION_SHIELD == CapSense_CSD_INACTIVE_SNS_CONNECTION)) */
1098:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1099:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1100:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1101:Generated_Source\PSoC4/CapSense_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1102:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1103:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1104:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1106:Generated_Source\PSoC4/CapSense_Sensing.c ****     return busyStatus;
1107:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1108:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1109:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1110:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1111:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1112:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsPostAllWidgetsScan
1113:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 21


1114:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1115:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1116:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
1117:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1118:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1119:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is the function used by the CapSense ISR to implement multiple widget
1120:Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanning.
1121:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Should not be used by the application layer.
1122:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1123:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1124:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsPostAllWidgetsScan(void)
1125:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1126:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1127:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Increment widget index
1128:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Check if all the widgets are scanned
1129:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1130:Generated_Source\PSoC4/CapSense_Sensing.c ****     */
1131:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (1u != CapSense_TOTAL_WIDGETS)
1132:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus postScanStatus;
1133:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1134:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1135:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1136:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_widgetIndex++;
1137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****             postScanStatus = CapSense_SetupWidget((uint32)CapSense_widgetIndex);
1139:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1140:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
1141:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1142:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
1143:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1144:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1145:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_requestScanAllWidget = CapSense_DISABLE;
1146:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1147:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_Scan();
1148:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1149:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
1150:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1151:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1152:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (CapSense_ENABLE == CapSense_CSD_EN))
1153:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1154:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]
1155:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1156:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Disable the CSD block */
1157:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
1158:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1159:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1160:Generated_Source\PSoC4/CapSense_Sensing.c ****                            (CapSense_ENABLE == CapSense_CSD_EN)) */
1161:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1162:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update scan Counter */
1163:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCounter++;
1164:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
1165:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1166:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1167:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure */
1168:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1169:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1170:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 22


1171:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
1172:Generated_Source\PSoC4/CapSense_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
1173:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1174:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
1175:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1176:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1177:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1178:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1179:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1180:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1181:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (1u != CapSense_TOTAL_WIDGETS) */
1182:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1183:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1184:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1185:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1186:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsIsrInitialize
1187:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1188:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1189:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1190:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1191:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1192:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1193:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1194:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1195:Generated_Source\PSoC4/CapSense_Sensing.c **** *  proper working of the Component.
1196:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1197:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param address
1198:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1199:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1200:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1201:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsIsrInitialize(cyisraddress address)
1202:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1203:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
1204:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1205:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1206:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1207:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1208:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetModClkClockDivider
1209:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1210:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1211:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1212:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1213:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1214:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1215:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1216:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1217:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1218:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1219:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1220:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param modClk
1221:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The divider value for the modulator clock.
1222:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1223:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1224:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetModClkClockDivider(uint32 modClk)
1225:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1226:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1227:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Stop modulator clock */
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 23


1228:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1229:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
1230:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CapSense_MODCLK_CMD_DIV_SHIFT)|
1231:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_MODCLK_CMD_DISABLE_MASK));
1232:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1233:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1234:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense modClk.
1235:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1236:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1237:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1238:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
1239:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1240:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1241:Generated_Source\PSoC4/CapSense_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_MODCLK_CMD_PTR) & CapSense_MODCLK_CMD_ENABLE_MASK))
1242:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1243:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1244:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1245:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1246:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1247:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1248:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
1249:Generated_Source\PSoC4/CapSense_Sensing.c ****                   ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_MODCLK_CMD_PA_DIV_SHIFT) |
1250:Generated_Source\PSoC4/CapSense_Sensing.c ****                   CapSense_MODCLK_CMD_ENABLE_MASK));
1251:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1252:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1253:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1254:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1255:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1256:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) &
1257:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(~CapSense_ModClk__ENABLE_MASK));
1258:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1259:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1260:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Update ModClk clock divider.
1261:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1262:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1263:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_ModClk__DIVIDE
1264:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= (modClk - 1u);
1265:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, newRegValue);
1266:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1267:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set bit to enable ModClk clock. */
1268:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1269:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) |
1270:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ModClk__ENABLE_MASK);
1271:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1272:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1273:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1274:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1275:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1276:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetSnsClockDivider
1277:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1278:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1279:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1280:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1281:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the sense clock.
1282:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1283:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1284:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 24


1285:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1286:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1287:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1288:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1289:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1290:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1291:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1292:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetSnsClockDivider(uint32 snsClk)
1293:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1294:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
1295:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1296:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1297:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1298:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense clock.
1299:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1300:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1301:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1302:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_SENSE_PERIOD_PTR);
1303:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
1304:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
1305:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
1306:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1307:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1308:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Stop sense clock clock   */
1309:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1310:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SnsClk__DIV_ID <<
1311:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CapSense_SNSCLK_CMD_DIV_SHIFT)|
1312:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SNSCLK_CMD_DISABLE_MASK));
1313:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1314:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1315:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Set divider value for sense clock.
1316:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1317:Generated_Source\PSoC4/CapSense_Sensing.c ****          * to dividing by 1.
1318:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1319:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1320:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1321:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
1322:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) & CapSense_SNSCLK_CMD_ENABLE_MASK))
1323:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1324:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1325:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1326:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1327:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1328:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1329:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT) |
1330:Generated_Source\PSoC4/CapSense_Sensing.c ****                       ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_SNSCLK_CMD_PA_DIV_SHIFT) |
1331:Generated_Source\PSoC4/CapSense_Sensing.c ****                       CapSense_SNSCLK_CMD_ENABLE_MASK));
1332:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
1333:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
1334:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1335:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1336:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1337:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) &
1338:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(~(uint32)CapSense_SnsClk__ENABLE_MASK));
1339:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1340:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1341:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Update snsClk clock divider.
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 25


1342:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
1343:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1344:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_SnsClk__DI
1345:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (snsClk - 1u);
1346:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, newRegValue);
1347:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1348:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1349:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1350:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) |
1351:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_SnsClk__ENABLE_MASK);
1352:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1353:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1354:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1355:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1356:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1357:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1358:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetClockDividers
1359:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1360:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1361:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1362:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1363:Generated_Source\PSoC4/CapSense_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1364:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1365:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1366:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1367:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1368:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1369:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1370:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1371:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1372:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1373:Generated_Source\PSoC4/CapSense_Sensing.c **** *  modClk The divider value for the modulator clock.
1374:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1375:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1376:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1377:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1378:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
1379:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetModClkClockDivider(modClk);
1380:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1381:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Sns clock */
1382:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetSnsClockDivider(snsClk);
1383:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1384:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1385:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1386:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ANYMODE_AUTOCAL)
1387:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1388:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateWidget
1389:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1390:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1391:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1392:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1393:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the
1394:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget prior to calibration.
1395:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1396:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1397:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function performs exactly the same tasks as
1398:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_CalibrateAllWidgets, but only for a specified widget.
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 26


1399:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
1400:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the Enable compensation IDAC parameter. 
1401:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1402:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1403:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1404:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1405:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1406:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1407:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1408:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1409:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1410:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1411:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1412:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1413:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1414:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1415:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1416:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1417:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1418:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1419:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1420:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1421:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the specified widget calibration:
1422:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1423:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1424:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1425:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1426:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1427:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1428:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateWidget(uint32 widgetId)
1429:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1430:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1431:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1432:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1433:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1434:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_TOTAL_WIDGETS <= widgetId)
1435:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1436:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1437:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1438:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1439:Generated_Source\PSoC4/CapSense_Sensing.c ****             /*
1440:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1441:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1442:Generated_Source\PSoC4/CapSense_Sensing.c ****              */
1443:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1444:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (0u != CapSense_GET_WIDGET_EN_STATUS(widgetId))
1445:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1446:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1447:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1448:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
1449:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1450:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1451:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1452:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif  /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1453:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1454:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1455:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 27


1456:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Exit from the loop because of a fail */
1457:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
1458:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1459:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1460:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1461:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_CSX_EN)
1462:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1463:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN)
1464:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSX_E ==
1465:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1466:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1467:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1468:Generated_Source\PSoC4/CapSense_Sensing.c ****                        CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUNT_CAL_LEVEL);
1469:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1470:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN) */
1471:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1472:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN)
1473:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1474:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1475:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1476:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSD widget */
1477:Generated_Source\PSoC4/CapSense_Sensing.c ****                         calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOU
1478:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1479:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN) */
1480:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1481:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
1482:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSD_EN)
1483:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOUNT_CAL_L
1484:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1485:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1486:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSX_EN)
1487:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUNT_CAL_LEVEL);
1488:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1489:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1490:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_ISX_EN)
1491:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1492:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1493:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1494:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1495:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1496:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1497:Generated_Source\PSoC4/CapSense_Sensing.c ****              /* Update CRC */
1498:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE ==CapSense_TST_WDGT_CRC_EN)
1499:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_DsUpdateWidgetCrc(widgetId);
1500:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE ==CapSense_TST_WDGT_CRC_EN) */
1501:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1502:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (0u);
1503:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1504:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1505:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1506:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1507:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1508:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1509:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateAllWidgets
1510:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1511:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1512:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 28


1513:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1514:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
1515:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  prior to calibration.
1516:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1517:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1518:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1519:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1520:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1521:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1522:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1523:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1524:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1525:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1526:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1527:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1528:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endcond
1529:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1530:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1531:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1532:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1533:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1534:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1535:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the calibration process:
1536:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1537:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1538:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1539:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1540:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateAllWidgets(void)
1542:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1543:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
1545:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1547:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1548:Generated_Source\PSoC4/CapSense_Sensing.c ****             calibrateStatus |= CapSense_CalibrateWidget(wdgtIndex);
1549:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1550:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1551:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1552:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1553:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
1554:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1555:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1556:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
1557:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1558:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTune
1559:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1560:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1561:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1562:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense operation.
1563:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1564:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1565:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
1566:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1567:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1568:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
1569:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 29


1570:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1571:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1572:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
1573:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1574:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1575:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1576:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1577:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTune(void)
1578:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1579:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1580:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
1581:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1582:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 cp = 0uL;
1583:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1584:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cpRow = 0uL;
1585:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1586:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1587:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 cpWidget[CapSense_TOTAL_WIDGETS];
1588:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
1589:Generated_Source\PSoC4/CapSense_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1590:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1591:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Configure common config variables */
1592:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_CSD_SNSCLK_R_CONST;
1593:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.vRef = CapSense_CSD_VREF_MV;
1594:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_CSD_IDAC_GAIN_VALUE_NA;
1595:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1596:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calculate snsClk Input Clock in KHz */
1597:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSDV2)
1598:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1599:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_dsRam.modCsdClk);
1600:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif ((CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) && (CapSense_DISABLE == CY_PSOC4_400
1601:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are not chained */
1602:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_FLIP_FLOP_DIV;
1603:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1604:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are not chained (PSoC 4000) */
1605:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_FLIP_FLOP_DIV;
1606:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1607:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1608:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_dsRam.modCsdClk) >
1609:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1610:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1611:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1612:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_CSX_EN)
1613:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Initialize CSD mode */
1614:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDInitialize();
1615:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_CSX_EN) */
1616:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1617:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1618:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #1:
1619:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - performing the first calibration at fixed settings
1620:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting sensor Cp
1621:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting sense clock frequency based on Cp
1622:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1623:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1624:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune sense clock for all the widgets */
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1626:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 30


1627:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
1628:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
1629:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1630:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1631:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1632:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1633:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set calibration resolution to 12 bits */
1634:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->resolution = CapSense_CALIBRATION_RESOLUTION;
1635:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1636:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set clock source direct and sense clock frequency to 1.5 MHz */
1637:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->snsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1638:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->snsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / CapSense_CALIB
1639:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1640:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1641:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1642:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1643:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ptrWdgt->rowSnsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1644:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ptrWdgt->rowSnsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / Cap
1645:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1646:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
1647:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1648:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1649:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_AUTOTUNE_CAL_LEVEL);
1650:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1651:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1652:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1653:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1654:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1655:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get pointer to Sense Clock Divider for columns */
1656:Generated_Source\PSoC4/CapSense_Sensing.c ****                         autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1657:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1658:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get IDAC */
1659:Generated_Source\PSoC4/CapSense_Sensing.c ****                         autoTuneConfig.iDac = CapSense_calibratedIdacRow;
1660:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1661:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calculate achived calibration level */
1662:Generated_Source\PSoC4/CapSense_Sensing.c ****                         autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_calibratedRawcountRow
1663:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 ((uint32)(0x01uL << CapSense_CALIBRATION_RESOLUTION) - 1u));
1664:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1665:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Find correct sense clock value */
1666:Generated_Source\PSoC4/CapSense_Sensing.c ****                         cpRow = SmartSense_TunePrescalers(&autoTuneConfig);
1667:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1668:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if ((CapSense_CP_MAX + CapSense_CP_ERROR) <= cpRow)
1669:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1670:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneStatus = CYRET_BAD_DATA;
1671:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1672:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1673:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*
1674:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequ
1675:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * than maximum supported Sense Clock Frequency.
1676:Generated_Source\PSoC4/CapSense_Sensing.c ****                         */
1677:Generated_Source\PSoC4/CapSense_Sensing.c ****                         while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk
1678:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 (CapSense_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1679:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1680:Generated_Source\PSoC4/CapSense_Sensing.c ****                             ptrWdgt->snsClk <<= 1u;
1681:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1682:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1683:Generated_Source\PSoC4/CapSense_Sensing.c ****                         #if (CapSense_ENABLE != CapSense_CSDV2)
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 31


1684:Generated_Source\PSoC4/CapSense_Sensing.c ****                             #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1685:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Make sure that ModClk >= 2 * rowSnsClk */
1686:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 if (CapSense_dsRam.modCsdClk >= ((uint8)(ptrWdgt->rowSnsClk << CapS
1687:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 {
1688:Generated_Source\PSoC4/CapSense_Sensing.c ****                                      ptrWdgt->rowSnsClk = CapSense_dsRam.modCsdClk;
1689:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 }
1690:Generated_Source\PSoC4/CapSense_Sensing.c ****                             #else
1691:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Sense clock never equals to Modulator clock for chained dividers
1692:Generated_Source\PSoC4/CapSense_Sensing.c ****                             #endif
1693:Generated_Source\PSoC4/CapSense_Sensing.c ****                         #endif /* (CapSense_ENABLE != CapSense_CSDV2) */
1694:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1695:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1696:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1697:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get pointer to Sense Clock Divider for columns */
1698:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1699:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1700:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get IDAC */
1701:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDac = CapSense_calibratedIdac;
1702:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1703:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calculate achived calibration level */
1704:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_calibratedRawcount * CapSense
1705:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ((uint32)(0x01uL << CapSense_CALIBRATION_RESOLUTION) - 1u));
1706:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1707:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find correct sense clock value */
1708:Generated_Source\PSoC4/CapSense_Sensing.c ****                 cp = SmartSense_TunePrescalers(&autoTuneConfig);
1709:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1710:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if ((CapSense_CP_MAX + CapSense_CP_ERROR) <= cp)
1711:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1712:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneStatus = CYRET_BAD_DATA;
1713:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1714:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1715:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
1716:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequency is 
1717:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * than MAX supported Sense Clock Frequency.
1718:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
1719:Generated_Source\PSoC4/CapSense_Sensing.c ****                 while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk * CapSe
1720:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1721:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1722:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrWdgt->snsClk <<= 1u;
1723:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1724:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1725:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE != CapSense_CSDV2)
1726:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1727:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Make sure that ModClk >= 2 * snsClk */
1728:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsRam.modCsdClk >= ((uint8)(ptrWdgt->snsClk << CapSense_FLIP_F
1729:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1730:Generated_Source\PSoC4/CapSense_Sensing.c ****                              ptrWdgt->snsClk = CapSense_dsRam.modCsdClk;
1731:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1732:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
1733:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Sense clock never equals to Modulator clock for chained dividers because
1734:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1735:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE != CapSense_CSDV2) */
1736:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1737:Generated_Source\PSoC4/CapSense_Sensing.c ****                 cpWidget[wdgtIndex] = cp;
1738:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1739:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1740:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 32


1741:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1743:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (cpRow > cp)
1744:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1745:Generated_Source\PSoC4/CapSense_Sensing.c ****                             cpWidget[wdgtIndex] = cpRow;
1746:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1747:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1748:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1749:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1750:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
1751:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1752:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_EN)
1753:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Non-CSD widget */
1754:Generated_Source\PSoC4/CapSense_Sensing.c ****                     cpWidget[wdgtIndex] = 1u;
1755:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1756:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1757:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1758:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1759:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1760:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #2:
1761:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with new sense clock frequency
1762:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting resolution
1763:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1764:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1765:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune resolution for all the widgets */
1766:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1767:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1768:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
1769:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
1770:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1771:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1772:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1773:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1774:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1775:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneStatus |= CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_AUTOTUNE_CAL_
1776:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1777:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get pointer to Sense Clock Divider (column or row) */
1778:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1779:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1780:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set parasitic capacitance for columns */
1781:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1782:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1783:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get IDAC */
1784:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDac = CapSense_calibratedIdac;
1785:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1786:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1787:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1788:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1789:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1790:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1791:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Set the minimum sense clock frequency to calculate the resolution */
1792:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (ptrWdgt->snsClk < ptrWdgt->rowSnsClk)
1793:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1794:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Rewrite pointer to Sense Clock Divider for rows */
1795:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1796:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1797:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Set parasitic capacitance for rows */
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 33


1798:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1800:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Get IDAC */
1801:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneConfig.iDac = CapSense_calibratedIdacRow;
1802:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1803:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1804:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1805:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1806:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get finger capacitance */
1807:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.fingerCap = ptrWdgt->fingerCap;
1808:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1809:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Init pointer to sigPFC */
1810:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.sigPFC = &ptrWdgt->sigPFC;
1811:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1812:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find resolution */
1813:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
1814:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1815:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1816:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1817:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1818:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #3:
1819:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - selecting a widget clock source if AUTO
1820:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
1821:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - updating sensitivity
1822:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1823:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1824:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune sensitivity for all the widgets */
1825:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1826:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1827:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
1828:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
1829:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1830:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1831:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1832:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1833:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
1834:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1835:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1836:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneStatus |= CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_AUTOTUNE_CAL_
1837:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1838:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
1839:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_DsUpdateWidgetCrc(wdgtIndex);
1840:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
1841:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1842:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1843:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1844:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
1845:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1846:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) */
1847:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1848:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1849:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
1850:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
1851:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) ||\
1852:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
1853:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
1854:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSinking
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 34


1855:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
1856:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1857:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
1858:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1859:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
1860:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1861:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
1862:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1863:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1864:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1865:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
1866:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void)
1867:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1868:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
1869:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1870:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sinking Mode */
1871:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM2_PTR) & ~CapSense_IDAC_TRIM2_MOD_SNK_MASK;
1872:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
1873:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK) ;
1874:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1875:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1876:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Comp iDAC Sinking Mode */
1877:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM2_COMP_SNK_MASK;
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
1879:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
1880:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
1881:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1882:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
1883:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM2_PTR, trimValue);
1884:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1885:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
1886:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
1887:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1888:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1889:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
1890:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) || \
1891:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
1892:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
1893:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSourcing
1894:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
1895:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1896:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
1897:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1898:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
1899:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1900:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
1901:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1902:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1903:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1904:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
1905:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void)
1906:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1907:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
1908:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1909:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sourcing Mode */
1910:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM1_PTR) & ~CapSense_IDAC_TRIM1_MOD_SRC_MASK;
1911:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 35


1912:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK);
1913:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1914:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1915:Generated_Source\PSoC4/CapSense_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
1916:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM1_COMP_SRC_MASK;
1917:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
1918:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
1919:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
1920:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1921:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
1922:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM1_PTR, trimValue);
1923:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1924:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
1925:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
1926:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1927:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1928:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1929:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsTrimIdacs
1930:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1931:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1932:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1933:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
1934:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
1935:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1936:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1937:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
1938:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
1939:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  source mode based on sink/source mode configuration.
1940:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1941:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1942:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1943:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void)
1944:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1945:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)
1946:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
1947:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
1948:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
1949:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
1950:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)
1951:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
1952:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1953:Generated_Source\PSoC4/CapSense_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
1954:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN) */
1955:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1956:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_DISABLE == CapSense_CSDV2) */
1957:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1958:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1959:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1960:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1961:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeImoFreq
1962:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1963:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1964:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1965:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the IMO frequency.
1966:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1967:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1968:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 36


1969:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  trims are contained in the CapSense_immunity[value] array for each
1970:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  frequency channel.
1971:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1972:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param value The frequency channel ID.
1973:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1974:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1975:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeImoFreq(uint32 value)
1976:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1977:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_immunity[value]);
1978:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1979:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1980:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1981:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeClkFreq
1982:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1983:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1984:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1985:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1986:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
1987:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1988:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1989:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1990:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
1991:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1992:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param chId
1993:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The frequency channel ID.
1994:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1995:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1996:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeClkFreq(uint32 chId)
1997:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1998:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsClkDivider;
1999:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset1 = 0u;
2000:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset2 = 0u;
2001:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2002:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2003:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSDV2)
2004:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2005:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2006:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2007:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2008:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2009:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2010:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 snsClkSrc;
2011:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2012:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2013:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2014:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((0u != CapSense_TOTAL_CSD_WIDGETS) || \
2015:Generated_Source\PSoC4/CapSense_Sensing.c ****              ((CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) && (0u != CapSense_TOTAL_CSX_WIDG
2016:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt = &CapSense_dsFlash.wdgtArray[CapSense_wid
2017:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdg
2018:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2019:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2020:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]))
2021:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2022:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2023:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2024:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get sensor clock divider value */
2025:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 37


2026:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsdClk;
2027:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2028:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2029:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2030:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2031:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2032:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2033:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2034:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2035:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2036:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
2037:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2038:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2039:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2040:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2041:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2042:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2043:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSD_MFS_DIVIDER_OFFSET_F1;
2044:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSD_MFS_DIVIDER_OFFSET_F2;
2045:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2046:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2047:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2048:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2049:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Get sense clk source */
2050:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2051:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2052:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2054:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2055:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2056:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2057:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2058:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2059:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2060:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2061:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2062:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2063:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2064:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2065:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2066:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2067:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2068:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2069:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset1 <<= 1u;
2070:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset2 <<= 1u;
2071:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2072:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2073:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2074:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2075:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2076:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2077:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2078:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2079:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2080:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2081:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2082:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 38


2083:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2084:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2085:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2086:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2087:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2088:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2089:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2090:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2091:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2092:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2093:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2094:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2095:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2096:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2097:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
2098:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2099:Generated_Source\PSoC4/CapSense_Sensing.c ****                     conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)pt
2100:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_SEQ_NORM_CNT
2101:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2102:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2103:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2104:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2105:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2106:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2107:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2108:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2109:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2110:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2111:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider >>= 1;
2112:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (snsClkDivider == 0u)
2113:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2114:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = 1u;
2115:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2116:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2117:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2118:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2119:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2120:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2121:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2122:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2123:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2124:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2125:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2126:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2127:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSD_WIDGETS) */
2128:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2129:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSX_WIDGETS)
2130:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2131:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN)
2132:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsxClk;
2133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2134:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2135:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2136:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSX_MFS_DIVIDER_OFFSET_F1;
2137:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSX_MFS_DIVIDER_OFFSET_F2;
2138:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2139:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 39


2140:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2141:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2142:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2143:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2144:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2145:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2146:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2147:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2148:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2149:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2150:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2151:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2152:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2153:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2154:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2155:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2156:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2157:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2158:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2159:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2160:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2161:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2162:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSX_WIDGETS) */
2163:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2164:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2165:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0);
2166:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2167:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2168:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2169:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
2170:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2171:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2172:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) || \
2173:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && \
2174:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2)))
2175:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2176:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitializeSourceSenseClk
2177:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2178:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2179:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2180:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2181:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2182:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2183:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2184:Generated_Source\PSoC4/CapSense_Sensing.c **** *  for all CSD widgets.
2185:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2186:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2187:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsInitializeSourceSenseClk(void)
2188:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2189:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2191:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2193:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2194:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
2195:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2196:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 40


2197:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2198:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
2199:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2200:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2201:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2202:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2203:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2204:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2205:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
2206:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2207:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)) &
2208:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2209:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2210:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2211:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2212:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(wdgtIndex);
2213:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
2214:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2215:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2216:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
2217:Generated_Source\PSoC4/CapSense_Sensing.c ****            (((CapSense_ENABLE == CapSense_CSX_EN) || \
2218:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_ISX_EN)) && \
2219:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2))) */
2220:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2221:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2222:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2223:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2224:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetSenseClkSrc
2225:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2226:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2227:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2228:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2229:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2230:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2231:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2232:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2233:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2234:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2235:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2236:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2237:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget.
2238:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2239:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2240:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
2241:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2242:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2243:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2244:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2245:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2246:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2247:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2248:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2249:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2250:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2251:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2252:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2253:Generated_Source\PSoC4/CapSense_Sensing.c ****             snsClkDivider = CapSense_SsCSDGetColSnsClkDivider(wdgtIndex);
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 41


2254:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2255:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2256:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdg
2257:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
2258:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2259:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2260:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2261:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /*
2262:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
2263:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * average PRS frequency through the argument.
2264:Generated_Source\PSoC4/CapSense_Sensing.c ****                     */
2265:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->res
2266:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2267:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2268:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2269:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2270:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2271:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * average PRS frequency through the argument.
2272:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2273:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resolut
2274:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2275:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2276:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2277:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2278:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2279:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2280:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2281:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2282:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2283:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2284:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2285:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[wdgtIn
2286:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[w
2287:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2288:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2289:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_SsCSDGetRowSnsClkDivider(wdgtIndex);
2290:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2291:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if(CapSense_ENABLE == CapSense_CSDV2)
2292:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2293:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2294:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2295:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /*
2296:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2297:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * average PRS frequency through the argument.
2298:Generated_Source\PSoC4/CapSense_Sensing.c ****                             */
2299:Generated_Source\PSoC4/CapSense_Sensing.c ****                             lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrW
2300:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2301:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2302:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2303:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*
2304:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
2305:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * average PRS frequency through the argument.
2306:Generated_Source\PSoC4/CapSense_Sensing.c ****                         */
2307:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt-
2308:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = 0u;
2309:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2310:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 42


2311:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2312:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrScale = 0u;
2313:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2314:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR
2315:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2316:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2317:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2318:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2319:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2320:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2321:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2322:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2323:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetTxClkSrc
2324:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2325:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2326:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2327:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2328:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2329:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2330:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2331:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2332:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2333:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2334:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2335:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2336:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2337:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2338:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
2339:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2340:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2341:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2342:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2343:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
2344:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2345:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 conversionsNum;
2346:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2347:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2348:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2349:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)
2350:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2351:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2352:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider = CapSense_SsCSXGetTxClkDivider(wdgtIndex);
2353:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2355:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
2357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2358:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Unused function argument */
2359:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)wdgtIndex;
2360:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2361:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2362:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_CSX_TX_CLK_SOURCE;
2363:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2364:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Unused function argument */
2365:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex;
2366:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) */
2367:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 43


2368:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2369:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2370:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)) */
2371:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2372:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2373:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
2374:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2375:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2376:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2377:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
2378:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2379:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
2380:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2381:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrSize
2382:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2383:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2384:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2385:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2386:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2387:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2388:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2389:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requirements:
2390:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2391:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2392:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2393:Generated_Source\PSoC4/CapSense_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2394:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2395:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2396:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2397:Generated_Source\PSoC4/CapSense_Sensing.c **** *  resolution The widget resolution.
2398:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2399:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2400:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2401:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2402:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2403:Generated_Source\PSoC4/CapSense_Sensing.c **** {
  28              		.loc 1 2403 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 0400     		movs	r4, r0
  40 0004 0D00     		movs	r5, r1
  41              	.LVL1:
2404:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 lfsrSize = 0u;
2405:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2406:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Find LFSR value */
2407:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((CapSense_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
  42              		.loc 1 2407 0
  43 0006 9F28     		cmp	r0, #159
  44 0008 08D9     		bls	.L2
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 44


  45              		.loc 1 2407 0 is_stmt 0 discriminator 1
  46 000a 1B4B     		ldr	r3, .L12
  47 000c 9942     		cmp	r1, r3
  48 000e 05D9     		bls	.L2
2408:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****        (0uL == (conversionsNum % CapSense_SNSCLK_SSC4_PERIOD)))
  49              		.loc 1 2409 0 is_stmt 1
  50 0010 1A49     		ldr	r1, .L12+4
  51              	.LVL2:
  52 0012 2800     		movs	r0, r5
  53              	.LVL3:
  54 0014 FFF7FEFF 		bl	__aeabi_uidivmod
  55              	.LVL4:
2408:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
  56              		.loc 1 2408 0
  57 0018 0029     		cmp	r1, #0
  58 001a 21D0     		beq	.L6
  59              	.L2:
2410:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2411:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC4;
2412:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2413:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
  60              		.loc 1 2413 0
  61 001c 9F2C     		cmp	r4, #159
  62 001e 09D9     		bls	.L4
  63              		.loc 1 2413 0 is_stmt 0 discriminator 1
  64 0020 FF23     		movs	r3, #255
  65 0022 5B00     		lsls	r3, r3, #1
  66 0024 9D42     		cmp	r5, r3
  67 0026 05D9     		bls	.L4
2414:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2415:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC3_PERIOD)))
  68              		.loc 1 2415 0 is_stmt 1
  69 0028 1549     		ldr	r1, .L12+8
  70 002a 2800     		movs	r0, r5
  71 002c FFF7FEFF 		bl	__aeabi_uidivmod
  72              	.LVL5:
2414:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
  73              		.loc 1 2414 0
  74 0030 0029     		cmp	r1, #0
  75 0032 17D0     		beq	.L7
  76              	.L4:
2416:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC3;
2418:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2419:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
  77              		.loc 1 2419 0
  78 0034 9F2C     		cmp	r4, #159
  79 0036 07D9     		bls	.L5
  80              		.loc 1 2419 0 is_stmt 0 discriminator 1
  81 0038 7E2D     		cmp	r5, #126
  82 003a 05D9     		bls	.L5
2420:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2421:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC2_PERIOD)))
  83              		.loc 1 2421 0 is_stmt 1
  84 003c 7F21     		movs	r1, #127
  85 003e 2800     		movs	r0, r5
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 45


  86 0040 FFF7FEFF 		bl	__aeabi_uidivmod
  87              	.LVL6:
2420:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
  88              		.loc 1 2420 0
  89 0044 0029     		cmp	r1, #0
  90 0046 0FD0     		beq	.L8
  91              	.L5:
2422:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2423:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC2;
2424:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2425:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
  92              		.loc 1 2425 0
  93 0048 9F2C     		cmp	r4, #159
  94 004a 0FD9     		bls	.L9
  95              		.loc 1 2425 0 is_stmt 0 discriminator 1
  96 004c 3E2D     		cmp	r5, #62
  97 004e 0FD9     		bls	.L10
2426:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
2427:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC1_PERIOD)))
  98              		.loc 1 2427 0 is_stmt 1
  99 0050 3F21     		movs	r1, #63
 100 0052 2800     		movs	r0, r5
 101 0054 FFF7FEFF 		bl	__aeabi_uidivmod
 102              	.LVL7:
2426:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
 103              		.loc 1 2426 0
 104 0058 0029     		cmp	r1, #0
 105 005a 0BD0     		beq	.L11
2428:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2429:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC1;
2430:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2431:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2432:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2433:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
 106              		.loc 1 2433 0
 107 005c 0020     		movs	r0, #0
 108 005e 0AE0     		b	.L3
 109              	.L6:
2411:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 110              		.loc 1 2411 0
 111 0060 0420     		movs	r0, #4
 112 0062 08E0     		b	.L3
 113              	.L7:
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 114              		.loc 1 2417 0
 115 0064 0320     		movs	r0, #3
 116 0066 06E0     		b	.L3
 117              	.L8:
2423:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 118              		.loc 1 2423 0
 119 0068 0220     		movs	r0, #2
 120 006a 04E0     		b	.L3
 121              	.L9:
 122              		.loc 1 2433 0
 123 006c 0020     		movs	r0, #0
 124 006e 02E0     		b	.L3
 125              	.L10:
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 46


 126 0070 0020     		movs	r0, #0
 127 0072 00E0     		b	.L3
 128              	.L11:
2429:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 129              		.loc 1 2429 0
 130 0074 0120     		movs	r0, #1
 131              	.L3:
 132              	.LVL8:
2434:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2435:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2436:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (lfsrSize);
2437:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 133              		.loc 1 2437 0
 134              		@ sp needed
 135              	.LVL9:
 136              	.LVL10:
 137 0076 70BD     		pop	{r4, r5, r6, pc}
 138              	.L13:
 139              		.align	2
 140              	.L12:
 141 0078 FE030000 		.word	1022
 142 007c FF030000 		.word	1023
 143 0080 FF010000 		.word	511
 144              		.cfi_endproc
 145              	.LFE22:
 146              		.size	CapSense_SsCalcLfsrSize, .-CapSense_SsCalcLfsrSize
 147              		.global	__aeabi_uidiv
 148              		.section	.text.CapSense_SsCalcLfsrScale,"ax",%progbits
 149              		.align	2
 150              		.code	16
 151              		.thumb_func
 152              		.type	CapSense_SsCalcLfsrScale, %function
 153              	CapSense_SsCalcLfsrScale:
 154              	.LFB23:
2438:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2439:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2440:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2441:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrScale
2442:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2443:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2444:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2445:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2446:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2447:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2448:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2449:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2450:Generated_Source\PSoC4/CapSense_Sensing.c **** *  period.
2451:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2452:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2453:Generated_Source\PSoC4/CapSense_Sensing.c **** *  range +/-10%.
2454:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2455:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2456:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2457:Generated_Source\PSoC4/CapSense_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2458:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2459:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2460:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 47


2461:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2462:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
2463:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2464:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2465:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2466:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2467:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2468:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2469:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2470:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2471:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
2472:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2473:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2474:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
2475:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2476:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2477:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2478:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2479:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 155              		.loc 1 2479 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              	.LVL11:
 160 0000 10B5     		push	{r4, lr}
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 4, -8
 163              		.cfi_offset 14, -4
2480:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrScale;
2481:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrRange;
2482:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrDither;
2483:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2484:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2485:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(lfsrSize)
 164              		.loc 1 2485 0
 165 0002 4B1E     		subs	r3, r1, #1
 166 0004 DBB2     		uxtb	r3, r3
 167 0006 032B     		cmp	r3, #3
 168 0008 01D8     		bhi	.L20
2486:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2487:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC1:
2488:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2489:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC1_RANGE;
 169              		.loc 1 2489 0
 170 000a 1023     		movs	r3, #16
 171 000c 00E0     		b	.L15
 172              	.L20:
2490:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2491:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2492:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC2:
2493:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2494:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC2_RANGE;
2495:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2496:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2497:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC3:
2498:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2499:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC3_RANGE;
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 48


2500:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2501:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2502:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC4:
2503:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2504:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC4_RANGE;
2505:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2506:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2507:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2508:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2509:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = 0u;
 173              		.loc 1 2509 0
 174 000e 0023     		movs	r3, #0
 175              	.L15:
 176              	.LVL12:
2510:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2511:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2512:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2513:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2514:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2515:Generated_Source\PSoC4/CapSense_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2516:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
2517:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((lfsrSize != CapSense_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
 177              		.loc 1 2517 0
 178 0010 0029     		cmp	r1, #0
 179 0012 11D0     		beq	.L21
 180              		.loc 1 2517 0 is_stmt 0 discriminator 1
 181 0014 002B     		cmp	r3, #0
 182 0016 11D0     		beq	.L22
2518:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2519:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2520:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
 183              		.loc 1 2520 0 is_stmt 1
 184 0018 6422     		movs	r2, #100
 185 001a 5343     		muls	r3, r2
 186              	.LVL13:
 187 001c 0100     		movs	r1, r0
 188              	.LVL14:
 189 001e 1800     		movs	r0, r3
 190              	.LVL15:
 191 0020 FFF7FEFF 		bl	__aeabi_uidiv
 192              	.LVL16:
2521:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
 193              		.loc 1 2521 0
 194 0024 0023     		movs	r3, #0
2522:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2523:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(lfsrDither < CapSense_LFSR_DITHER_PERCENTAGE)
 195              		.loc 1 2523 0
 196 0026 01E0     		b	.L18
 197              	.LVL17:
 198              	.L19:
2524:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2525:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale++;
 199              		.loc 1 2525 0
 200 0028 0133     		adds	r3, r3, #1
 201              	.LVL18:
2526:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrDither <<=1uL;
 202              		.loc 1 2526 0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 49


 203 002a 4000     		lsls	r0, r0, #1
 204              	.LVL19:
 205              	.L18:
2523:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 206              		.loc 1 2523 0
 207 002c 0928     		cmp	r0, #9
 208 002e FBD9     		bls	.L19
2527:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2528:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2529:Generated_Source\PSoC4/CapSense_Sensing.c ****         if(lfsrDither > CapSense_LFSR_DITHER_PERCENTAGE)
 209              		.loc 1 2529 0
 210 0030 0A28     		cmp	r0, #10
 211 0032 04D9     		bls	.L17
2530:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2531:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale--;
 212              		.loc 1 2531 0
 213 0034 013B     		subs	r3, r3, #1
 214              	.LVL20:
 215 0036 02E0     		b	.L17
 216              	.LVL21:
 217              	.L21:
2532:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2533:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2534:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2535:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2536:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
 218              		.loc 1 2536 0
 219 0038 0023     		movs	r3, #0
 220              	.LVL22:
 221 003a 00E0     		b	.L17
 222              	.LVL23:
 223              	.L22:
 224 003c 0023     		movs	r3, #0
 225              	.LVL24:
 226              	.L17:
2537:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2538:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2539:Generated_Source\PSoC4/CapSense_Sensing.c ****     return ((uint8)lfsrScale);
 227              		.loc 1 2539 0
 228 003e D8B2     		uxtb	r0, r3
2540:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 229              		.loc 1 2540 0
 230              		@ sp needed
 231 0040 10BD     		pop	{r4, pc}
 232              		.cfi_endproc
 233              	.LFE23:
 234              		.size	CapSense_SsCalcLfsrScale, .-CapSense_SsCalcLfsrScale
 235 0042 C046     		.section	.text.CapSense_SsCSDDisableMode,"ax",%progbits
 236              		.align	2
 237              		.code	16
 238              		.thumb_func
 239              		.type	CapSense_SsCSDDisableMode, %function
 240              	CapSense_SsCSDDisableMode:
 241              	.LFB7:
 769:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 242              		.loc 1 769 0
 243              		.cfi_startproc
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 50


 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246 0000 10B5     		push	{r4, lr}
 247              		.cfi_def_cfa_offset 8
 248              		.cfi_offset 4, -8
 249              		.cfi_offset 14, -4
 773:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CMOD_HSIOM_MASK);
 250              		.loc 1 773 0
 251 0002 064A     		ldr	r2, .L24
 252 0004 1368     		ldr	r3, [r2]
 253              	.LVL25:
 774:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CMOD_HSIOM_PTR, newRegValue);
 254              		.loc 1 774 0
 255 0006 F021     		movs	r1, #240
 256 0008 8B43     		bics	r3, r1
 257              	.LVL26:
 775:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 258              		.loc 1 775 0
 259 000a 1360     		str	r3, [r2]
 781:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 260              		.loc 1 781 0
 261 000c 044A     		ldr	r2, .L24+4
 262 000e 1368     		ldr	r3, [r2]
 263              	.LVL27:
 782:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 264              		.loc 1 782 0
 265 0010 EF39     		subs	r1, r1, #239
 266 0012 8B43     		bics	r3, r1
 267              	.LVL28:
 783:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 268              		.loc 1 783 0
 269 0014 1360     		str	r3, [r2]
 789:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 270              		.loc 1 789 0
 271 0016 FFF7FEFF 		bl	CapSense_SsCSDElectrodeCheck
 272              	.LVL29:
 805:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 273              		.loc 1 805 0
 274              		@ sp needed
 275 001a 10BD     		pop	{r4, pc}
 276              	.L25:
 277              		.align	2
 278              	.L24:
 279 001c 00040240 		.word	1073873920
 280 0020 A8020B40 		.word	1074463400
 281              		.cfi_endproc
 282              	.LFE7:
 283              		.size	CapSense_SsCSDDisableMode, .-CapSense_SsCSDDisableMode
 284              		.section	.text.CapSense_SsDisableCSXMode,"ax",%progbits
 285              		.align	2
 286              		.code	16
 287              		.thumb_func
 288              		.type	CapSense_SsDisableCSXMode, %function
 289              	CapSense_SsDisableCSXMode:
 290              	.LFB8:
 824:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 291              		.loc 1 824 0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 51


 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295 0000 10B5     		push	{r4, lr}
 296              		.cfi_def_cfa_offset 8
 297              		.cfi_offset 4, -8
 298              		.cfi_offset 14, -4
 828:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintA_HSIOM_MASK);
 299              		.loc 1 828 0
 300 0002 064B     		ldr	r3, .L27
 301 0004 1968     		ldr	r1, [r3]
 302              	.LVL30:
 829:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, newRegValue);
 303              		.loc 1 829 0
 304 0006 064A     		ldr	r2, .L27+4
 305 0008 0A40     		ands	r2, r1
 306              	.LVL31:
 830:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 307              		.loc 1 830 0
 308 000a 1A60     		str	r2, [r3]
 833:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintB_HSIOM_MASK);
 309              		.loc 1 833 0
 310 000c 1968     		ldr	r1, [r3]
 311              	.LVL32:
 834:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, newRegValue);
 312              		.loc 1 834 0
 313 000e 054A     		ldr	r2, .L27+8
 314 0010 0A40     		ands	r2, r1
 315              	.LVL33:
 835:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 316              		.loc 1 835 0
 317 0012 1A60     		str	r2, [r3]
 838:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 318              		.loc 1 838 0
 319 0014 FFF7FEFF 		bl	CapSense_CSXElectrodeCheck
 320              	.LVL34:
 839:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 321              		.loc 1 839 0
 322              		@ sp needed
 323 0018 10BD     		pop	{r4, pc}
 324              	.L28:
 325 001a C046     		.align	2
 326              	.L27:
 327 001c 00040240 		.word	1073873920
 328 0020 FFF0FFFF 		.word	-3841
 329 0024 FF0FFFFF 		.word	-61441
 330              		.cfi_endproc
 331              	.LFE8:
 332              		.size	CapSense_SsDisableCSXMode, .-CapSense_SsDisableCSXMode
 333              		.section	.text.CapSense_SsSetWidgetTxClkSrc,"ax",%progbits
 334              		.align	2
 335              		.code	16
 336              		.thumb_func
 337              		.type	CapSense_SsSetWidgetTxClkSrc, %function
 338              	CapSense_SsSetWidgetTxClkSrc:
 339              	.LFB21:
2339:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 52


 340              		.loc 1 2339 0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 0
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344              	.LVL35:
 345 0000 70B5     		push	{r4, r5, r6, lr}
 346              		.cfi_def_cfa_offset 16
 347              		.cfi_offset 4, -16
 348              		.cfi_offset 5, -12
 349              		.cfi_offset 6, -8
 350              		.cfi_offset 14, -4
 351 0002 0D00     		movs	r5, r1
2351:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider = CapSense_SsCSXGetTxClkDivider(wdgtIndex);
 352              		.loc 1 2351 0
 353 0004 0C88     		ldrh	r4, [r1]
 354              	.LVL36:
2352:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
 355              		.loc 1 2352 0
 356 0006 FFF7FEFF 		bl	CapSense_SsCSXGetTxClkDivider
 357              	.LVL37:
 358 000a 0600     		movs	r6, r0
 359              	.LVL38:
2353:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
 360              		.loc 1 2353 0
 361 000c 2100     		movs	r1, r4
 362 000e FFF7FEFF 		bl	CapSense_SsCalcLfsrSize
 363              	.LVL39:
 364 0012 0400     		movs	r4, r0
 365              	.LVL40:
2354:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
 366              		.loc 1 2354 0
 367 0014 0100     		movs	r1, r0
 368 0016 3000     		movs	r0, r6
 369              	.LVL41:
 370 0018 FFF7FEFF 		bl	CapSense_SsCalcLfsrScale
 371              	.LVL42:
2368:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 372              		.loc 1 2368 0
 373 001c 0001     		lsls	r0, r0, #4
 374              	.LVL43:
 375 001e C0B2     		uxtb	r0, r0
 376 0020 2043     		orrs	r0, r4
 377 0022 2873     		strb	r0, [r5, #12]
2369:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)) */
 378              		.loc 1 2369 0
 379              		@ sp needed
 380              	.LVL44:
 381              	.LVL45:
 382 0024 70BD     		pop	{r4, r5, r6, pc}
 383              		.cfi_endproc
 384              	.LFE21:
 385              		.size	CapSense_SsSetWidgetTxClkSrc, .-CapSense_SsSetWidgetTxClkSrc
 386 0026 C046     		.section	.text.CapSense_IsBusy,"ax",%progbits
 387              		.align	2
 388              		.global	CapSense_IsBusy
 389              		.code	16
 390              		.thumb_func
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 53


 391              		.type	CapSense_IsBusy, %function
 392              	CapSense_IsBusy:
 393              	.LFB1:
 234:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 394              		.loc 1 234 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 0
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 398              		@ link register save eliminated.
 235:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 399              		.loc 1 235 0
 400 0000 024B     		ldr	r3, .L31
 401 0002 DB68     		ldr	r3, [r3, #12]
 402 0004 8020     		movs	r0, #128
 403 0006 1840     		ands	r0, r3
 236:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 404              		.loc 1 236 0
 405              		@ sp needed
 406 0008 7047     		bx	lr
 407              	.L32:
 408 000a C046     		.align	2
 409              	.L31:
 410 000c 00000000 		.word	CapSense_dsRam
 411              		.cfi_endproc
 412              	.LFE1:
 413              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 414              		.section	.text.CapSense_SetupWidget,"ax",%progbits
 415              		.align	2
 416              		.global	CapSense_SetupWidget
 417              		.code	16
 418              		.thumb_func
 419              		.type	CapSense_SetupWidget, %function
 420              	CapSense_SetupWidget:
 421              	.LFB2:
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 422              		.loc 1 286 0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 0
 425              		@ frame_needed = 0, uses_anonymous_args = 0
 426              	.LVL46:
 427 0000 10B5     		push	{r4, lr}
 428              		.cfi_def_cfa_offset 8
 429              		.cfi_offset 4, -8
 430              		.cfi_offset 14, -4
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 431              		.loc 1 289 0
 432 0002 164B     		ldr	r3, .L43
 433 0004 DB68     		ldr	r3, [r3, #12]
 434 0006 DB03     		lsls	r3, r3, #15
 435 0008 0DD4     		bmi	.L38
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 436              		.loc 1 299 0
 437 000a 0328     		cmp	r0, #3
 438 000c 0DD8     		bhi	.L39
 300:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 439              		.loc 1 300 0 discriminator 1
 440 000e 4309     		lsrs	r3, r0, #5
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 54


 441 0010 0433     		adds	r3, r3, #4
 442 0012 9B00     		lsls	r3, r3, #2
 443 0014 114A     		ldr	r2, .L43
 444 0016 9B58     		ldr	r3, [r3, r2]
 445 0018 1F22     		movs	r2, #31
 446 001a 0240     		ands	r2, r0
 447 001c D340     		lsrs	r3, r3, r2
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 448              		.loc 1 299 0 discriminator 1
 449 001e DB07     		lsls	r3, r3, #31
 450 0020 05D4     		bmi	.L40
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 451              		.loc 1 307 0
 452 0022 0124     		movs	r4, #1
 453 0024 04E0     		b	.L34
 454              	.L38:
 292:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 455              		.loc 1 292 0
 456 0026 1124     		movs	r4, #17
 457 0028 02E0     		b	.L34
 458              	.L39:
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 459              		.loc 1 307 0
 460 002a 0124     		movs	r4, #1
 461 002c 00E0     		b	.L34
 462              	.L40:
 303:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 463              		.loc 1 303 0
 464 002e 0024     		movs	r4, #0
 465              	.L34:
 466              	.LVL47:
 314:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 467              		.loc 1 314 0
 468 0030 002C     		cmp	r4, #0
 469 0032 10D1     		bne	.L35
 316:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 470              		.loc 1 316 0
 471 0034 2C23     		movs	r3, #44
 472 0036 4343     		muls	r3, r0
 473 0038 094A     		ldr	r2, .L43+4
 474 003a D318     		adds	r3, r2, r3
 475 003c DB7E     		ldrb	r3, [r3, #27]
 476 003e 012B     		cmp	r3, #1
 477 0040 04D0     		beq	.L36
 478 0042 022B     		cmp	r3, #2
 479 0044 05D1     		bne	.L42
 321:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 480              		.loc 1 321 0
 481 0046 FFF7FEFF 		bl	CapSense_CSXSetupWidget
 482              	.LVL48:
 322:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 483              		.loc 1 322 0
 484 004a 04E0     		b	.L35
 485              	.LVL49:
 486              	.L36:
 327:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 487              		.loc 1 327 0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 55


 488 004c FFF7FEFF 		bl	CapSense_CSDSetupWidget
 489              	.LVL50:
 328:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 490              		.loc 1 328 0
 491 0050 01E0     		b	.L35
 492              	.LVL51:
 493              	.L42:
 338:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 494              		.loc 1 338 0
 495 0052 0124     		movs	r4, #1
 496              	.LVL52:
 497 0054 6442     		rsbs	r4, r4, #0
 498              	.LVL53:
 499              	.L35:
 343:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 500              		.loc 1 343 0
 501 0056 2000     		movs	r0, r4
 502              		@ sp needed
 503              	.LVL54:
 504 0058 10BD     		pop	{r4, pc}
 505              	.L44:
 506 005a C046     		.align	2
 507              	.L43:
 508 005c 00000000 		.word	CapSense_dsRam
 509 0060 00000000 		.word	CapSense_dsFlash
 510              		.cfi_endproc
 511              	.LFE2:
 512              		.size	CapSense_SetupWidget, .-CapSense_SetupWidget
 513              		.section	.text.CapSense_Scan,"ax",%progbits
 514              		.align	2
 515              		.global	CapSense_Scan
 516              		.code	16
 517              		.thumb_func
 518              		.type	CapSense_Scan, %function
 519              	CapSense_Scan:
 520              	.LFB3:
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 521              		.loc 1 369 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525 0000 10B5     		push	{r4, lr}
 526              		.cfi_def_cfa_offset 8
 527              		.cfi_offset 4, -8
 528              		.cfi_offset 14, -4
 529              	.LVL55:
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 530              		.loc 1 372 0
 531 0002 0B4B     		ldr	r3, .L52
 532 0004 DB68     		ldr	r3, [r3, #12]
 533 0006 DB03     		lsls	r3, r3, #15
 534 0008 0DD4     		bmi	.L49
 379:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 535              		.loc 1 379 0
 536 000a 0A4B     		ldr	r3, .L52+4
 537 000c 1B78     		ldrb	r3, [r3]
 538 000e 012B     		cmp	r3, #1
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 56


 539 0010 05D0     		beq	.L47
 540 0012 022B     		cmp	r3, #2
 541 0014 09D1     		bne	.L51
 383:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 542              		.loc 1 383 0
 543 0016 FFF7FEFF 		bl	CapSense_CSXScan
 544              	.LVL56:
 370:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 545              		.loc 1 370 0
 546 001a 0020     		movs	r0, #0
 384:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 547              		.loc 1 384 0
 548 001c 07E0     		b	.L46
 549              	.L47:
 388:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 550              		.loc 1 388 0
 551 001e FFF7FEFF 		bl	CapSense_CSDScan
 552              	.LVL57:
 370:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 553              		.loc 1 370 0
 554 0022 0020     		movs	r0, #0
 389:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 555              		.loc 1 389 0
 556 0024 03E0     		b	.L46
 557              	.L49:
 375:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 558              		.loc 1 375 0
 559 0026 1120     		movs	r0, #17
 560 0028 01E0     		b	.L46
 561              	.L51:
 397:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 562              		.loc 1 397 0
 563 002a 0120     		movs	r0, #1
 564 002c 4042     		rsbs	r0, r0, #0
 565              	.L46:
 566              	.LVL58:
 402:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 567              		.loc 1 402 0
 568              		@ sp needed
 569 002e 10BD     		pop	{r4, pc}
 570              	.L53:
 571              		.align	2
 572              	.L52:
 573 0030 00000000 		.word	CapSense_dsRam
 574 0034 00000000 		.word	.LANCHOR0
 575              		.cfi_endproc
 576              	.LFE3:
 577              		.size	CapSense_Scan, .-CapSense_Scan
 578              		.section	.text.CapSense_ScanAllWidgets,"ax",%progbits
 579              		.align	2
 580              		.global	CapSense_ScanAllWidgets
 581              		.code	16
 582              		.thumb_func
 583              		.type	CapSense_ScanAllWidgets, %function
 584              	CapSense_ScanAllWidgets:
 585              	.LFB4:
 431:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 57


 586              		.loc 1 431 0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 0
 589              		@ frame_needed = 0, uses_anonymous_args = 0
 590 0000 10B5     		push	{r4, lr}
 591              		.cfi_def_cfa_offset 8
 592              		.cfi_offset 4, -8
 593              		.cfi_offset 14, -4
 594              	.LVL59:
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 595              		.loc 1 436 0
 596 0002 0F4B     		ldr	r3, .L62
 597 0004 DB68     		ldr	r3, [r3, #12]
 598 0006 1B06     		lsls	r3, r3, #24
 599 0008 18D4     		bmi	.L61
 600 000a 0024     		movs	r4, #0
 601 000c 0120     		movs	r0, #1
 602 000e 4042     		rsbs	r0, r0, #0
 603 0010 11E0     		b	.L56
 604              	.LVL60:
 605              	.L60:
 452:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 606              		.loc 1 452 0
 607 0012 2000     		movs	r0, r4
 608              	.LVL61:
 609 0014 FFF7FEFF 		bl	CapSense_SetupWidget
 610              	.LVL62:
 454:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 611              		.loc 1 454 0
 612 0018 0028     		cmp	r0, #0
 613 001a 0BD1     		bne	.L57
 458:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 614              		.loc 1 458 0
 615 001c 022C     		cmp	r4, #2
 616 001e 03D8     		bhi	.L58
 461:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 617              		.loc 1 461 0
 618 0020 0122     		movs	r2, #1
 619 0022 084B     		ldr	r3, .L62+4
 620 0024 5A70     		strb	r2, [r3, #1]
 621 0026 02E0     		b	.L59
 622              	.L58:
 466:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 623              		.loc 1 466 0
 624 0028 0022     		movs	r2, #0
 625 002a 064B     		ldr	r3, .L62+4
 626 002c 5A70     		strb	r2, [r3, #1]
 627              	.L59:
 476:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 628              		.loc 1 476 0
 629 002e FFF7FEFF 		bl	CapSense_Scan
 630              	.LVL63:
 478:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 631              		.loc 1 478 0
 632 0032 04E0     		b	.L55
 633              	.L57:
 449:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 58


 634              		.loc 1 449 0
 635 0034 0134     		adds	r4, r4, #1
 636              	.LVL64:
 637              	.L56:
 447:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 638              		.loc 1 447 0 discriminator 1
 639 0036 032C     		cmp	r4, #3
 640 0038 EBD9     		bls	.L60
 641 003a 00E0     		b	.L55
 642              	.LVL65:
 643              	.L61:
 439:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 644              		.loc 1 439 0
 645 003c 1120     		movs	r0, #17
 646              	.LVL66:
 647              	.L55:
 484:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 648              		.loc 1 484 0
 649              		@ sp needed
 650 003e 10BD     		pop	{r4, pc}
 651              	.L63:
 652              		.align	2
 653              	.L62:
 654 0040 00000000 		.word	CapSense_dsRam
 655 0044 00000000 		.word	.LANCHOR0
 656              		.cfi_endproc
 657              	.LFE4:
 658              		.size	CapSense_ScanAllWidgets, .-CapSense_ScanAllWidgets
 659              		.section	.text.CapSense_SetPinState,"ax",%progbits
 660              		.align	2
 661              		.global	CapSense_SetPinState
 662              		.code	16
 663              		.thumb_func
 664              		.type	CapSense_SetPinState, %function
 665              	CapSense_SetPinState:
 666              	.LFB6:
 656:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 667              		.loc 1 656 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 0
 670              		@ frame_needed = 0, uses_anonymous_args = 0
 671              	.LVL67:
 672 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 673              		.cfi_def_cfa_offset 24
 674              		.cfi_offset 3, -24
 675              		.cfi_offset 4, -20
 676              		.cfi_offset 5, -16
 677              		.cfi_offset 6, -12
 678              		.cfi_offset 7, -8
 679              		.cfi_offset 14, -4
 680 0002 1600     		movs	r6, r2
 681:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 681              		.loc 1 681 0
 682 0004 2C23     		movs	r3, #44
 683 0006 5843     		muls	r0, r3
 684              	.LVL68:
 685 0008 364B     		ldr	r3, .L74
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 59


 686 000a C458     		ldr	r4, [r0, r3]
 687 000c CB00     		lsls	r3, r1, #3
 688 000e 591A     		subs	r1, r3, r1
 689              	.LVL69:
 690 0010 8B00     		lsls	r3, r1, #2
 691 0012 E418     		adds	r4, r4, r3
 692              	.LVL70:
 686:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 693              		.loc 1 686 0
 694 0014 0025     		movs	r5, #0
 695 0016 61E0     		b	.L65
 696              	.LVL71:
 697              	.L73:
 689:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 698              		.loc 1 689 0
 699 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 700              	.LVL72:
 690:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 701              		.loc 1 690 0
 702 001c 2168     		ldr	r1, [r4]
 703 001e 0B68     		ldr	r3, [r1]
 704 0020 277E     		ldrb	r7, [r4, #24]
 705 0022 0F22     		movs	r2, #15
 706 0024 BA40     		lsls	r2, r2, r7
 707 0026 9343     		bics	r3, r2
 708 0028 0B60     		str	r3, [r1]
 691:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 709              		.loc 1 691 0
 710 002a 6168     		ldr	r1, [r4, #4]
 711 002c 0B68     		ldr	r3, [r1]
 712 002e A77E     		ldrb	r7, [r4, #26]
 713 0030 0722     		movs	r2, #7
 714 0032 BA40     		lsls	r2, r2, r7
 715 0034 9343     		bics	r3, r2
 716 0036 0B60     		str	r3, [r1]
 692:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 717              		.loc 1 692 0
 718 0038 FFF7FEFF 		bl	CyExitCriticalSection
 719              	.LVL73:
 694:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 720              		.loc 1 694 0
 721 003c 052E     		cmp	r6, #5
 722 003e 4BD8     		bhi	.L66
 723 0040 B300     		lsls	r3, r6, #2
 724 0042 294A     		ldr	r2, .L74+4
 725 0044 D358     		ldr	r3, [r2, r3]
 726 0046 9F46     		mov	pc, r3
 727              		.section	.rodata
 728              		.align	2
 729              	.L68:
 730 0000 48000000 		.word	.L67
 731 0004 6E000000 		.word	.L69
 732 0008 D8000000 		.word	.L66
 733 000c 86000000 		.word	.L70
 734 0010 8E000000 		.word	.L71
 735 0014 B4000000 		.word	.L72
 736              		.section	.text.CapSense_SetPinState
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 60


 737              	.L67:
 698:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 738              		.loc 1 698 0
 739 0048 FFF7FEFF 		bl	CyEnterCriticalSection
 740              	.LVL74:
 699:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 741              		.loc 1 699 0
 742 004c 6268     		ldr	r2, [r4, #4]
 743 004e 1168     		ldr	r1, [r2]
 744 0050 A77E     		ldrb	r7, [r4, #26]
 745 0052 0623     		movs	r3, #6
 746 0054 BB40     		lsls	r3, r3, r7
 747 0056 0B43     		orrs	r3, r1
 748 0058 1360     		str	r3, [r2]
 700:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 749              		.loc 1 700 0
 750 005a A168     		ldr	r1, [r4, #8]
 751 005c 0B68     		ldr	r3, [r1]
 752 005e 677E     		ldrb	r7, [r4, #25]
 753 0060 0122     		movs	r2, #1
 754 0062 BA40     		lsls	r2, r2, r7
 755 0064 9343     		bics	r3, r2
 756 0066 0B60     		str	r3, [r1]
 701:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 757              		.loc 1 701 0
 758 0068 FFF7FEFF 		bl	CyExitCriticalSection
 759              	.LVL75:
 702:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 760              		.loc 1 702 0
 761 006c 34E0     		b	.L66
 762              	.L69:
 705:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 763              		.loc 1 705 0
 764 006e FFF7FEFF 		bl	CyEnterCriticalSection
 765              	.LVL76:
 706:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 766              		.loc 1 706 0
 767 0072 A168     		ldr	r1, [r4, #8]
 768 0074 0B68     		ldr	r3, [r1]
 769 0076 677E     		ldrb	r7, [r4, #25]
 770 0078 0122     		movs	r2, #1
 771 007a BA40     		lsls	r2, r2, r7
 772 007c 9343     		bics	r3, r2
 773 007e 0B60     		str	r3, [r1]
 707:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 774              		.loc 1 707 0
 775 0080 FFF7FEFF 		bl	CyExitCriticalSection
 776              	.LVL77:
 708:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 777              		.loc 1 708 0
 778 0084 28E0     		b	.L66
 779              	.L70:
 713:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 780              		.loc 1 713 0
 781 0086 2000     		movs	r0, r4
 782 0088 FFF7FEFF 		bl	CapSense_CSDConnectSns
 783              	.LVL78:
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 61


 714:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 784              		.loc 1 714 0
 785 008c 24E0     		b	.L66
 786              	.L71:
 729:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_C
 787              		.loc 1 729 0
 788 008e FFF7FEFF 		bl	CyEnterCriticalSection
 789              	.LVL79:
 730:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_GPIO_STRGDRV << i
 790              		.loc 1 730 0
 791 0092 2268     		ldr	r2, [r4]
 792 0094 1168     		ldr	r1, [r2]
 793 0096 277E     		ldrb	r7, [r4, #24]
 794 0098 0423     		movs	r3, #4
 795 009a BB40     		lsls	r3, r3, r7
 796 009c 0B43     		orrs	r3, r1
 797 009e 1360     		str	r3, [r2]
 731:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 798              		.loc 1 731 0
 799 00a0 6268     		ldr	r2, [r4, #4]
 800 00a2 1168     		ldr	r1, [r2]
 801 00a4 A77E     		ldrb	r7, [r4, #26]
 802 00a6 0623     		movs	r3, #6
 803 00a8 BB40     		lsls	r3, r3, r7
 804 00aa 0B43     		orrs	r3, r1
 805 00ac 1360     		str	r3, [r2]
 732:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 806              		.loc 1 732 0
 807 00ae FFF7FEFF 		bl	CyExitCriticalSection
 808              	.LVL80:
 733:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 809              		.loc 1 733 0
 810 00b2 11E0     		b	.L66
 811              	.L72:
 736:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_A
 812              		.loc 1 736 0
 813 00b4 FFF7FEFF 		bl	CyEnterCriticalSection
 814              	.LVL81:
 737:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << 
 815              		.loc 1 737 0
 816 00b8 2268     		ldr	r2, [r4]
 817 00ba 1168     		ldr	r1, [r2]
 818 00bc 277E     		ldrb	r7, [r4, #24]
 819 00be 0623     		movs	r3, #6
 820 00c0 BB40     		lsls	r3, r3, r7
 821 00c2 0B43     		orrs	r3, r1
 822 00c4 1360     		str	r3, [r2]
 738:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 823              		.loc 1 738 0
 824 00c6 6168     		ldr	r1, [r4, #4]
 825 00c8 0B68     		ldr	r3, [r1]
 826 00ca A77E     		ldrb	r7, [r4, #26]
 827 00cc 0722     		movs	r2, #7
 828 00ce BA40     		lsls	r2, r2, r7
 829 00d0 9343     		bics	r3, r2
 830 00d2 0B60     		str	r3, [r1]
 739:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 62


 831              		.loc 1 739 0
 832 00d4 FFF7FEFF 		bl	CyExitCriticalSection
 833              	.LVL82:
 834              	.L66:
 748:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 835              		.loc 1 748 0 discriminator 2
 836 00d8 1C34     		adds	r4, r4, #28
 837              	.LVL83:
 686:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 838              		.loc 1 686 0 discriminator 2
 839 00da 0135     		adds	r5, r5, #1
 840              	.LVL84:
 841              	.L65:
 686:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 842              		.loc 1 686 0 is_stmt 0 discriminator 1
 843 00dc 002D     		cmp	r5, #0
 844 00de 9BD0     		beq	.L73
 750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 845              		.loc 1 750 0 is_stmt 1
 846              		@ sp needed
 847              	.LVL85:
 848              	.LVL86:
 849              	.LVL87:
 850 00e0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 851              	.L75:
 852 00e2 C046     		.align	2
 853              	.L74:
 854 00e4 00000000 		.word	CapSense_dsFlash
 855 00e8 00000000 		.word	.L68
 856              		.cfi_endproc
 857              	.LFE6:
 858              		.size	CapSense_SetPinState, .-CapSense_SetPinState
 859              		.section	.text.CapSense_SsSwitchSensingMode,"ax",%progbits
 860              		.align	2
 861              		.global	CapSense_SsSwitchSensingMode
 862              		.code	16
 863              		.thumb_func
 864              		.type	CapSense_SsSwitchSensingMode, %function
 865              	CapSense_SsSwitchSensingMode:
 866              	.LFB9:
 908:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 867              		.loc 1 908 0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 0
 870              		@ frame_needed = 0, uses_anonymous_args = 0
 871              	.LVL88:
 872 0000 10B5     		push	{r4, lr}
 873              		.cfi_def_cfa_offset 8
 874              		.cfi_offset 4, -8
 875              		.cfi_offset 14, -4
 876 0002 0400     		movs	r4, r0
 909:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 877              		.loc 1 909 0
 878 0004 124B     		ldr	r3, .L82
 879 0006 1B78     		ldrb	r3, [r3]
 880 0008 8342     		cmp	r3, r0
 881 000a 1FD0     		beq	.L76
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 63


 912:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 882              		.loc 1 912 0
 883 000c 012B     		cmp	r3, #1
 884 000e 02D1     		bne	.L78
 915:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 885              		.loc 1 915 0
 886 0010 FFF7FEFF 		bl	CapSense_SsCSDDisableMode
 887              	.LVL89:
 888 0014 03E0     		b	.L79
 889              	.LVL90:
 890              	.L78:
 918:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 891              		.loc 1 918 0
 892 0016 022B     		cmp	r3, #2
 893 0018 01D1     		bne	.L79
 921:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 894              		.loc 1 921 0
 895 001a FFF7FEFF 		bl	CapSense_SsDisableCSXMode
 896              	.LVL91:
 897              	.L79:
 945:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 898              		.loc 1 945 0
 899 001e 012C     		cmp	r4, #1
 900 0020 05D1     		bne	.L80
 949:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
 901              		.loc 1 949 0
 902 0022 FFF7FEFF 		bl	CapSense_SsCSDInitialize
 903              	.LVL92:
 950:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 904              		.loc 1 950 0
 905 0026 0122     		movs	r2, #1
 906 0028 094B     		ldr	r3, .L82
 907 002a 1A70     		strb	r2, [r3]
 908 002c 0EE0     		b	.L76
 909              	.L80:
 953:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 910              		.loc 1 953 0
 911 002e 022C     		cmp	r4, #2
 912 0030 05D1     		bne	.L81
 957:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSX_E;
 913              		.loc 1 957 0
 914 0032 FFF7FEFF 		bl	CapSense_CSXInitialize
 915              	.LVL93:
 958:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 916              		.loc 1 958 0
 917 0036 0222     		movs	r2, #2
 918 0038 054B     		ldr	r3, .L82
 919 003a 1A70     		strb	r2, [r3]
 920 003c 06E0     		b	.L76
 921              	.L81:
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 922              		.loc 1 961 0
 923 003e 042C     		cmp	r4, #4
 924 0040 04D0     		beq	.L76
 969:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 925              		.loc 1 969 0
 926 0042 032C     		cmp	r4, #3
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 64


 927 0044 02D0     		beq	.L76
 978:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 928              		.loc 1 978 0
 929 0046 0022     		movs	r2, #0
 930 0048 014B     		ldr	r3, .L82
 931 004a 1A70     		strb	r2, [r3]
 932              	.L76:
 981:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 933              		.loc 1 981 0
 934              		@ sp needed
 935 004c 10BD     		pop	{r4, pc}
 936              	.L83:
 937 004e C046     		.align	2
 938              	.L82:
 939 0050 00000000 		.word	.LANCHOR0
 940              		.cfi_endproc
 941              	.LFE9:
 942              		.size	CapSense_SsSwitchSensingMode, .-CapSense_SsSwitchSensingMode
 943              		.section	.text.CapSense_SsSetIOsInDefaultState,"ax",%progbits
 944              		.align	2
 945              		.global	CapSense_SsSetIOsInDefaultState
 946              		.code	16
 947              		.thumb_func
 948              		.type	CapSense_SsSetIOsInDefaultState, %function
 949              	CapSense_SsSetIOsInDefaultState:
 950              	.LFB10:
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr = &CapSense_ioList[0u];
 951              		.loc 1 1007 0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 0
 954              		@ frame_needed = 0, uses_anonymous_args = 0
 955 0000 30B5     		push	{r4, r5, lr}
 956              		.cfi_def_cfa_offset 12
 957              		.cfi_offset 4, -12
 958              		.cfi_offset 5, -8
 959              		.cfi_offset 14, -4
 960              	.LVL94:
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 961              		.loc 1 1013 0
 962 0002 0020     		movs	r0, #0
1008:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 loopIndex;
 963              		.loc 1 1008 0
 964 0004 0D4B     		ldr	r3, .L87
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 965              		.loc 1 1013 0
 966 0006 16E0     		b	.L85
 967              	.LVL95:
 968              	.L86:
1020:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
 969              		.loc 1 1020 0 discriminator 3
 970 0008 1968     		ldr	r1, [r3]
 971 000a 0A68     		ldr	r2, [r1]
 972              	.LVL96:
1021:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
 973              		.loc 1 1021 0 discriminator 3
 974 000c 1C69     		ldr	r4, [r3, #16]
 975 000e A243     		bics	r2, r4
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 65


 976              	.LVL97:
1022:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 977              		.loc 1 1022 0 discriminator 3
 978 0010 0A60     		str	r2, [r1]
1024:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(CapSense_GPIO_PC_MASK << ioPtr->shift);
 979              		.loc 1 1024 0 discriminator 3
 980 0012 5C68     		ldr	r4, [r3, #4]
 981 0014 2268     		ldr	r2, [r4]
 982              	.LVL98:
1025:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue |=  (CapSense_GPIO_STRGDRV << ioPtr->shift);
 983              		.loc 1 1025 0 discriminator 3
 984 0016 9D7E     		ldrb	r5, [r3, #26]
 985 0018 0721     		movs	r1, #7
 986 001a A940     		lsls	r1, r1, r5
 987 001c 8A43     		bics	r2, r1
 988              	.LVL99:
 989 001e 1100     		movs	r1, r2
 990              	.LVL100:
1026:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
 991              		.loc 1 1026 0 discriminator 3
 992 0020 0622     		movs	r2, #6
 993 0022 AA40     		lsls	r2, r2, r5
 994 0024 0A43     		orrs	r2, r1
 995              	.LVL101:
1027:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 996              		.loc 1 1027 0 discriminator 3
 997 0026 2260     		str	r2, [r4]
1029:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->mask);
 998              		.loc 1 1029 0 discriminator 3
 999 0028 9968     		ldr	r1, [r3, #8]
 1000 002a 0A68     		ldr	r2, [r1]
 1001              	.LVL102:
1030:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
 1002              		.loc 1 1030 0 discriminator 3
 1003 002c 5C69     		ldr	r4, [r3, #20]
 1004 002e A243     		bics	r2, r4
 1005              	.LVL103:
1031:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1006              		.loc 1 1031 0 discriminator 3
 1007 0030 0A60     		str	r2, [r1]
1034:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1008              		.loc 1 1034 0 discriminator 3
 1009 0032 1C33     		adds	r3, r3, #28
 1010              	.LVL104:
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1011              		.loc 1 1013 0 discriminator 3
 1012 0034 0130     		adds	r0, r0, #1
 1013              	.LVL105:
 1014              	.L85:
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1015              		.loc 1 1013 0 is_stmt 0 discriminator 1
 1016 0036 0A28     		cmp	r0, #10
 1017 0038 E6D9     		bls	.L86
1040:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1018              		.loc 1 1040 0 is_stmt 1
 1019              		@ sp needed
 1020 003a 30BD     		pop	{r4, r5, pc}
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 66


 1021              	.L88:
 1022              		.align	2
 1023              	.L87:
 1024 003c 00000000 		.word	CapSense_ioList
 1025              		.cfi_endproc
 1026              	.LFE10:
 1027              		.size	CapSense_SsSetIOsInDefaultState, .-CapSense_SsSetIOsInDefaultState
 1028              		.section	.text.CapSense_SsPostAllWidgetsScan,"ax",%progbits
 1029              		.align	2
 1030              		.global	CapSense_SsPostAllWidgetsScan
 1031              		.code	16
 1032              		.thumb_func
 1033              		.type	CapSense_SsPostAllWidgetsScan, %function
 1034              	CapSense_SsPostAllWidgetsScan:
 1035              	.LFB11:
1125:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 1036              		.loc 1 1125 0
 1037              		.cfi_startproc
 1038              		@ args = 0, pretend = 0, frame = 0
 1039              		@ frame_needed = 0, uses_anonymous_args = 0
 1040 0000 10B5     		push	{r4, lr}
 1041              		.cfi_def_cfa_offset 8
 1042              		.cfi_offset 4, -8
 1043              		.cfi_offset 14, -4
 1044              	.L94:
1136:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1045              		.loc 1 1136 0
 1046 0002 1B4A     		ldr	r2, .L95
 1047 0004 9378     		ldrb	r3, [r2, #2]
 1048 0006 0133     		adds	r3, r3, #1
 1049 0008 DBB2     		uxtb	r3, r3
 1050 000a 9370     		strb	r3, [r2, #2]
1138:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1051              		.loc 1 1138 0
 1052 000c 9078     		ldrb	r0, [r2, #2]
 1053 000e C0B2     		uxtb	r0, r0
 1054 0010 FFF7FEFF 		bl	CapSense_SetupWidget
 1055              	.LVL106:
 1056 0014 041E     		subs	r4, r0, #0
 1057              	.LVL107:
1140:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1058              		.loc 1 1140 0
 1059 0016 09D1     		bne	.L90
1142:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1060              		.loc 1 1142 0
 1061 0018 154B     		ldr	r3, .L95
 1062 001a 9B78     		ldrb	r3, [r3, #2]
 1063 001c 032B     		cmp	r3, #3
 1064 001e 02D1     		bne	.L91
1145:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1065              		.loc 1 1145 0
 1066 0020 0022     		movs	r2, #0
 1067 0022 134B     		ldr	r3, .L95
 1068 0024 5A70     		strb	r2, [r3, #1]
 1069              	.L91:
1147:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1070              		.loc 1 1147 0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 67


 1071 0026 FFF7FEFF 		bl	CapSense_Scan
 1072              	.LVL108:
 1073 002a 1EE0     		b	.L92
 1074              	.LVL109:
 1075              	.L90:
1149:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1076              		.loc 1 1149 0
 1077 002c 104B     		ldr	r3, .L95
 1078 002e 9B78     		ldrb	r3, [r3, #2]
 1079 0030 032B     		cmp	r3, #3
 1080 0032 11D1     		bne	.L93
1163:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
 1081              		.loc 1 1163 0
 1082 0034 0F4B     		ldr	r3, .L95+4
 1083 0036 1A89     		ldrh	r2, [r3, #8]
 1084 0038 0132     		adds	r2, r2, #1
 1085 003a 1A81     		strh	r2, [r3, #8]
1165:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1086              		.loc 1 1165 0
 1087 003c DA68     		ldr	r2, [r3, #12]
 1088 003e 8021     		movs	r1, #128
 1089 0040 8A43     		bics	r2, r1
 1090 0042 DA60     		str	r2, [r3, #12]
1168:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
 1091              		.loc 1 1168 0
 1092 0044 DA68     		ldr	r2, [r3, #12]
 1093 0046 1202     		lsls	r2, r2, #8
 1094 0048 120A     		lsrs	r2, r2, #8
 1095 004a DA60     		str	r2, [r3, #12]
1169:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1096              		.loc 1 1169 0
 1097 004c DA68     		ldr	r2, [r3, #12]
 1098 004e 0406     		lsls	r4, r0, #24
 1099 0050 1443     		orrs	r4, r2
 1100 0052 DC60     		str	r4, [r3, #12]
 1101              	.LVL110:
1172:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1102              		.loc 1 1172 0
 1103 0054 0024     		movs	r4, #0
 1104 0056 08E0     		b	.L92
 1105              	.LVL111:
 1106              	.L93:
1177:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
 1107              		.loc 1 1177 0
 1108 0058 064A     		ldr	r2, .L95+4
 1109 005a D368     		ldr	r3, [r2, #12]
 1110 005c 1B02     		lsls	r3, r3, #8
 1111 005e 1B0A     		lsrs	r3, r3, #8
 1112 0060 D360     		str	r3, [r2, #12]
1178:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1113              		.loc 1 1178 0
 1114 0062 D168     		ldr	r1, [r2, #12]
 1115 0064 0306     		lsls	r3, r0, #24
 1116 0066 0B43     		orrs	r3, r1
 1117 0068 D360     		str	r3, [r2, #12]
 1118              	.LVL112:
 1119              	.L92:
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 68


1180:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (1u != CapSense_TOTAL_WIDGETS) */
 1120              		.loc 1 1180 0
 1121 006a 002C     		cmp	r4, #0
 1122 006c C9D1     		bne	.L94
1182:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1123              		.loc 1 1182 0
 1124              		@ sp needed
 1125              	.LVL113:
 1126 006e 10BD     		pop	{r4, pc}
 1127              	.L96:
 1128              		.align	2
 1129              	.L95:
 1130 0070 00000000 		.word	.LANCHOR0
 1131 0074 00000000 		.word	CapSense_dsRam
 1132              		.cfi_endproc
 1133              	.LFE11:
 1134              		.size	CapSense_SsPostAllWidgetsScan, .-CapSense_SsPostAllWidgetsScan
 1135              		.section	.text.CapSense_SsIsrInitialize,"ax",%progbits
 1136              		.align	2
 1137              		.global	CapSense_SsIsrInitialize
 1138              		.code	16
 1139              		.thumb_func
 1140              		.type	CapSense_SsIsrInitialize, %function
 1141              	CapSense_SsIsrInitialize:
 1142              	.LFB12:
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
 1143              		.loc 1 1202 0
 1144              		.cfi_startproc
 1145              		@ args = 0, pretend = 0, frame = 0
 1146              		@ frame_needed = 0, uses_anonymous_args = 0
 1147              	.LVL114:
 1148 0000 10B5     		push	{r4, lr}
 1149              		.cfi_def_cfa_offset 8
 1150              		.cfi_offset 4, -8
 1151              		.cfi_offset 14, -4
1203:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 1152              		.loc 1 1203 0
 1153 0002 FFF7FEFF 		bl	CapSense_ISR_StartEx
 1154              	.LVL115:
1204:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1155              		.loc 1 1204 0
 1156              		@ sp needed
 1157 0006 10BD     		pop	{r4, pc}
 1158              		.cfi_endproc
 1159              	.LFE12:
 1160              		.size	CapSense_SsIsrInitialize, .-CapSense_SsIsrInitialize
 1161              		.section	.text.CapSense_SsSetModClkClockDivider,"ax",%progbits
 1162              		.align	2
 1163              		.global	CapSense_SsSetModClkClockDivider
 1164              		.code	16
 1165              		.thumb_func
 1166              		.type	CapSense_SsSetModClkClockDivider, %function
 1167              	CapSense_SsSetModClkClockDivider:
 1168              	.LFB13:
1225:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
 1169              		.loc 1 1225 0
 1170              		.cfi_startproc
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 69


 1171              		@ args = 0, pretend = 0, frame = 0
 1172              		@ frame_needed = 0, uses_anonymous_args = 0
 1173              		@ link register save eliminated.
 1174              	.LVL116:
1228:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
 1175              		.loc 1 1228 0
 1176 0000 074A     		ldr	r2, .L100
 1177 0002 084B     		ldr	r3, .L100+4
 1178 0004 1A60     		str	r2, [r3]
1238:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1179              		.loc 1 1238 0
 1180 0006 0138     		subs	r0, r0, #1
 1181              	.LVL117:
 1182 0008 0002     		lsls	r0, r0, #8
 1183              	.LVL118:
 1184 000a 074B     		ldr	r3, .L100+8
 1185 000c 1860     		str	r0, [r3]
 1186              	.L99:
1241:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1187              		.loc 1 1241 0 discriminator 1
 1188 000e 054B     		ldr	r3, .L100+4
 1189 0010 1B68     		ldr	r3, [r3]
 1190 0012 002B     		cmp	r3, #0
 1191 0014 FBDB     		blt	.L99
1247:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
 1192              		.loc 1 1247 0
 1193 0016 054A     		ldr	r2, .L100+12
 1194 0018 024B     		ldr	r3, .L100+4
 1195 001a 1A60     		str	r2, [r3]
1272:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1196              		.loc 1 1272 0
 1197              		@ sp needed
 1198 001c 7047     		bx	lr
 1199              	.L101:
 1200 001e C046     		.align	2
 1201              	.L100:
 1202 0020 40000040 		.word	1073741888
 1203 0024 00000140 		.word	1073807360
 1204 0028 00030140 		.word	1073808128
 1205 002c 40FF0080 		.word	-2147418304
 1206              		.cfi_endproc
 1207              	.LFE13:
 1208              		.size	CapSense_SsSetModClkClockDivider, .-CapSense_SsSetModClkClockDivider
 1209              		.section	.text.CapSense_SsSetSnsClockDivider,"ax",%progbits
 1210              		.align	2
 1211              		.global	CapSense_SsSetSnsClockDivider
 1212              		.code	16
 1213              		.thumb_func
 1214              		.type	CapSense_SsSetSnsClockDivider, %function
 1215              	CapSense_SsSetSnsClockDivider:
 1216              	.LFB14:
1293:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 1217              		.loc 1 1293 0
 1218              		.cfi_startproc
 1219              		@ args = 0, pretend = 0, frame = 0
 1220              		@ frame_needed = 0, uses_anonymous_args = 0
 1221              		@ link register save eliminated.
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 70


 1222              	.LVL119:
1302:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
 1223              		.loc 1 1302 0
 1224 0000 034A     		ldr	r2, .L103
 1225 0002 1368     		ldr	r3, [r2]
 1226              	.LVL120:
1303:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
 1227              		.loc 1 1303 0
 1228 0004 1B0B     		lsrs	r3, r3, #12
 1229              	.LVL121:
 1230 0006 1B03     		lsls	r3, r3, #12
 1231              	.LVL122:
1304:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
 1232              		.loc 1 1304 0
 1233 0008 0138     		subs	r0, r0, #1
 1234              	.LVL123:
 1235 000a 1843     		orrs	r0, r3
 1236              	.LVL124:
1305:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 1237              		.loc 1 1305 0
 1238 000c 1060     		str	r0, [r2]
1354:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1239              		.loc 1 1354 0
 1240              		@ sp needed
 1241 000e 7047     		bx	lr
 1242              	.L104:
 1243              		.align	2
 1244              	.L103:
 1245 0010 00020B40 		.word	1074463232
 1246              		.cfi_endproc
 1247              	.LFE14:
 1248              		.size	CapSense_SsSetSnsClockDivider, .-CapSense_SsSetSnsClockDivider
 1249              		.section	.text.CapSense_SsSetClockDividers,"ax",%progbits
 1250              		.align	2
 1251              		.global	CapSense_SsSetClockDividers
 1252              		.code	16
 1253              		.thumb_func
 1254              		.type	CapSense_SsSetClockDividers, %function
 1255              	CapSense_SsSetClockDividers:
 1256              	.LFB15:
1377:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
 1257              		.loc 1 1377 0
 1258              		.cfi_startproc
 1259              		@ args = 0, pretend = 0, frame = 0
 1260              		@ frame_needed = 0, uses_anonymous_args = 0
 1261              	.LVL125:
 1262 0000 10B5     		push	{r4, lr}
 1263              		.cfi_def_cfa_offset 8
 1264              		.cfi_offset 4, -8
 1265              		.cfi_offset 14, -4
 1266 0002 0400     		movs	r4, r0
1379:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1267              		.loc 1 1379 0
 1268 0004 0800     		movs	r0, r1
 1269              	.LVL126:
 1270 0006 FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 1271              	.LVL127:
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 71


1382:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 1272              		.loc 1 1382 0
 1273 000a 2000     		movs	r0, r4
 1274 000c FFF7FEFF 		bl	CapSense_SsSetSnsClockDivider
 1275              	.LVL128:
1383:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1276              		.loc 1 1383 0
 1277              		@ sp needed
 1278              	.LVL129:
 1279 0010 10BD     		pop	{r4, pc}
 1280              		.cfi_endproc
 1281              	.LFE15:
 1282              		.size	CapSense_SsSetClockDividers, .-CapSense_SsSetClockDividers
 1283 0012 C046     		.section	.text.CapSense_CalibrateWidget,"ax",%progbits
 1284              		.align	2
 1285              		.global	CapSense_CalibrateWidget
 1286              		.code	16
 1287              		.thumb_func
 1288              		.type	CapSense_CalibrateWidget, %function
 1289              	CapSense_CalibrateWidget:
 1290              	.LFB16:
1429:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1291              		.loc 1 1429 0
 1292              		.cfi_startproc
 1293              		@ args = 0, pretend = 0, frame = 0
 1294              		@ frame_needed = 0, uses_anonymous_args = 0
 1295              	.LVL130:
 1296 0000 70B5     		push	{r4, r5, r6, lr}
 1297              		.cfi_def_cfa_offset 16
 1298              		.cfi_offset 4, -16
 1299              		.cfi_offset 5, -12
 1300              		.cfi_offset 6, -8
 1301              		.cfi_offset 14, -4
 1302 0002 0500     		movs	r5, r0
 1303              	.LVL131:
1434:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1304              		.loc 1 1434 0
 1305 0004 0328     		cmp	r0, #3
 1306 0006 01D8     		bhi	.L110
1430:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1307              		.loc 1 1430 0
 1308 0008 0024     		movs	r4, #0
 1309 000a 00E0     		b	.L107
 1310              	.L110:
1436:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1311              		.loc 1 1436 0
 1312 000c 0124     		movs	r4, #1
 1313              	.L107:
 1314              	.LVL132:
1454:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1315              		.loc 1 1454 0
 1316 000e 002C     		cmp	r4, #0
 1317 0010 11D1     		bne	.L108
1465:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 1318              		.loc 1 1465 0
 1319 0012 2C23     		movs	r3, #44
 1320 0014 6B43     		muls	r3, r5
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 72


 1321 0016 094A     		ldr	r2, .L111
 1322 0018 D318     		adds	r3, r2, r3
 1323 001a DE7E     		ldrb	r6, [r3, #27]
1464:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 1324              		.loc 1 1464 0
 1325 001c 022E     		cmp	r6, #2
 1326 001e 03D1     		bne	.L109
1468:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 1327              		.loc 1 1468 0
 1328 0020 2821     		movs	r1, #40
 1329 0022 2800     		movs	r0, r5
 1330              	.LVL133:
 1331 0024 FFF7FEFF 		bl	CapSense_CSXCalibrateWidget
 1332              	.LVL134:
 1333              	.L109:
1473:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 1334              		.loc 1 1473 0
 1335 0028 012E     		cmp	r6, #1
 1336 002a 04D1     		bne	.L108
1477:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 1337              		.loc 1 1477 0
 1338 002c 5521     		movs	r1, #85
 1339 002e 2800     		movs	r0, r5
 1340 0030 FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1341              	.LVL135:
 1342 0034 0400     		movs	r4, r0
 1343              	.LVL136:
 1344              	.L108:
1505:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1345              		.loc 1 1505 0
 1346 0036 2000     		movs	r0, r4
 1347              		@ sp needed
 1348              	.LVL137:
 1349              	.LVL138:
 1350 0038 70BD     		pop	{r4, r5, r6, pc}
 1351              	.L112:
 1352 003a C046     		.align	2
 1353              	.L111:
 1354 003c 00000000 		.word	CapSense_dsFlash
 1355              		.cfi_endproc
 1356              	.LFE16:
 1357              		.size	CapSense_CalibrateWidget, .-CapSense_CalibrateWidget
 1358              		.section	.text.CapSense_CalibrateAllWidgets,"ax",%progbits
 1359              		.align	2
 1360              		.global	CapSense_CalibrateAllWidgets
 1361              		.code	16
 1362              		.thumb_func
 1363              		.type	CapSense_CalibrateAllWidgets, %function
 1364              	CapSense_CalibrateAllWidgets:
 1365              	.LFB17:
1542:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1366              		.loc 1 1542 0
 1367              		.cfi_startproc
 1368              		@ args = 0, pretend = 0, frame = 0
 1369              		@ frame_needed = 0, uses_anonymous_args = 0
 1370 0000 70B5     		push	{r4, r5, r6, lr}
 1371              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 73


 1372              		.cfi_offset 4, -16
 1373              		.cfi_offset 5, -12
 1374              		.cfi_offset 6, -8
 1375              		.cfi_offset 14, -4
 1376              	.LVL139:
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1377              		.loc 1 1546 0
 1378 0002 0024     		movs	r4, #0
1543:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
 1379              		.loc 1 1543 0
 1380 0004 0025     		movs	r5, #0
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1381              		.loc 1 1546 0
 1382 0006 04E0     		b	.L114
 1383              	.LVL140:
 1384              	.L115:
1548:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1385              		.loc 1 1548 0 discriminator 3
 1386 0008 2000     		movs	r0, r4
 1387 000a FFF7FEFF 		bl	CapSense_CalibrateWidget
 1388              	.LVL141:
 1389 000e 0543     		orrs	r5, r0
 1390              	.LVL142:
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1391              		.loc 1 1546 0 discriminator 3
 1392 0010 0134     		adds	r4, r4, #1
 1393              	.LVL143:
 1394              	.L114:
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1395              		.loc 1 1546 0 is_stmt 0 discriminator 1
 1396 0012 032C     		cmp	r4, #3
 1397 0014 F8D9     		bls	.L115
1552:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
 1398              		.loc 1 1552 0 is_stmt 1
 1399 0016 2800     		movs	r0, r5
 1400              		@ sp needed
 1401              	.LVL144:
 1402              	.LVL145:
 1403 0018 70BD     		pop	{r4, r5, r6, pc}
 1404              		.cfi_endproc
 1405              	.LFE17:
 1406              		.size	CapSense_CalibrateAllWidgets, .-CapSense_CalibrateAllWidgets
 1407 001a C046     		.section	.text.CapSense_SsClearCSDSensors,"ax",%progbits
 1408              		.align	2
 1409              		.global	CapSense_SsClearCSDSensors
 1410              		.code	16
 1411              		.thumb_func
 1412              		.type	CapSense_SsClearCSDSensors, %function
 1413              	CapSense_SsClearCSDSensors:
 1414              	.LFB24:
2541:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2542:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) && \
2543:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2544:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2545:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2546:Generated_Source\PSoC4/CapSense_Sensing.c ****           ((CapSense_ENABLE == CapSense_CSD_EN) && \
2547:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 74


2548:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))) */
2549:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2550:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2551:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2552:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2553:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsClearCSDSensors
2554:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2555:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2556:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2557:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Resets all the CSD sensors to the non-sampling state by sequentially
2558:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  disconnecting all the sensors from the Analog MUX bus and putting them to
2559:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  an inactive state.
2560:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2561:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2562:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function goes through all the widgets and updates appropriate bits in
2563:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the IO HSIOM, PC and DR registers depending on the Inactive sensor connection
2564:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  parameter. DR register bits are set to zero when the Inactive sensor
2565:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  connection is Ground or Hi-Z.
2566:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2567:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2568:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsClearCSDSensors(void)
2569:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1415              		.loc 1 2569 0
 1416              		.cfi_startproc
 1417              		@ args = 0, pretend = 0, frame = 0
 1418              		@ frame_needed = 0, uses_anonymous_args = 0
 1419 0000 70B5     		push	{r4, r5, r6, lr}
 1420              		.cfi_def_cfa_offset 16
 1421              		.cfi_offset 4, -16
 1422              		.cfi_offset 5, -12
 1423              		.cfi_offset 6, -8
 1424              		.cfi_offset 14, -4
 1425              	.LVL146:
2570:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
2571:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsIndex;
2572:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2573:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
2574:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 pinIndex;
2575:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
2576:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2577:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
2578:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Declare ptr to sensor IO structure */
2579:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_IO_STRUCT const *curDedicatedSnsIOPtr;
2580:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Pointer to Flash structure holding info of sensor to be scanned */
2581:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
2582:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
2583:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_IO_STRUCT const *curSnsIOPtr;
2584:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
 1426              		.loc 1 2585 0
 1427 0002 0025     		movs	r5, #0
 1428 0004 1AE0     		b	.L117
 1429              	.LVL147:
 1430              	.L121:
2586:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2587:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
2588:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 75


 1431              		.loc 1 2588 0
 1432 0006 2C23     		movs	r3, #44
 1433 0008 6B43     		muls	r3, r5
 1434 000a 0E4A     		ldr	r2, .L122
 1435 000c D318     		adds	r3, r2, r3
 1436 000e DB7E     		ldrb	r3, [r3, #27]
2587:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
 1437              		.loc 1 2587 0
 1438 0010 012B     		cmp	r3, #1
 1439 0012 12D1     		bne	.L118
2589:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2590:Generated_Source\PSoC4/CapSense_Sensing.c ****                 curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
 1440              		.loc 1 2590 0
 1441 0014 2B33     		adds	r3, r3, #43
 1442 0016 6B43     		muls	r3, r5
 1443 0018 9E58     		ldr	r6, [r3, r2]
 1444              	.LVL148:
2591:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                 CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2SnsFlash;
2592:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2593:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Go through all the sensors in widget */
2594:Generated_Source\PSoC4/CapSense_Sensing.c ****                 for (snsIndex = 0u; snsIndex < (uint8)CapSense_dsFlash.wdgtArray[wdgtIndex].totalNu
 1445              		.loc 1 2594 0
 1446 001a 0024     		movs	r4, #0
 1447 001c 06E0     		b	.L119
 1448              	.LVL149:
 1449              	.L120:
2595:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2596:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
2597:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Check ganged sns flag */
2598:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[wdgtIndex].stat
2599:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                  CapSense_GANGED_SNS_MASK))
2600:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2601:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Get sns pointer */
2602:Generated_Source\PSoC4/CapSense_Sensing.c ****                             curFlashSnsPtr = (CapSense_FLASH_SNS_STRUCT const *)
2603:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                CapSense_dsFlash.wdgtArray[wdgtIndex
2604:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                snsIndex;
2605:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2606:Generated_Source\PSoC4/CapSense_Sensing.c ****                             for(pinIndex = 0u; pinIndex < curFlashSnsPtr->numPins; pinIndex++)
2607:Generated_Source\PSoC4/CapSense_Sensing.c ****                             {
2608:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Get IO pointer for dedicated pin */
2609:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 curDedicatedSnsIOPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId 
2610:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2611:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Disconnect dedicated pin */
2612:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 CapSense_CSDDisconnectSns(curDedicatedSnsIOPtr);
2613:Generated_Source\PSoC4/CapSense_Sensing.c ****                             }
2614:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2615:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2616:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2617:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Disable sensor */
2618:Generated_Source\PSoC4/CapSense_Sensing.c ****                             CapSense_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
2619:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2620:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2621:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Disable sensor */
2622:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
 1450              		.loc 1 2622 0 discriminator 3
 1451 001e E300     		lsls	r3, r4, #3
 1452 0020 1B1B     		subs	r3, r3, r4
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 76


 1453 0022 9800     		lsls	r0, r3, #2
 1454 0024 3018     		adds	r0, r6, r0
 1455 0026 FFF7FEFF 		bl	CapSense_CSDDisconnectSns
 1456              	.LVL150:
2594:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1457              		.loc 1 2594 0 discriminator 3
 1458 002a 0134     		adds	r4, r4, #1
 1459              	.LVL151:
 1460              	.L119:
2594:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1461              		.loc 1 2594 0 is_stmt 0 discriminator 1
 1462 002c 2C23     		movs	r3, #44
 1463 002e 6B43     		muls	r3, r5
 1464 0030 044A     		ldr	r2, .L122
 1465 0032 D318     		adds	r3, r2, r3
 1466 0034 1B7E     		ldrb	r3, [r3, #24]
 1467 0036 9C42     		cmp	r4, r3
 1468 0038 F1D3     		bcc	.L120
 1469              	.LVL152:
 1470              	.L118:
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1471              		.loc 1 2585 0 is_stmt 1 discriminator 2
 1472 003a 0135     		adds	r5, r5, #1
 1473              	.LVL153:
 1474              	.L117:
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1475              		.loc 1 2585 0 is_stmt 0 discriminator 1
 1476 003c 032D     		cmp	r5, #3
 1477 003e E2D9     		bls	.L121
2623:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
2624:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2625:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2626:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2627:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1478              		.loc 1 2627 0 is_stmt 1
 1479              		@ sp needed
 1480              	.LVL154:
 1481 0040 70BD     		pop	{r4, r5, r6, pc}
 1482              	.L123:
 1483 0042 C046     		.align	2
 1484              	.L122:
 1485 0044 00000000 		.word	CapSense_dsFlash
 1486              		.cfi_endproc
 1487              	.LFE24:
 1488              		.size	CapSense_SsClearCSDSensors, .-CapSense_SsClearCSDSensors
 1489              		.section	.text.CapSense_SsCSDGetColSnsClkDivider,"ax",%progbits
 1490              		.align	2
 1491              		.global	CapSense_SsCSDGetColSnsClkDivider
 1492              		.code	16
 1493              		.thumb_func
 1494              		.type	CapSense_SsCSDGetColSnsClkDivider, %function
 1495              	CapSense_SsCSDGetColSnsClkDivider:
 1496              	.LFB25:
2628:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2629:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2630:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDGetColSnsClkDivider
2631:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 77


2632:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2633:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2634:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2635:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2636:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2637:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2638:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2639:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2640:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  two-dimension widgets.
2641:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2642:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
2643:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2644:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2645:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2646:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2647:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
2648:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2649:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2650:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 CapSense_SsCSDGetColSnsClkDivider(uint32 widgetId)
2651:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1497              		.loc 1 2651 0
 1498              		.cfi_startproc
 1499              		@ args = 0, pretend = 0, frame = 0
 1500              		@ frame_needed = 0, uses_anonymous_args = 0
 1501              		@ link register save eliminated.
 1502              	.LVL155:
2652:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 retVal;
2653:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2654:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get sense divider based on configuration */
2655:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2656:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2657:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2658:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1503              		.loc 1 2658 0
 1504 0000 2C23     		movs	r3, #44
 1505 0002 5843     		muls	r0, r3
 1506              	.LVL156:
 1507 0004 024B     		ldr	r3, .L125
 1508 0006 1818     		adds	r0, r3, r0
 1509 0008 4368     		ldr	r3, [r0, #4]
 1510              	.LVL157:
2659:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2660:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2661:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
 1511              		.loc 1 2661 0
 1512 000a 5889     		ldrh	r0, [r3, #10]
 1513              	.LVL158:
2662:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2663:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)CapSense_dsRam.snsCsdClk;
2664:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2665:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2666:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2667:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2668:Generated_Source\PSoC4/CapSense_Sensing.c ****         return (retVal);
2669:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1514              		.loc 1 2669 0
 1515              		@ sp needed
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 78


 1516 000c 7047     		bx	lr
 1517              	.L126:
 1518 000e C046     		.align	2
 1519              	.L125:
 1520 0010 00000000 		.word	CapSense_dsFlash
 1521              		.cfi_endproc
 1522              	.LFE25:
 1523              		.size	CapSense_SsCSDGetColSnsClkDivider, .-CapSense_SsCSDGetColSnsClkDivider
 1524              		.section	.text.CapSense_SsCSDCalcPrsSize,"ax",%progbits
 1525              		.align	2
 1526              		.global	CapSense_SsCSDCalcPrsSize
 1527              		.code	16
 1528              		.thumb_func
 1529              		.type	CapSense_SsCSDCalcPrsSize, %function
 1530              	CapSense_SsCSDCalcPrsSize:
 1531              	.LFB26:
2670:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2671:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2672:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2673:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2674:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDGetRowSnsClkDivider
2675:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2676:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2677:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2678:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2679:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2680:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2681:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2682:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2683:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2684:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  two-dimension widgets.
2685:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2686:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2687:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2688:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2689:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return
2690:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2691:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
2692:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2693:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2694:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 CapSense_SsCSDGetRowSnsClkDivider(uint32 widgetId)
2695:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2696:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 retVal;
2697:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2698:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Get sense divider based on configuration */
2699:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2700:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2701:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2702:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
2703:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2704:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2705:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
2706:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2707:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = (uint32)CapSense_dsRam.snsCsdClk;
2708:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2709:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2710:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 79


2711:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2712:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (retVal);
2713:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2714:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2715:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2716:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2717:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2718:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2719:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDCalcPrsSize
2720:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2721:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2722:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2723:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2724:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2725:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2726:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2727:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  requirements:
2728:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2729:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2730:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2731:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2732:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  resolution The widget resolution.
2733:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2734:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2735:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2736:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2737:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 CapSense_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2738:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1532              		.loc 1 2738 0
 1533              		.cfi_startproc
 1534              		@ args = 0, pretend = 0, frame = 0
 1535              		@ frame_needed = 0, uses_anonymous_args = 0
 1536              		@ link register save eliminated.
 1537              	.LVL159:
2739:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 prsSize;
2740:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 modClkDivider = 1u;
2741:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2742:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if ((CapSense_ENABLE != CapSense_CSDV2) && \
2743:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK))
2744:Generated_Source\PSoC4/CapSense_Sensing.c ****                     modClkDivider = (uint32)CapSense_dsRam.modCsdClk;
2745:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2746:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2747:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((snsClkDivider * CapSense_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu <<
 1538              		.loc 1 2747 0
 1539 0000 0203     		lsls	r2, r0, #12
 1540 0002 121A     		subs	r2, r2, r0
 1541 0004 0123     		movs	r3, #1
 1542 0006 8B40     		lsls	r3, r3, r1
 1543 0008 013B     		subs	r3, r3, #1
 1544 000a 9A42     		cmp	r2, r3
 1545 000c 05D9     		bls	.L129
2748:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2749:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS12 mode */
2750:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_12_CONFIG;
2751:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2752:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if ((snsClkDivider * CapSense_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x00000001L
 1546              		.loc 1 2752 0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 80


 1547 000e 0202     		lsls	r2, r0, #8
 1548 0010 101A     		subs	r0, r2, r0
 1549              	.LVL160:
 1550 0012 8342     		cmp	r3, r0
 1551 0014 03D3     		bcc	.L130
2753:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2754:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS8 mode */
2755:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_8_CONFIG;
 1552              		.loc 1 2755 0
 1553 0016 0520     		movs	r0, #5
 1554 0018 02E0     		b	.L128
 1555              	.LVL161:
 1556              	.L129:
2750:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1557              		.loc 1 2750 0
 1558 001a 0620     		movs	r0, #6
 1559              	.LVL162:
 1560 001c 00E0     		b	.L128
 1561              	.L130:
2756:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2757:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
2758:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2759:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set Direct clock mode */
2760:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_CLK_SOURCE_DIRECT;
 1562              		.loc 1 2760 0
 1563 001e 0020     		movs	r0, #0
 1564              	.L128:
 1565              	.LVL163:
2761:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2762:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2763:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (uint8)prsSize;
 1566              		.loc 1 2763 0
 1567 0020 C0B2     		uxtb	r0, r0
 1568              	.LVL164:
2764:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1569              		.loc 1 2764 0
 1570              		@ sp needed
 1571 0022 7047     		bx	lr
 1572              		.cfi_endproc
 1573              	.LFE26:
 1574              		.size	CapSense_SsCSDCalcPrsSize, .-CapSense_SsCSDCalcPrsSize
 1575              		.section	.text.CapSense_SsSetWidgetSenseClkSrc,"ax",%progbits
 1576              		.align	2
 1577              		.code	16
 1578              		.thumb_func
 1579              		.type	CapSense_SsSetWidgetSenseClkSrc, %function
 1580              	CapSense_SsSetWidgetSenseClkSrc:
 1581              	.LFB20:
2241:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
 1582              		.loc 1 2241 0
 1583              		.cfi_startproc
 1584              		@ args = 0, pretend = 0, frame = 0
 1585              		@ frame_needed = 0, uses_anonymous_args = 0
 1586              	.LVL165:
 1587 0000 70B5     		push	{r4, r5, r6, lr}
 1588              		.cfi_def_cfa_offset 16
 1589              		.cfi_offset 4, -16
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 81


 1590              		.cfi_offset 5, -12
 1591              		.cfi_offset 6, -8
 1592              		.cfi_offset 14, -4
 1593 0002 0E00     		movs	r6, r1
2253:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1594              		.loc 1 2253 0
 1595 0004 FFF7FEFF 		bl	CapSense_SsCSDGetColSnsClkDivider
 1596              	.LVL166:
 1597 0008 0500     		movs	r5, r0
 1598              	.LVL167:
2256:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
 1599              		.loc 1 2256 0
 1600 000a 3188     		ldrh	r1, [r6]
 1601 000c 0022     		movs	r2, #0
 1602 000e FFF7FEFF 		bl	CapSense_SsCSDGetNumberOfConversions
 1603              	.LVL168:
 1604 0012 0100     		movs	r1, r0
 1605              	.LVL169:
2258:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
 1606              		.loc 1 2258 0
 1607 0014 2800     		movs	r0, r5
 1608              	.LVL170:
 1609 0016 FFF7FEFF 		bl	CapSense_SsCalcLfsrSize
 1610              	.LVL171:
 1611 001a 041E     		subs	r4, r0, #0
 1612              	.LVL172:
2259:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1613              		.loc 1 2259 0
 1614 001c 04D1     		bne	.L132
2265:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1615              		.loc 1 2265 0
 1616 001e 6800     		lsls	r0, r5, #1
 1617              	.LVL173:
 1618 0020 3188     		ldrh	r1, [r6]
 1619 0022 FFF7FEFF 		bl	CapSense_SsCSDCalcPrsSize
 1620              	.LVL174:
 1621 0026 0400     		movs	r4, r0
 1622              	.LVL175:
 1623              	.L132:
2267:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
 1624              		.loc 1 2267 0
 1625 0028 2100     		movs	r1, r4
 1626 002a 2800     		movs	r0, r5
 1627 002c FFF7FEFF 		bl	CapSense_SsCalcLfsrScale
 1628              	.LVL176:
2282:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1629              		.loc 1 2282 0
 1630 0030 0001     		lsls	r0, r0, #4
 1631              	.LVL177:
 1632 0032 C0B2     		uxtb	r0, r0
 1633 0034 2043     		orrs	r0, r4
 1634 0036 3073     		strb	r0, [r6, #12]
2317:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1635              		.loc 1 2317 0
 1636              		@ sp needed
 1637              	.LVL178:
 1638              	.LVL179:
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 82


 1639              	.LVL180:
 1640 0038 70BD     		pop	{r4, r5, r6, pc}
 1641              		.cfi_endproc
 1642              	.LFE20:
 1643              		.size	CapSense_SsSetWidgetSenseClkSrc, .-CapSense_SsSetWidgetSenseClkSrc
 1644 003a C046     		.section	.text.CapSense_SsAutoTune,"ax",%progbits
 1645              		.align	2
 1646              		.global	CapSense_SsAutoTune
 1647              		.code	16
 1648              		.thumb_func
 1649              		.type	CapSense_SsAutoTune, %function
 1650              	CapSense_SsAutoTune:
 1651              	.LFB18:
1578:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
 1652              		.loc 1 1578 0
 1653              		.cfi_startproc
 1654              		@ args = 0, pretend = 0, frame = 48
 1655              		@ frame_needed = 0, uses_anonymous_args = 0
 1656 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1657              		.cfi_def_cfa_offset 20
 1658              		.cfi_offset 4, -20
 1659              		.cfi_offset 5, -16
 1660              		.cfi_offset 6, -12
 1661              		.cfi_offset 7, -8
 1662              		.cfi_offset 14, -4
 1663 0002 8DB0     		sub	sp, sp, #52
 1664              		.cfi_def_cfa_offset 72
 1665              	.LVL181:
1592:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.vRef = CapSense_CSD_VREF_MV;
 1666              		.loc 1 1592 0
 1667 0004 01AC     		add	r4, sp, #4
 1668 0006 FA23     		movs	r3, #250
 1669 0008 9B00     		lsls	r3, r3, #2
 1670 000a 2380     		strh	r3, [r4]
1593:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_CSD_IDAC_GAIN_VALUE_NA;
 1671              		.loc 1 1593 0
 1672 000c 4C4B     		ldr	r3, .L148
 1673 000e 6380     		strh	r3, [r4, #2]
1594:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1674              		.loc 1 1594 0
 1675 0010 7C33     		adds	r3, r3, #124
 1676 0012 FF33     		adds	r3, r3, #255
 1677 0014 A380     		strh	r3, [r4, #4]
1599:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif ((CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) && (CapSense_DISABLE == CY_PSOC4_400
 1678              		.loc 1 1599 0
 1679 0016 4B4B     		ldr	r3, .L148+4
 1680 0018 997F     		ldrb	r1, [r3, #30]
 1681 001a 4B48     		ldr	r0, .L148+8
 1682 001c FFF7FEFF 		bl	__aeabi_uidiv
 1683              	.LVL182:
 1684 0020 A081     		strh	r0, [r4, #12]
1614:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_CSX_EN) */
 1685              		.loc 1 1614 0
 1686 0022 FFF7FEFF 		bl	CapSense_SsCSDInitialize
 1687              	.LVL183:
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1688              		.loc 1 1625 0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 83


 1689 0026 0025     		movs	r5, #0
1579:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
 1690              		.loc 1 1579 0
 1691 0028 0026     		movs	r6, #0
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1692              		.loc 1 1625 0
 1693 002a 43E0     		b	.L134
 1694              	.LVL184:
 1695              	.L140:
1628:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1696              		.loc 1 1628 0
 1697 002c 2C23     		movs	r3, #44
 1698 002e 6B43     		muls	r3, r5
 1699 0030 464A     		ldr	r2, .L148+12
 1700 0032 D318     		adds	r3, r2, r3
 1701 0034 DB7E     		ldrb	r3, [r3, #27]
1627:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
 1702              		.loc 1 1627 0
 1703 0036 012B     		cmp	r3, #1
 1704 0038 37D1     		bne	.L135
1630:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
 1705              		.loc 1 1630 0
 1706 003a 2B33     		adds	r3, r3, #43
 1707 003c 6B43     		muls	r3, r5
 1708 003e D318     		adds	r3, r2, r3
 1709 0040 5C68     		ldr	r4, [r3, #4]
 1710              	.LVL185:
1634:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1711              		.loc 1 1634 0
 1712 0042 0C23     		movs	r3, #12
 1713 0044 2380     		strh	r3, [r4]
1637:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->snsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / CapSense_CALIB
 1714              		.loc 1 1637 0
 1715 0046 0023     		movs	r3, #0
 1716 0048 2373     		strb	r3, [r4, #12]
1638:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
 1717              		.loc 1 1638 0
 1718 004a 01AF     		add	r7, sp, #4
 1719 004c B889     		ldrh	r0, [r7, #12]
 1720 004e 4049     		ldr	r1, .L148+16
 1721 0050 FFF7FEFF 		bl	__aeabi_uidiv
 1722              	.LVL186:
 1723 0054 6081     		strh	r0, [r4, #10]
1649:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1724              		.loc 1 1649 0
 1725 0056 5521     		movs	r1, #85
 1726 0058 2800     		movs	r0, r5
 1727 005a FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1728              	.LVL187:
1698:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1729              		.loc 1 1698 0
 1730 005e 2300     		movs	r3, r4
 1731 0060 0A33     		adds	r3, r3, #10
 1732 0062 3B61     		str	r3, [r7, #16]
1701:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1733              		.loc 1 1701 0
 1734 0064 3B4B     		ldr	r3, .L148+20
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 84


 1735 0066 1B78     		ldrb	r3, [r3]
 1736 0068 3B76     		strb	r3, [r7, #24]
1704:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ((uint32)(0x01uL << CapSense_CALIBRATION_RESOLUTION) - 1u));
 1737              		.loc 1 1704 0
 1738 006a 3B4B     		ldr	r3, .L148+24
 1739 006c 1888     		ldrh	r0, [r3]
 1740 006e FA23     		movs	r3, #250
 1741 0070 9B00     		lsls	r3, r3, #2
 1742 0072 5843     		muls	r0, r3
 1743 0074 3949     		ldr	r1, .L148+28
 1744 0076 FFF7FEFF 		bl	__aeabi_uidiv
 1745              	.LVL188:
 1746 007a F881     		strh	r0, [r7, #14]
1708:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1747              		.loc 1 1708 0
 1748 007c 3800     		movs	r0, r7
 1749 007e FFF7FEFF 		bl	SmartSense_TunePrescalers
 1750              	.LVL189:
1710:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1751              		.loc 1 1710 0
 1752 0082 374B     		ldr	r3, .L148+32
 1753 0084 9842     		cmp	r0, r3
 1754 0086 03D9     		bls	.L137
1712:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1755              		.loc 1 1712 0
 1756 0088 0626     		movs	r6, #6
 1757              	.LVL190:
 1758 008a 01E0     		b	.L137
 1759              	.LVL191:
 1760              	.L138:
1722:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1761              		.loc 1 1722 0
 1762 008c 5B00     		lsls	r3, r3, #1
 1763 008e 6381     		strh	r3, [r4, #10]
 1764              	.LVL192:
 1765              	.L137:
1719:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
 1766              		.loc 1 1719 0
 1767 0090 01AB     		add	r3, sp, #4
 1768 0092 9989     		ldrh	r1, [r3, #12]
 1769 0094 6389     		ldrh	r3, [r4, #10]
 1770 0096 334A     		ldr	r2, .L148+36
 1771 0098 5A43     		muls	r2, r3
 1772 009a 9142     		cmp	r1, r2
 1773 009c F6D8     		bhi	.L138
1719:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
 1774              		.loc 1 1719 0 is_stmt 0 discriminator 1
 1775 009e 032B     		cmp	r3, #3
 1776 00a0 F4D9     		bls	.L138
1737:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1777              		.loc 1 1737 0 is_stmt 1
 1778 00a2 AB00     		lsls	r3, r5, #2
 1779 00a4 08AA     		add	r2, sp, #32
 1780 00a6 9850     		str	r0, [r3, r2]
 1781 00a8 03E0     		b	.L139
 1782              	.LVL193:
 1783              	.L135:
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 85


1754:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 1784              		.loc 1 1754 0
 1785 00aa AB00     		lsls	r3, r5, #2
 1786 00ac 0121     		movs	r1, #1
 1787 00ae 08AA     		add	r2, sp, #32
 1788 00b0 9950     		str	r1, [r3, r2]
 1789              	.L139:
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1790              		.loc 1 1625 0 discriminator 2
 1791 00b2 0135     		adds	r5, r5, #1
 1792              	.LVL194:
 1793              	.L134:
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1794              		.loc 1 1625 0 is_stmt 0 discriminator 1
 1795 00b4 032D     		cmp	r5, #3
 1796 00b6 B9D9     		bls	.L140
 1797 00b8 0024     		movs	r4, #0
 1798 00ba 23E0     		b	.L141
 1799              	.LVL195:
 1800              	.L143:
1769:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1801              		.loc 1 1769 0 is_stmt 1
 1802 00bc 2C23     		movs	r3, #44
 1803 00be 6343     		muls	r3, r4
 1804 00c0 224A     		ldr	r2, .L148+12
 1805 00c2 D318     		adds	r3, r2, r3
 1806 00c4 DB7E     		ldrb	r3, [r3, #27]
1768:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
 1807              		.loc 1 1768 0
 1808 00c6 012B     		cmp	r3, #1
 1809 00c8 1BD1     		bne	.L142
1771:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
 1810              		.loc 1 1771 0
 1811 00ca 2B33     		adds	r3, r3, #43
 1812 00cc 6343     		muls	r3, r4
 1813 00ce D318     		adds	r3, r2, r3
 1814 00d0 5D68     		ldr	r5, [r3, #4]
 1815              	.LVL196:
1775:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1816              		.loc 1 1775 0
 1817 00d2 5521     		movs	r1, #85
 1818 00d4 2000     		movs	r0, r4
 1819 00d6 FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1820              	.LVL197:
 1821 00da 0643     		orrs	r6, r0
 1822              	.LVL198:
1778:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1823              		.loc 1 1778 0
 1824 00dc 2B00     		movs	r3, r5
 1825 00de 0A33     		adds	r3, r3, #10
 1826 00e0 01A8     		add	r0, sp, #4
 1827 00e2 0361     		str	r3, [r0, #16]
1781:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1828              		.loc 1 1781 0
 1829 00e4 A300     		lsls	r3, r4, #2
 1830 00e6 08AA     		add	r2, sp, #32
 1831 00e8 9B58     		ldr	r3, [r3, r2]
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 86


 1832 00ea 8360     		str	r3, [r0, #8]
1784:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1833              		.loc 1 1784 0
 1834 00ec 194B     		ldr	r3, .L148+20
 1835 00ee 1B78     		ldrb	r3, [r3]
 1836 00f0 0376     		strb	r3, [r0, #24]
1807:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1837              		.loc 1 1807 0
 1838 00f2 EB89     		ldrh	r3, [r5, #14]
 1839 00f4 C380     		strh	r3, [r0, #6]
1810:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1840              		.loc 1 1810 0
 1841 00f6 2B00     		movs	r3, r5
 1842 00f8 1033     		adds	r3, r3, #16
 1843 00fa 4361     		str	r3, [r0, #20]
1813:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1844              		.loc 1 1813 0
 1845 00fc FFF7FEFF 		bl	SmartSense_TuneSensitivity
 1846              	.LVL199:
 1847 0100 2880     		strh	r0, [r5]
 1848              	.LVL200:
 1849              	.L142:
1766:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1850              		.loc 1 1766 0 discriminator 2
 1851 0102 0134     		adds	r4, r4, #1
 1852              	.LVL201:
 1853              	.L141:
1766:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1854              		.loc 1 1766 0 is_stmt 0 discriminator 1
 1855 0104 032C     		cmp	r4, #3
 1856 0106 D9D9     		bls	.L143
 1857 0108 0024     		movs	r4, #0
 1858              	.LVL202:
 1859 010a 13E0     		b	.L144
 1860              	.LVL203:
 1861              	.L146:
1828:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1862              		.loc 1 1828 0 is_stmt 1
 1863 010c 2C23     		movs	r3, #44
 1864 010e 6343     		muls	r3, r4
 1865 0110 0E4A     		ldr	r2, .L148+12
 1866 0112 D318     		adds	r3, r2, r3
 1867 0114 DB7E     		ldrb	r3, [r3, #27]
1827:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
 1868              		.loc 1 1827 0
 1869 0116 012B     		cmp	r3, #1
 1870 0118 0BD1     		bne	.L145
1830:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
 1871              		.loc 1 1830 0
 1872 011a 2B33     		adds	r3, r3, #43
 1873 011c 6343     		muls	r3, r4
 1874 011e D318     		adds	r3, r2, r3
 1875 0120 5968     		ldr	r1, [r3, #4]
 1876              	.LVL204:
1833:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1877              		.loc 1 1833 0
 1878 0122 2000     		movs	r0, r4
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 87


 1879 0124 FFF7FEFF 		bl	CapSense_SsSetWidgetSenseClkSrc
 1880              	.LVL205:
1836:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1881              		.loc 1 1836 0
 1882 0128 5521     		movs	r1, #85
 1883 012a 2000     		movs	r0, r4
 1884 012c FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1885              	.LVL206:
 1886 0130 0643     		orrs	r6, r0
 1887              	.LVL207:
 1888              	.L145:
1825:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1889              		.loc 1 1825 0 discriminator 2
 1890 0132 0134     		adds	r4, r4, #1
 1891              	.LVL208:
 1892              	.L144:
1825:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1893              		.loc 1 1825 0 is_stmt 0 discriminator 1
 1894 0134 032C     		cmp	r4, #3
 1895 0136 E9D9     		bls	.L146
1845:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) */
 1896              		.loc 1 1845 0 is_stmt 1
 1897 0138 3000     		movs	r0, r6
 1898 013a 0DB0     		add	sp, sp, #52
 1899              		@ sp needed
 1900              	.LVL209:
 1901              	.LVL210:
 1902 013c F0BD     		pop	{r4, r5, r6, r7, pc}
 1903              	.L149:
 1904 013e C046     		.align	2
 1905              	.L148:
 1906 0140 E5070000 		.word	2021
 1907 0144 00000000 		.word	CapSense_dsRam
 1908 0148 C05D0000 		.word	24000
 1909 014c 00000000 		.word	CapSense_dsFlash
 1910 0150 DC050000 		.word	1500
 1911 0154 00000000 		.word	CapSense_calibratedIdac
 1912 0158 00000000 		.word	CapSense_calibratedRawcount
 1913 015c FF0F0000 		.word	4095
 1914 0160 870D0100 		.word	68999
 1915 0164 70170000 		.word	6000
 1916              		.cfi_endproc
 1917              	.LFE18:
 1918              		.size	CapSense_SsAutoTune, .-CapSense_SsAutoTune
 1919              		.section	.text.CapSense_SsInitializeSourceSenseClk,"ax",%progbits
 1920              		.align	2
 1921              		.global	CapSense_SsInitializeSourceSenseClk
 1922              		.code	16
 1923              		.thumb_func
 1924              		.type	CapSense_SsInitializeSourceSenseClk, %function
 1925              	CapSense_SsInitializeSourceSenseClk:
 1926              	.LFB19:
2188:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 1927              		.loc 1 2188 0
 1928              		.cfi_startproc
 1929              		@ args = 0, pretend = 0, frame = 0
 1930              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 88


 1931 0000 10B5     		push	{r4, lr}
 1932              		.cfi_def_cfa_offset 8
 1933              		.cfi_offset 4, -8
 1934              		.cfi_offset 14, -4
 1935              	.LVL211:
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1936              		.loc 1 2192 0
 1937 0002 0024     		movs	r4, #0
 1938 0004 12E0     		b	.L151
 1939              	.LVL212:
 1940              	.L155:
2194:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1941              		.loc 1 2194 0
 1942 0006 2C23     		movs	r3, #44
 1943 0008 6343     		muls	r3, r4
 1944 000a 0A4A     		ldr	r2, .L156
 1945 000c D318     		adds	r3, r2, r3
 1946 000e 5968     		ldr	r1, [r3, #4]
 1947              	.LVL213:
2196:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1948              		.loc 1 2196 0
 1949 0010 DB7E     		ldrb	r3, [r3, #27]
 1950 0012 012B     		cmp	r3, #1
 1951 0014 02D0     		beq	.L153
 1952 0016 022B     		cmp	r3, #2
 1953 0018 04D0     		beq	.L154
 1954 001a 06E0     		b	.L152
 1955              	.L153:
2200:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 1956              		.loc 1 2200 0
 1957 001c 2000     		movs	r0, r4
 1958 001e FFF7FEFF 		bl	CapSense_SsSetWidgetSenseClkSrc
 1959              	.LVL214:
2201:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1960              		.loc 1 2201 0
 1961 0022 02E0     		b	.L152
 1962              	.LVL215:
 1963              	.L154:
2205:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 1964              		.loc 1 2205 0
 1965 0024 2000     		movs	r0, r4
 1966 0026 FFF7FEFF 		bl	CapSense_SsSetWidgetTxClkSrc
 1967              	.LVL216:
 1968              	.L152:
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1969              		.loc 1 2192 0 discriminator 2
 1970 002a 0134     		adds	r4, r4, #1
 1971              	.LVL217:
 1972              	.L151:
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1973              		.loc 1 2192 0 is_stmt 0 discriminator 1
 1974 002c 032C     		cmp	r4, #3
 1975 002e EAD9     		bls	.L155
2215:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
 1976              		.loc 1 2215 0 is_stmt 1
 1977              		@ sp needed
 1978              	.LVL218:
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 89


 1979 0030 10BD     		pop	{r4, pc}
 1980              	.L157:
 1981 0032 C046     		.align	2
 1982              	.L156:
 1983 0034 00000000 		.word	CapSense_dsFlash
 1984              		.cfi_endproc
 1985              	.LFE19:
 1986              		.size	CapSense_SsInitializeSourceSenseClk, .-CapSense_SsInitializeSourceSenseClk
 1987              		.section	.text.CapSense_SsInitialize,"ax",%progbits
 1988              		.align	2
 1989              		.global	CapSense_SsInitialize
 1990              		.code	16
 1991              		.thumb_func
 1992              		.type	CapSense_SsInitialize, %function
 1993              	CapSense_SsInitialize:
 1994              	.LFB5:
 517:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 1995              		.loc 1 517 0
 1996              		.cfi_startproc
 1997              		@ args = 0, pretend = 0, frame = 0
 1998              		@ frame_needed = 0, uses_anonymous_args = 0
 1999 0000 10B5     		push	{r4, lr}
 2000              		.cfi_def_cfa_offset 8
 2001              		.cfi_offset 4, -8
 2002              		.cfi_offset 14, -4
 2003              	.LVL219:
 556:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 2004              		.loc 1 556 0
 2005 0002 FFF7FEFF 		bl	CapSense_SsInitializeSourceSenseClk
 2006              	.LVL220:
 561:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 2007              		.loc 1 561 0
 2008 0006 FFF7FEFF 		bl	CapSense_SsSetIOsInDefaultState
 2009              	.LVL221:
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSD_EN)
 2010              		.loc 1 565 0
 2011 000a 0020     		movs	r0, #0
 2012 000c FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 2013              	.LVL222:
 584:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 2014              		.loc 1 584 0
 2015 0010 0020     		movs	r0, #0
 2016              		@ sp needed
 2017 0012 10BD     		pop	{r4, pc}
 2018              		.cfi_endproc
 2019              	.LFE5:
 2020              		.size	CapSense_SsInitialize, .-CapSense_SsInitialize
 2021              		.section	.text.CapSense_BistDischargeExtCapacitors,"ax",%progbits
 2022              		.align	2
 2023              		.global	CapSense_BistDischargeExtCapacitors
 2024              		.code	16
 2025              		.thumb_func
 2026              		.type	CapSense_BistDischargeExtCapacitors, %function
 2027              	CapSense_BistDischargeExtCapacitors:
 2028              	.LFB27:
2765:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2766:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 90


2767:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2768:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2769:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
2770:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2771:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_BistDischargeExtCapacitors
2772:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2773:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2774:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2775:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors.
2776:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2777:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2778:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors by connection them
2779:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects 
2780:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
2781:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses 
2782:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
2783:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2784:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2785:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_BistDischargeExtCapacitors(void)
2786:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 2029              		.loc 1 2786 0
 2030              		.cfi_startproc
 2031              		@ args = 0, pretend = 0, frame = 0
 2032              		@ frame_needed = 0, uses_anonymous_args = 0
 2033 0000 70B5     		push	{r4, r5, r6, lr}
 2034              		.cfi_def_cfa_offset 16
 2035              		.cfi_offset 4, -16
 2036              		.cfi_offset 5, -12
 2037              		.cfi_offset 6, -8
 2038              		.cfi_offset 14, -4
2787:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
2788:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8  interruptState;
2789:Generated_Source\PSoC4/CapSense_Sensing.c ****         
2790:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Ext Cap from AMUXBUS-A using HSIOM registers */
2791:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 2039              		.loc 1 2791 0
 2040 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 2041              	.LVL223:
2792:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR);
 2042              		.loc 1 2792 0
 2043 0006 134A     		ldr	r2, .L160
 2044 0008 1168     		ldr	r1, [r2]
 2045              	.LVL224:
2793:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_HSIOM_MASK);
 2046              		.loc 1 2793 0
 2047 000a 134B     		ldr	r3, .L160+4
 2048 000c 0B40     		ands	r3, r1
 2049              	.LVL225:
2794:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
 2050              		.loc 1 2794 0
 2051 000e 1360     		str	r3, [r2]
2795:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 2052              		.loc 1 2795 0
 2053 0010 FFF7FEFF 		bl	CyExitCriticalSection
 2054              	.LVL226:
2796:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2797:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set output port register to 0 to connect to GND */
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 91


2798:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 2055              		.loc 1 2798 0
 2056 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 2057              	.LVL227:
2799:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
 2058              		.loc 1 2799 0
 2059 0018 104A     		ldr	r2, .L160+8
 2060 001a 1368     		ldr	r3, [r2]
 2061              	.LVL228:
2800:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_DR_MASK);
 2062              		.loc 1 2800 0
 2063 001c 0E21     		movs	r1, #14
 2064 001e 8B43     		bics	r3, r1
 2065              	.LVL229:
2801:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
 2066              		.loc 1 2801 0
 2067 0020 1360     		str	r3, [r2]
2802:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 2068              		.loc 1 2802 0
 2069 0022 FFF7FEFF 		bl	CyExitCriticalSection
 2070              	.LVL230:
2803:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2804:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2805:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 2071              		.loc 1 2805 0
 2072 0026 FFF7FEFF 		bl	CyEnterCriticalSection
 2073              	.LVL231:
2806:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
 2074              		.loc 1 2806 0
 2075 002a 0D4C     		ldr	r4, .L160+12
 2076 002c 2368     		ldr	r3, [r4]
 2077              	.LVL232:
2807:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
 2078              		.loc 1 2807 0
 2079 002e 0D4D     		ldr	r5, .L160+16
 2080 0030 2B40     		ands	r3, r5
 2081              	.LVL233:
2808:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (CapSense_EXT_CAP_PC_STRONG_CFG);
 2082              		.loc 1 2808 0
 2083 0032 DB22     		movs	r2, #219
 2084 0034 1201     		lsls	r2, r2, #4
 2085 0036 1343     		orrs	r3, r2
 2086              	.LVL234:
2809:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
 2087              		.loc 1 2809 0
 2088 0038 2360     		str	r3, [r4]
2810:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 2089              		.loc 1 2810 0
 2090 003a FFF7FEFF 		bl	CyExitCriticalSection
 2091              	.LVL235:
2811:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2812:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Delay to discharge external capacitors */
2813:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyDelayUs(CapSense_EXT_CAP_DISCHARGE_TIME);
 2092              		.loc 1 2813 0
 2093 003e 0120     		movs	r0, #1
 2094 0040 FFF7FEFF 		bl	CyDelayUs
 2095              	.LVL236:
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 92


2814:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2815:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2816:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 2096              		.loc 1 2816 0
 2097 0044 FFF7FEFF 		bl	CyEnterCriticalSection
 2098              	.LVL237:
2817:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
 2099              		.loc 1 2817 0
 2100 0048 2368     		ldr	r3, [r4]
 2101              	.LVL238:
2818:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
 2102              		.loc 1 2818 0
 2103 004a 1D40     		ands	r5, r3
 2104              	.LVL239:
2819:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
 2105              		.loc 1 2819 0
 2106 004c 2560     		str	r5, [r4]
2820:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 2107              		.loc 1 2820 0
 2108 004e FFF7FEFF 		bl	CyExitCriticalSection
 2109              	.LVL240:
2821:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 2110              		.loc 1 2821 0
 2111              		@ sp needed
 2112              	.LVL241:
 2113 0052 70BD     		pop	{r4, r5, r6, pc}
 2114              	.L161:
 2115              		.align	2
 2116              	.L160:
 2117 0054 00040240 		.word	1073873920
 2118 0058 0F00FFFF 		.word	-65521
 2119 005c 00040440 		.word	1074004992
 2120 0060 08040440 		.word	1074005000
 2121 0064 07F0FFFF 		.word	-4089
 2122              		.cfi_endproc
 2123              	.LFE27:
 2124              		.size	CapSense_BistDischargeExtCapacitors, .-CapSense_BistDischargeExtCapacitors
 2125              		.comm	CapSense_curSnsIOPtr,4,4
 2126              		.global	CapSense_curFlashWdgtPtr
 2127              		.comm	CapSense_curRamSnsPtr,4,4
 2128              		.global	CapSense_requestScanAllWidget
 2129              		.global	CapSense_sensorIndex
 2130              		.global	CapSense_widgetIndex
 2131              		.global	CapSense_scanFreqIndex
 2132              		.global	CapSense_currentSenseMethod
 2133              		.section	.rodata
 2134              		.type	CapSense_scanFreqIndex, %object
 2135              		.size	CapSense_scanFreqIndex, 1
 2136              	CapSense_scanFreqIndex:
 2137 0018 00       		.space	1
 2138              		.bss
 2139              		.align	2
 2140              		.set	.LANCHOR0,. + 0
 2141              		.type	CapSense_currentSenseMethod, %object
 2142              		.size	CapSense_currentSenseMethod, 1
 2143              	CapSense_currentSenseMethod:
 2144 0000 00       		.space	1
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 93


 2145              		.type	CapSense_requestScanAllWidget, %object
 2146              		.size	CapSense_requestScanAllWidget, 1
 2147              	CapSense_requestScanAllWidget:
 2148 0001 00       		.space	1
 2149              		.type	CapSense_widgetIndex, %object
 2150              		.size	CapSense_widgetIndex, 1
 2151              	CapSense_widgetIndex:
 2152 0002 00       		.space	1
 2153 0003 00       		.space	1
 2154              		.type	CapSense_curFlashWdgtPtr, %object
 2155              		.size	CapSense_curFlashWdgtPtr, 4
 2156              	CapSense_curFlashWdgtPtr:
 2157 0004 00000000 		.space	4
 2158              		.type	CapSense_sensorIndex, %object
 2159              		.size	CapSense_sensorIndex, 1
 2160              	CapSense_sensorIndex:
 2161 0008 00       		.space	1
 2162              		.text
 2163              	.Letext0:
 2164              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 2165              		.file 3 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 2166              		.file 4 "Generated_Source\\PSoC4\\CapSense_SmartSense_LL.h"
 2167              		.file 5 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 2168              		.file 6 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.h"
 2169              		.file 7 "Generated_Source\\PSoC4\\CapSense_SensingCSX_LL.h"
 2170              		.file 8 "Generated_Source\\PSoC4/CyLib.h"
 2171              		.file 9 "Generated_Source\\PSoC4\\CapSense_ISR.h"
 2172              		.section	.debug_info,"",%progbits
 2173              	.Ldebug_info0:
 2174 0000 A9140000 		.4byte	0x14a9
 2175 0004 0400     		.2byte	0x4
 2176 0006 00000000 		.4byte	.Ldebug_abbrev0
 2177 000a 04       		.byte	0x4
 2178 000b 01       		.uleb128 0x1
 2179 000c 79020000 		.4byte	.LASF212
 2180 0010 0C       		.byte	0xc
 2181 0011 BC090000 		.4byte	.LASF213
 2182 0015 F30D0000 		.4byte	.LASF214
 2183 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2184 001d 00000000 		.4byte	0
 2185 0021 00000000 		.4byte	.Ldebug_line0
 2186 0025 02       		.uleb128 0x2
 2187 0026 01       		.byte	0x1
 2188 0027 06       		.byte	0x6
 2189 0028 490C0000 		.4byte	.LASF0
 2190 002c 02       		.uleb128 0x2
 2191 002d 01       		.byte	0x1
 2192 002e 08       		.byte	0x8
 2193 002f 030B0000 		.4byte	.LASF1
 2194 0033 02       		.uleb128 0x2
 2195 0034 02       		.byte	0x2
 2196 0035 05       		.byte	0x5
 2197 0036 BD080000 		.4byte	.LASF2
 2198 003a 02       		.uleb128 0x2
 2199 003b 02       		.byte	0x2
 2200 003c 07       		.byte	0x7
 2201 003d 710C0000 		.4byte	.LASF3
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 94


 2202 0041 02       		.uleb128 0x2
 2203 0042 04       		.byte	0x4
 2204 0043 05       		.byte	0x5
 2205 0044 F5080000 		.4byte	.LASF4
 2206 0048 02       		.uleb128 0x2
 2207 0049 04       		.byte	0x4
 2208 004a 07       		.byte	0x7
 2209 004b 550A0000 		.4byte	.LASF5
 2210 004f 02       		.uleb128 0x2
 2211 0050 08       		.byte	0x8
 2212 0051 05       		.byte	0x5
 2213 0052 E7050000 		.4byte	.LASF6
 2214 0056 02       		.uleb128 0x2
 2215 0057 08       		.byte	0x8
 2216 0058 07       		.byte	0x7
 2217 0059 67030000 		.4byte	.LASF7
 2218 005d 03       		.uleb128 0x3
 2219 005e 04       		.byte	0x4
 2220 005f 05       		.byte	0x5
 2221 0060 696E7400 		.ascii	"int\000"
 2222 0064 02       		.uleb128 0x2
 2223 0065 04       		.byte	0x4
 2224 0066 07       		.byte	0x7
 2225 0067 03010000 		.4byte	.LASF8
 2226 006b 04       		.uleb128 0x4
 2227 006c 040D0000 		.4byte	.LASF9
 2228 0070 02       		.byte	0x2
 2229 0071 E401     		.2byte	0x1e4
 2230 0073 2C000000 		.4byte	0x2c
 2231 0077 04       		.uleb128 0x4
 2232 0078 2F050000 		.4byte	.LASF10
 2233 007c 02       		.byte	0x2
 2234 007d E501     		.2byte	0x1e5
 2235 007f 3A000000 		.4byte	0x3a
 2236 0083 04       		.uleb128 0x4
 2237 0084 03070000 		.4byte	.LASF11
 2238 0088 02       		.byte	0x2
 2239 0089 E601     		.2byte	0x1e6
 2240 008b 48000000 		.4byte	0x48
 2241 008f 02       		.uleb128 0x2
 2242 0090 04       		.byte	0x4
 2243 0091 04       		.byte	0x4
 2244 0092 52020000 		.4byte	.LASF12
 2245 0096 02       		.uleb128 0x2
 2246 0097 08       		.byte	0x8
 2247 0098 04       		.byte	0x4
 2248 0099 0A0D0000 		.4byte	.LASF13
 2249 009d 02       		.uleb128 0x2
 2250 009e 01       		.byte	0x1
 2251 009f 08       		.byte	0x8
 2252 00a0 E4040000 		.4byte	.LASF14
 2253 00a4 04       		.uleb128 0x4
 2254 00a5 FA0A0000 		.4byte	.LASF15
 2255 00a9 02       		.byte	0x2
 2256 00aa 8602     		.2byte	0x286
 2257 00ac 48000000 		.4byte	0x48
 2258 00b0 05       		.uleb128 0x5
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 95


 2259 00b1 6B000000 		.4byte	0x6b
 2260 00b5 04       		.uleb128 0x4
 2261 00b6 DD070000 		.4byte	.LASF16
 2262 00ba 02       		.byte	0x2
 2263 00bb 9002     		.2byte	0x290
 2264 00bd C1000000 		.4byte	0xc1
 2265 00c1 05       		.uleb128 0x5
 2266 00c2 83000000 		.4byte	0x83
 2267 00c6 04       		.uleb128 0x4
 2268 00c7 B6060000 		.4byte	.LASF17
 2269 00cb 02       		.byte	0x2
 2270 00cc A002     		.2byte	0x2a0
 2271 00ce D2000000 		.4byte	0xd2
 2272 00d2 06       		.uleb128 0x6
 2273 00d3 04       		.byte	0x4
 2274 00d4 D8000000 		.4byte	0xd8
 2275 00d8 07       		.uleb128 0x7
 2276 00d9 04       		.uleb128 0x4
 2277 00da 5B0B0000 		.4byte	.LASF18
 2278 00de 03       		.byte	0x3
 2279 00df 2201     		.2byte	0x122
 2280 00e1 77000000 		.4byte	0x77
 2281 00e5 04       		.uleb128 0x4
 2282 00e6 84050000 		.4byte	.LASF19
 2283 00ea 03       		.byte	0x3
 2284 00eb 2601     		.2byte	0x126
 2285 00ed 6B000000 		.4byte	0x6b
 2286 00f1 08       		.uleb128 0x8
 2287 00f2 1C       		.byte	0x1c
 2288 00f3 04       		.byte	0x4
 2289 00f4 2F       		.byte	0x2f
 2290 00f5 72010000 		.4byte	0x172
 2291 00f9 09       		.uleb128 0x9
 2292 00fa CD070000 		.4byte	.LASF20
 2293 00fe 04       		.byte	0x4
 2294 00ff 34       		.byte	0x34
 2295 0100 77000000 		.4byte	0x77
 2296 0104 00       		.byte	0
 2297 0105 09       		.uleb128 0x9
 2298 0106 6E0A0000 		.4byte	.LASF21
 2299 010a 04       		.byte	0x4
 2300 010b 39       		.byte	0x39
 2301 010c 77000000 		.4byte	0x77
 2302 0110 02       		.byte	0x2
 2303 0111 09       		.uleb128 0x9
 2304 0112 56010000 		.4byte	.LASF22
 2305 0116 04       		.byte	0x4
 2306 0117 3E       		.byte	0x3e
 2307 0118 77000000 		.4byte	0x77
 2308 011c 04       		.byte	0x4
 2309 011d 09       		.uleb128 0x9
 2310 011e 97090000 		.4byte	.LASF23
 2311 0122 04       		.byte	0x4
 2312 0123 43       		.byte	0x43
 2313 0124 77000000 		.4byte	0x77
 2314 0128 06       		.byte	0x6
 2315 0129 09       		.uleb128 0x9
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 96


 2316 012a 3F0B0000 		.4byte	.LASF24
 2317 012e 04       		.byte	0x4
 2318 012f 48       		.byte	0x48
 2319 0130 83000000 		.4byte	0x83
 2320 0134 08       		.byte	0x8
 2321 0135 09       		.uleb128 0x9
 2322 0136 7A010000 		.4byte	.LASF25
 2323 013a 04       		.byte	0x4
 2324 013b 4D       		.byte	0x4d
 2325 013c 77000000 		.4byte	0x77
 2326 0140 0C       		.byte	0xc
 2327 0141 09       		.uleb128 0x9
 2328 0142 28040000 		.4byte	.LASF26
 2329 0146 04       		.byte	0x4
 2330 0147 52       		.byte	0x52
 2331 0148 77000000 		.4byte	0x77
 2332 014c 0E       		.byte	0xe
 2333 014d 09       		.uleb128 0x9
 2334 014e 86070000 		.4byte	.LASF27
 2335 0152 04       		.byte	0x4
 2336 0153 57       		.byte	0x57
 2337 0154 72010000 		.4byte	0x172
 2338 0158 10       		.byte	0x10
 2339 0159 09       		.uleb128 0x9
 2340 015a 3F040000 		.4byte	.LASF28
 2341 015e 04       		.byte	0x4
 2342 015f 5C       		.byte	0x5c
 2343 0160 72010000 		.4byte	0x172
 2344 0164 14       		.byte	0x14
 2345 0165 09       		.uleb128 0x9
 2346 0166 2F070000 		.4byte	.LASF29
 2347 016a 04       		.byte	0x4
 2348 016b 61       		.byte	0x61
 2349 016c 6B000000 		.4byte	0x6b
 2350 0170 18       		.byte	0x18
 2351 0171 00       		.byte	0
 2352 0172 06       		.uleb128 0x6
 2353 0173 04       		.byte	0x4
 2354 0174 77000000 		.4byte	0x77
 2355 0178 0A       		.uleb128 0xa
 2356 0179 840C0000 		.4byte	.LASF30
 2357 017d 04       		.byte	0x4
 2358 017e 63       		.byte	0x63
 2359 017f F1000000 		.4byte	0xf1
 2360 0183 08       		.uleb128 0x8
 2361 0184 0C       		.byte	0xc
 2362 0185 04       		.byte	0x4
 2363 0186 6E       		.byte	0x6e
 2364 0187 E0010000 		.4byte	0x1e0
 2365 018b 09       		.uleb128 0x9
 2366 018c 1F0D0000 		.4byte	.LASF31
 2367 0190 04       		.byte	0x4
 2368 0191 73       		.byte	0x73
 2369 0192 77000000 		.4byte	0x77
 2370 0196 00       		.byte	0
 2371 0197 09       		.uleb128 0x9
 2372 0198 260D0000 		.4byte	.LASF32
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 97


 2373 019c 04       		.byte	0x4
 2374 019d 77       		.byte	0x77
 2375 019e 77000000 		.4byte	0x77
 2376 01a2 02       		.byte	0x2
 2377 01a3 09       		.uleb128 0x9
 2378 01a4 2D0D0000 		.4byte	.LASF33
 2379 01a8 04       		.byte	0x4
 2380 01a9 7B       		.byte	0x7b
 2381 01aa 77000000 		.4byte	0x77
 2382 01ae 04       		.byte	0x4
 2383 01af 09       		.uleb128 0x9
 2384 01b0 340D0000 		.4byte	.LASF34
 2385 01b4 04       		.byte	0x4
 2386 01b5 7F       		.byte	0x7f
 2387 01b6 77000000 		.4byte	0x77
 2388 01ba 06       		.byte	0x6
 2389 01bb 09       		.uleb128 0x9
 2390 01bc 3B0D0000 		.4byte	.LASF35
 2391 01c0 04       		.byte	0x4
 2392 01c1 83       		.byte	0x83
 2393 01c2 77000000 		.4byte	0x77
 2394 01c6 08       		.byte	0x8
 2395 01c7 09       		.uleb128 0x9
 2396 01c8 420D0000 		.4byte	.LASF36
 2397 01cc 04       		.byte	0x4
 2398 01cd 87       		.byte	0x87
 2399 01ce 6B000000 		.4byte	0x6b
 2400 01d2 0A       		.byte	0xa
 2401 01d3 09       		.uleb128 0x9
 2402 01d4 490D0000 		.4byte	.LASF37
 2403 01d8 04       		.byte	0x4
 2404 01d9 8B       		.byte	0x8b
 2405 01da 6B000000 		.4byte	0x6b
 2406 01de 0B       		.byte	0xb
 2407 01df 00       		.byte	0
 2408 01e0 0A       		.uleb128 0xa
 2409 01e1 A8040000 		.4byte	.LASF38
 2410 01e5 04       		.byte	0x4
 2411 01e6 8C       		.byte	0x8c
 2412 01e7 83010000 		.4byte	0x183
 2413 01eb 0B       		.uleb128 0xb
 2414 01ec 01       		.byte	0x1
 2415 01ed 2C000000 		.4byte	0x2c
 2416 01f1 05       		.byte	0x5
 2417 01f2 6F       		.byte	0x6f
 2418 01f3 16020000 		.4byte	0x216
 2419 01f7 0C       		.uleb128 0xc
 2420 01f8 EE000000 		.4byte	.LASF39
 2421 01fc 00       		.byte	0
 2422 01fd 0C       		.uleb128 0xc
 2423 01fe 040A0000 		.4byte	.LASF40
 2424 0202 01       		.byte	0x1
 2425 0203 0C       		.uleb128 0xc
 2426 0204 17090000 		.4byte	.LASF41
 2427 0208 02       		.byte	0x2
 2428 0209 0C       		.uleb128 0xc
 2429 020a 840B0000 		.4byte	.LASF42
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 98


 2430 020e 03       		.byte	0x3
 2431 020f 0C       		.uleb128 0xc
 2432 0210 A5070000 		.4byte	.LASF43
 2433 0214 04       		.byte	0x4
 2434 0215 00       		.byte	0
 2435 0216 0A       		.uleb128 0xa
 2436 0217 BD050000 		.4byte	.LASF44
 2437 021b 05       		.byte	0x5
 2438 021c 75       		.byte	0x75
 2439 021d EB010000 		.4byte	0x1eb
 2440 0221 08       		.uleb128 0x8
 2441 0222 12       		.byte	0x12
 2442 0223 05       		.byte	0x5
 2443 0224 8D       		.byte	0x8d
 2444 0225 BA020000 		.4byte	0x2ba
 2445 0229 09       		.uleb128 0x9
 2446 022a 59050000 		.4byte	.LASF45
 2447 022e 05       		.byte	0x5
 2448 022f 92       		.byte	0x92
 2449 0230 77000000 		.4byte	0x77
 2450 0234 00       		.byte	0
 2451 0235 09       		.uleb128 0x9
 2452 0236 CB0A0000 		.4byte	.LASF46
 2453 023a 05       		.byte	0x5
 2454 023b 97       		.byte	0x97
 2455 023c D9000000 		.4byte	0xd9
 2456 0240 02       		.byte	0x2
 2457 0241 09       		.uleb128 0x9
 2458 0242 DC040000 		.4byte	.LASF47
 2459 0246 05       		.byte	0x5
 2460 0247 9C       		.byte	0x9c
 2461 0248 6B000000 		.4byte	0x6b
 2462 024c 04       		.byte	0x4
 2463 024d 09       		.uleb128 0x9
 2464 024e A2060000 		.4byte	.LASF48
 2465 0252 05       		.byte	0x5
 2466 0253 A1       		.byte	0xa1
 2467 0254 6B000000 		.4byte	0x6b
 2468 0258 05       		.byte	0x5
 2469 0259 09       		.uleb128 0x9
 2470 025a 46040000 		.4byte	.LASF49
 2471 025e 05       		.byte	0x5
 2472 025f A7       		.byte	0xa7
 2473 0260 6B000000 		.4byte	0x6b
 2474 0264 06       		.byte	0x6
 2475 0265 09       		.uleb128 0x9
 2476 0266 16060000 		.4byte	.LASF50
 2477 026a 05       		.byte	0x5
 2478 026b AD       		.byte	0xad
 2479 026c 6B000000 		.4byte	0x6b
 2480 0270 07       		.byte	0x7
 2481 0271 09       		.uleb128 0x9
 2482 0272 6A040000 		.4byte	.LASF51
 2483 0276 05       		.byte	0x5
 2484 0277 B4       		.byte	0xb4
 2485 0278 E5000000 		.4byte	0xe5
 2486 027c 08       		.byte	0x8
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 99


 2487 027d 09       		.uleb128 0x9
 2488 027e 730A0000 		.4byte	.LASF52
 2489 0282 05       		.byte	0x5
 2490 0283 BB       		.byte	0xbb
 2491 0284 BA020000 		.4byte	0x2ba
 2492 0288 09       		.byte	0x9
 2493 0289 09       		.uleb128 0x9
 2494 028a F80B0000 		.4byte	.LASF53
 2495 028e 05       		.byte	0x5
 2496 028f C3       		.byte	0xc3
 2497 0290 77000000 		.4byte	0x77
 2498 0294 0A       		.byte	0xa
 2499 0295 09       		.uleb128 0x9
 2500 0296 6E080000 		.4byte	.LASF54
 2501 029a 05       		.byte	0x5
 2502 029b C8       		.byte	0xc8
 2503 029c 6B000000 		.4byte	0x6b
 2504 02a0 0C       		.byte	0xc
 2505 02a1 09       		.uleb128 0x9
 2506 02a2 97090000 		.4byte	.LASF23
 2507 02a6 05       		.byte	0x5
 2508 02a7 CE       		.byte	0xce
 2509 02a8 77000000 		.4byte	0x77
 2510 02ac 0E       		.byte	0xe
 2511 02ad 09       		.uleb128 0x9
 2512 02ae 3F040000 		.4byte	.LASF28
 2513 02b2 05       		.byte	0x5
 2514 02b3 D3       		.byte	0xd3
 2515 02b4 77000000 		.4byte	0x77
 2516 02b8 10       		.byte	0x10
 2517 02b9 00       		.byte	0
 2518 02ba 0D       		.uleb128 0xd
 2519 02bb 6B000000 		.4byte	0x6b
 2520 02bf CA020000 		.4byte	0x2ca
 2521 02c3 0E       		.uleb128 0xe
 2522 02c4 CA020000 		.4byte	0x2ca
 2523 02c8 00       		.byte	0
 2524 02c9 00       		.byte	0
 2525 02ca 02       		.uleb128 0x2
 2526 02cb 04       		.byte	0x4
 2527 02cc 07       		.byte	0x7
 2528 02cd 440A0000 		.4byte	.LASF55
 2529 02d1 0A       		.uleb128 0xa
 2530 02d2 C3060000 		.4byte	.LASF56
 2531 02d6 05       		.byte	0x5
 2532 02d7 D4       		.byte	0xd4
 2533 02d8 21020000 		.4byte	0x221
 2534 02dc 08       		.uleb128 0x8
 2535 02dd 12       		.byte	0x12
 2536 02de 05       		.byte	0x5
 2537 02df D9       		.byte	0xd9
 2538 02e0 7B030000 		.4byte	0x37b
 2539 02e4 09       		.uleb128 0x9
 2540 02e5 59050000 		.4byte	.LASF45
 2541 02e9 05       		.byte	0x5
 2542 02ea DE       		.byte	0xde
 2543 02eb 77000000 		.4byte	0x77
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 100


 2544 02ef 00       		.byte	0
 2545 02f0 09       		.uleb128 0x9
 2546 02f1 CB0A0000 		.4byte	.LASF46
 2547 02f5 05       		.byte	0x5
 2548 02f6 E3       		.byte	0xe3
 2549 02f7 D9000000 		.4byte	0xd9
 2550 02fb 02       		.byte	0x2
 2551 02fc 09       		.uleb128 0x9
 2552 02fd DC040000 		.4byte	.LASF47
 2553 0301 05       		.byte	0x5
 2554 0302 E8       		.byte	0xe8
 2555 0303 6B000000 		.4byte	0x6b
 2556 0307 04       		.byte	0x4
 2557 0308 09       		.uleb128 0x9
 2558 0309 A2060000 		.4byte	.LASF48
 2559 030d 05       		.byte	0x5
 2560 030e ED       		.byte	0xed
 2561 030f 6B000000 		.4byte	0x6b
 2562 0313 05       		.byte	0x5
 2563 0314 09       		.uleb128 0x9
 2564 0315 46040000 		.4byte	.LASF49
 2565 0319 05       		.byte	0x5
 2566 031a F3       		.byte	0xf3
 2567 031b 6B000000 		.4byte	0x6b
 2568 031f 06       		.byte	0x6
 2569 0320 09       		.uleb128 0x9
 2570 0321 16060000 		.4byte	.LASF50
 2571 0325 05       		.byte	0x5
 2572 0326 F9       		.byte	0xf9
 2573 0327 6B000000 		.4byte	0x6b
 2574 032b 07       		.byte	0x7
 2575 032c 0F       		.uleb128 0xf
 2576 032d 6A040000 		.4byte	.LASF51
 2577 0331 05       		.byte	0x5
 2578 0332 0001     		.2byte	0x100
 2579 0334 E5000000 		.4byte	0xe5
 2580 0338 08       		.byte	0x8
 2581 0339 0F       		.uleb128 0xf
 2582 033a 730A0000 		.4byte	.LASF52
 2583 033e 05       		.byte	0x5
 2584 033f 0701     		.2byte	0x107
 2585 0341 BA020000 		.4byte	0x2ba
 2586 0345 09       		.byte	0x9
 2587 0346 0F       		.uleb128 0xf
 2588 0347 F80B0000 		.4byte	.LASF53
 2589 034b 05       		.byte	0x5
 2590 034c 0F01     		.2byte	0x10f
 2591 034e 77000000 		.4byte	0x77
 2592 0352 0A       		.byte	0xa
 2593 0353 0F       		.uleb128 0xf
 2594 0354 6E080000 		.4byte	.LASF54
 2595 0358 05       		.byte	0x5
 2596 0359 1401     		.2byte	0x114
 2597 035b 6B000000 		.4byte	0x6b
 2598 035f 0C       		.byte	0xc
 2599 0360 0F       		.uleb128 0xf
 2600 0361 97090000 		.4byte	.LASF23
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 101


 2601 0365 05       		.byte	0x5
 2602 0366 1A01     		.2byte	0x11a
 2603 0368 77000000 		.4byte	0x77
 2604 036c 0E       		.byte	0xe
 2605 036d 0F       		.uleb128 0xf
 2606 036e 3F040000 		.4byte	.LASF28
 2607 0372 05       		.byte	0x5
 2608 0373 1F01     		.2byte	0x11f
 2609 0375 77000000 		.4byte	0x77
 2610 0379 10       		.byte	0x10
 2611 037a 00       		.byte	0
 2612 037b 04       		.uleb128 0x4
 2613 037c DC0A0000 		.4byte	.LASF57
 2614 0380 05       		.byte	0x5
 2615 0381 2001     		.2byte	0x120
 2616 0383 DC020000 		.4byte	0x2dc
 2617 0387 10       		.uleb128 0x10
 2618 0388 14       		.byte	0x14
 2619 0389 05       		.byte	0x5
 2620 038a 2501     		.2byte	0x125
 2621 038c 3A040000 		.4byte	0x43a
 2622 0390 0F       		.uleb128 0xf
 2623 0391 59050000 		.4byte	.LASF45
 2624 0395 05       		.byte	0x5
 2625 0396 2A01     		.2byte	0x12a
 2626 0398 77000000 		.4byte	0x77
 2627 039c 00       		.byte	0
 2628 039d 0F       		.uleb128 0xf
 2629 039e CB0A0000 		.4byte	.LASF46
 2630 03a2 05       		.byte	0x5
 2631 03a3 2F01     		.2byte	0x12f
 2632 03a5 D9000000 		.4byte	0xd9
 2633 03a9 02       		.byte	0x2
 2634 03aa 0F       		.uleb128 0xf
 2635 03ab DC040000 		.4byte	.LASF47
 2636 03af 05       		.byte	0x5
 2637 03b0 3401     		.2byte	0x134
 2638 03b2 6B000000 		.4byte	0x6b
 2639 03b6 04       		.byte	0x4
 2640 03b7 0F       		.uleb128 0xf
 2641 03b8 A2060000 		.4byte	.LASF48
 2642 03bc 05       		.byte	0x5
 2643 03bd 3901     		.2byte	0x139
 2644 03bf 6B000000 		.4byte	0x6b
 2645 03c3 05       		.byte	0x5
 2646 03c4 0F       		.uleb128 0xf
 2647 03c5 46040000 		.4byte	.LASF49
 2648 03c9 05       		.byte	0x5
 2649 03ca 3F01     		.2byte	0x13f
 2650 03cc 6B000000 		.4byte	0x6b
 2651 03d0 06       		.byte	0x6
 2652 03d1 0F       		.uleb128 0xf
 2653 03d2 16060000 		.4byte	.LASF50
 2654 03d6 05       		.byte	0x5
 2655 03d7 4501     		.2byte	0x145
 2656 03d9 6B000000 		.4byte	0x6b
 2657 03dd 07       		.byte	0x7
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 102


 2658 03de 0F       		.uleb128 0xf
 2659 03df 6A040000 		.4byte	.LASF51
 2660 03e3 05       		.byte	0x5
 2661 03e4 4C01     		.2byte	0x14c
 2662 03e6 E5000000 		.4byte	0xe5
 2663 03ea 08       		.byte	0x8
 2664 03eb 0F       		.uleb128 0xf
 2665 03ec 730A0000 		.4byte	.LASF52
 2666 03f0 05       		.byte	0x5
 2667 03f1 5301     		.2byte	0x153
 2668 03f3 BA020000 		.4byte	0x2ba
 2669 03f7 09       		.byte	0x9
 2670 03f8 0F       		.uleb128 0xf
 2671 03f9 F80B0000 		.4byte	.LASF53
 2672 03fd 05       		.byte	0x5
 2673 03fe 5B01     		.2byte	0x15b
 2674 0400 77000000 		.4byte	0x77
 2675 0404 0A       		.byte	0xa
 2676 0405 0F       		.uleb128 0xf
 2677 0406 6E080000 		.4byte	.LASF54
 2678 040a 05       		.byte	0x5
 2679 040b 6001     		.2byte	0x160
 2680 040d 6B000000 		.4byte	0x6b
 2681 0411 0C       		.byte	0xc
 2682 0412 0F       		.uleb128 0xf
 2683 0413 97090000 		.4byte	.LASF23
 2684 0417 05       		.byte	0x5
 2685 0418 6601     		.2byte	0x166
 2686 041a 77000000 		.4byte	0x77
 2687 041e 0E       		.byte	0xe
 2688 041f 0F       		.uleb128 0xf
 2689 0420 3F040000 		.4byte	.LASF28
 2690 0424 05       		.byte	0x5
 2691 0425 6B01     		.2byte	0x16b
 2692 0427 77000000 		.4byte	0x77
 2693 042b 10       		.byte	0x10
 2694 042c 0F       		.uleb128 0xf
 2695 042d CD0D0000 		.4byte	.LASF58
 2696 0431 05       		.byte	0x5
 2697 0432 7001     		.2byte	0x170
 2698 0434 3A040000 		.4byte	0x43a
 2699 0438 12       		.byte	0x12
 2700 0439 00       		.byte	0
 2701 043a 0D       		.uleb128 0xd
 2702 043b 77000000 		.4byte	0x77
 2703 043f 4A040000 		.4byte	0x44a
 2704 0443 0E       		.uleb128 0xe
 2705 0444 CA020000 		.4byte	0x2ca
 2706 0448 00       		.byte	0
 2707 0449 00       		.byte	0
 2708 044a 04       		.uleb128 0x4
 2709 044b E6090000 		.4byte	.LASF59
 2710 044f 05       		.byte	0x5
 2711 0450 7101     		.2byte	0x171
 2712 0452 87030000 		.4byte	0x387
 2713 0456 10       		.uleb128 0x10
 2714 0457 4A       		.byte	0x4a
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 103


 2715 0458 05       		.byte	0x5
 2716 0459 7701     		.2byte	0x177
 2717 045b 94040000 		.4byte	0x494
 2718 045f 0F       		.uleb128 0xf
 2719 0460 8D040000 		.4byte	.LASF60
 2720 0464 05       		.byte	0x5
 2721 0465 7C01     		.2byte	0x17c
 2722 0467 7B030000 		.4byte	0x37b
 2723 046b 00       		.byte	0
 2724 046c 0F       		.uleb128 0xf
 2725 046d 92040000 		.4byte	.LASF61
 2726 0471 05       		.byte	0x5
 2727 0472 8101     		.2byte	0x181
 2728 0474 7B030000 		.4byte	0x37b
 2729 0478 12       		.byte	0x12
 2730 0479 0F       		.uleb128 0xf
 2731 047a 97040000 		.4byte	.LASF62
 2732 047e 05       		.byte	0x5
 2733 047f 8601     		.2byte	0x186
 2734 0481 7B030000 		.4byte	0x37b
 2735 0485 24       		.byte	0x24
 2736 0486 11       		.uleb128 0x11
 2737 0487 736C6400 		.ascii	"sld\000"
 2738 048b 05       		.byte	0x5
 2739 048c 8B01     		.2byte	0x18b
 2740 048e 4A040000 		.4byte	0x44a
 2741 0492 36       		.byte	0x36
 2742 0493 00       		.byte	0
 2743 0494 04       		.uleb128 0x4
 2744 0495 CB010000 		.4byte	.LASF63
 2745 0499 05       		.byte	0x5
 2746 049a 8C01     		.2byte	0x18c
 2747 049c 56040000 		.4byte	0x456
 2748 04a0 10       		.uleb128 0x10
 2749 04a1 0A       		.byte	0xa
 2750 04a2 05       		.byte	0x5
 2751 04a3 9201     		.2byte	0x192
 2752 04a5 F8040000 		.4byte	0x4f8
 2753 04a9 11       		.uleb128 0x11
 2754 04aa 72617700 		.ascii	"raw\000"
 2755 04ae 05       		.byte	0x5
 2756 04af 9701     		.2byte	0x197
 2757 04b1 3A040000 		.4byte	0x43a
 2758 04b5 00       		.byte	0
 2759 04b6 0F       		.uleb128 0xf
 2760 04b7 6C0C0000 		.4byte	.LASF64
 2761 04bb 05       		.byte	0x5
 2762 04bc 9C01     		.2byte	0x19c
 2763 04be 3A040000 		.4byte	0x43a
 2764 04c2 02       		.byte	0x2
 2765 04c3 0F       		.uleb128 0xf
 2766 04c4 D40A0000 		.4byte	.LASF65
 2767 04c8 05       		.byte	0x5
 2768 04c9 A201     		.2byte	0x1a2
 2769 04cb BA020000 		.4byte	0x2ba
 2770 04cf 04       		.byte	0x4
 2771 04d0 0F       		.uleb128 0xf
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 104


 2772 04d1 09090000 		.4byte	.LASF66
 2773 04d5 05       		.byte	0x5
 2774 04d6 A701     		.2byte	0x1a7
 2775 04d8 D9000000 		.4byte	0xd9
 2776 04dc 06       		.byte	0x6
 2777 04dd 0F       		.uleb128 0xf
 2778 04de 110D0000 		.4byte	.LASF67
 2779 04e2 05       		.byte	0x5
 2780 04e3 AC01     		.2byte	0x1ac
 2781 04e5 F8040000 		.4byte	0x4f8
 2782 04e9 08       		.byte	0x8
 2783 04ea 0F       		.uleb128 0xf
 2784 04eb D8050000 		.4byte	.LASF68
 2785 04ef 05       		.byte	0x5
 2786 04f0 B101     		.2byte	0x1b1
 2787 04f2 BA020000 		.4byte	0x2ba
 2788 04f6 09       		.byte	0x9
 2789 04f7 00       		.byte	0
 2790 04f8 0D       		.uleb128 0xd
 2791 04f9 E5000000 		.4byte	0xe5
 2792 04fd 08050000 		.4byte	0x508
 2793 0501 0E       		.uleb128 0xe
 2794 0502 CA020000 		.4byte	0x2ca
 2795 0506 00       		.byte	0
 2796 0507 00       		.byte	0
 2797 0508 04       		.uleb128 0x4
 2798 0509 F6030000 		.4byte	.LASF69
 2799 050d 05       		.byte	0x5
 2800 050e B201     		.2byte	0x1b2
 2801 0510 A0040000 		.4byte	0x4a0
 2802 0514 10       		.uleb128 0x10
 2803 0515 50       		.byte	0x50
 2804 0516 05       		.byte	0x5
 2805 0517 B801     		.2byte	0x1b8
 2806 0519 52050000 		.4byte	0x552
 2807 051d 0F       		.uleb128 0xf
 2808 051e 8D040000 		.4byte	.LASF60
 2809 0522 05       		.byte	0x5
 2810 0523 BD01     		.2byte	0x1bd
 2811 0525 52050000 		.4byte	0x552
 2812 0529 00       		.byte	0
 2813 052a 0F       		.uleb128 0xf
 2814 052b 92040000 		.4byte	.LASF61
 2815 052f 05       		.byte	0x5
 2816 0530 C201     		.2byte	0x1c2
 2817 0532 52050000 		.4byte	0x552
 2818 0536 0A       		.byte	0xa
 2819 0537 0F       		.uleb128 0xf
 2820 0538 97040000 		.4byte	.LASF62
 2821 053c 05       		.byte	0x5
 2822 053d C701     		.2byte	0x1c7
 2823 053f 52050000 		.4byte	0x552
 2824 0543 14       		.byte	0x14
 2825 0544 11       		.uleb128 0x11
 2826 0545 736C6400 		.ascii	"sld\000"
 2827 0549 05       		.byte	0x5
 2828 054a CC01     		.2byte	0x1cc
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 105


 2829 054c 62050000 		.4byte	0x562
 2830 0550 1E       		.byte	0x1e
 2831 0551 00       		.byte	0
 2832 0552 0D       		.uleb128 0xd
 2833 0553 08050000 		.4byte	0x508
 2834 0557 62050000 		.4byte	0x562
 2835 055b 0E       		.uleb128 0xe
 2836 055c CA020000 		.4byte	0x2ca
 2837 0560 00       		.byte	0
 2838 0561 00       		.byte	0
 2839 0562 0D       		.uleb128 0xd
 2840 0563 08050000 		.4byte	0x508
 2841 0567 72050000 		.4byte	0x572
 2842 056b 0E       		.uleb128 0xe
 2843 056c CA020000 		.4byte	0x2ca
 2844 0570 04       		.byte	0x4
 2845 0571 00       		.byte	0
 2846 0572 04       		.uleb128 0x4
 2847 0573 D60D0000 		.4byte	.LASF70
 2848 0577 05       		.byte	0x5
 2849 0578 CD01     		.2byte	0x1cd
 2850 057a 14050000 		.4byte	0x514
 2851 057e 10       		.uleb128 0x10
 2852 057f C0       		.byte	0xc0
 2853 0580 05       		.byte	0x5
 2854 0581 D301     		.2byte	0x1d3
 2855 0583 72060000 		.4byte	0x672
 2856 0587 0F       		.uleb128 0xf
 2857 0588 F6070000 		.4byte	.LASF71
 2858 058c 05       		.byte	0x5
 2859 058d DA01     		.2byte	0x1da
 2860 058f 77000000 		.4byte	0x77
 2861 0593 00       		.byte	0
 2862 0594 0F       		.uleb128 0xf
 2863 0595 6C0D0000 		.4byte	.LASF72
 2864 0599 05       		.byte	0x5
 2865 059a DF01     		.2byte	0x1df
 2866 059c 77000000 		.4byte	0x77
 2867 05a0 02       		.byte	0x2
 2868 05a1 0F       		.uleb128 0xf
 2869 05a2 1C010000 		.4byte	.LASF73
 2870 05a6 05       		.byte	0x5
 2871 05a7 E401     		.2byte	0x1e4
 2872 05a9 77000000 		.4byte	0x77
 2873 05ad 04       		.byte	0x4
 2874 05ae 0F       		.uleb128 0xf
 2875 05af 0E090000 		.4byte	.LASF74
 2876 05b3 05       		.byte	0x5
 2877 05b4 EA01     		.2byte	0x1ea
 2878 05b6 77000000 		.4byte	0x77
 2879 05ba 06       		.byte	0x6
 2880 05bb 0F       		.uleb128 0xf
 2881 05bc 10010000 		.4byte	.LASF75
 2882 05c0 05       		.byte	0x5
 2883 05c1 EF01     		.2byte	0x1ef
 2884 05c3 77000000 		.4byte	0x77
 2885 05c7 08       		.byte	0x8
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 106


 2886 05c8 0F       		.uleb128 0xf
 2887 05c9 64050000 		.4byte	.LASF76
 2888 05cd 05       		.byte	0x5
 2889 05ce F401     		.2byte	0x1f4
 2890 05d0 C1000000 		.4byte	0xc1
 2891 05d4 0C       		.byte	0xc
 2892 05d5 0F       		.uleb128 0xf
 2893 05d6 FE080000 		.4byte	.LASF77
 2894 05da 05       		.byte	0x5
 2895 05db FA01     		.2byte	0x1fa
 2896 05dd 72060000 		.4byte	0x672
 2897 05e1 10       		.byte	0x10
 2898 05e2 0F       		.uleb128 0xf
 2899 05e3 A1090000 		.4byte	.LASF78
 2900 05e7 05       		.byte	0x5
 2901 05e8 0102     		.2byte	0x201
 2902 05ea 72060000 		.4byte	0x672
 2903 05ee 14       		.byte	0x14
 2904 05ef 0F       		.uleb128 0xf
 2905 05f0 55080000 		.4byte	.LASF79
 2906 05f4 05       		.byte	0x5
 2907 05f5 1102     		.2byte	0x211
 2908 05f7 82060000 		.4byte	0x682
 2909 05fb 18       		.byte	0x18
 2910 05fc 0F       		.uleb128 0xf
 2911 05fd AB060000 		.4byte	.LASF80
 2912 0601 05       		.byte	0x5
 2913 0602 1702     		.2byte	0x217
 2914 0604 77000000 		.4byte	0x77
 2915 0608 1C       		.byte	0x1c
 2916 0609 0F       		.uleb128 0xf
 2917 060a EC030000 		.4byte	.LASF81
 2918 060e 05       		.byte	0x5
 2919 060f 1C02     		.2byte	0x21c
 2920 0611 6B000000 		.4byte	0x6b
 2921 0615 1E       		.byte	0x1e
 2922 0616 0F       		.uleb128 0xf
 2923 0617 DC0C0000 		.4byte	.LASF82
 2924 061b 05       		.byte	0x5
 2925 061c 2102     		.2byte	0x221
 2926 061e 6B000000 		.4byte	0x6b
 2927 0622 1F       		.byte	0x1f
 2928 0623 0F       		.uleb128 0xf
 2929 0624 39060000 		.4byte	.LASF83
 2930 0628 05       		.byte	0x5
 2931 0629 2602     		.2byte	0x226
 2932 062b 94040000 		.4byte	0x494
 2933 062f 20       		.byte	0x20
 2934 0630 0F       		.uleb128 0xf
 2935 0631 5F030000 		.4byte	.LASF84
 2936 0635 05       		.byte	0x5
 2937 0636 2B02     		.2byte	0x22b
 2938 0638 72050000 		.4byte	0x572
 2939 063c 6A       		.byte	0x6a
 2940 063d 0F       		.uleb128 0xf
 2941 063e DE000000 		.4byte	.LASF85
 2942 0642 05       		.byte	0x5
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 107


 2943 0643 3002     		.2byte	0x230
 2944 0645 6B000000 		.4byte	0x6b
 2945 0649 BA       		.byte	0xba
 2946 064a 0F       		.uleb128 0xf
 2947 064b AC030000 		.4byte	.LASF86
 2948 064f 05       		.byte	0x5
 2949 0650 3502     		.2byte	0x235
 2950 0652 6B000000 		.4byte	0x6b
 2951 0656 BB       		.byte	0xbb
 2952 0657 0F       		.uleb128 0xf
 2953 0658 E3070000 		.4byte	.LASF87
 2954 065c 05       		.byte	0x5
 2955 065d 3A02     		.2byte	0x23a
 2956 065f 77000000 		.4byte	0x77
 2957 0663 BC       		.byte	0xbc
 2958 0664 0F       		.uleb128 0xf
 2959 0665 92060000 		.4byte	.LASF88
 2960 0669 05       		.byte	0x5
 2961 066a 3F02     		.2byte	0x23f
 2962 066c 3A040000 		.4byte	0x43a
 2963 0670 BE       		.byte	0xbe
 2964 0671 00       		.byte	0
 2965 0672 0D       		.uleb128 0xd
 2966 0673 83000000 		.4byte	0x83
 2967 0677 82060000 		.4byte	0x682
 2968 067b 0E       		.uleb128 0xe
 2969 067c CA020000 		.4byte	0x2ca
 2970 0680 00       		.byte	0
 2971 0681 00       		.byte	0
 2972 0682 0D       		.uleb128 0xd
 2973 0683 6B000000 		.4byte	0x6b
 2974 0687 92060000 		.4byte	0x692
 2975 068b 0E       		.uleb128 0xe
 2976 068c CA020000 		.4byte	0x2ca
 2977 0690 03       		.byte	0x3
 2978 0691 00       		.byte	0
 2979 0692 04       		.uleb128 0x4
 2980 0693 C7080000 		.4byte	.LASF89
 2981 0697 05       		.byte	0x5
 2982 0698 4002     		.2byte	0x240
 2983 069a 7E050000 		.4byte	0x57e
 2984 069e 10       		.uleb128 0x10
 2985 069f 1C       		.byte	0x1c
 2986 06a0 05       		.byte	0x5
 2987 06a1 4602     		.2byte	0x246
 2988 06a3 1D070000 		.4byte	0x71d
 2989 06a7 0F       		.uleb128 0xf
 2990 06a8 DF060000 		.4byte	.LASF90
 2991 06ac 05       		.byte	0x5
 2992 06ad 4B02     		.2byte	0x24b
 2993 06af 1D070000 		.4byte	0x71d
 2994 06b3 00       		.byte	0
 2995 06b4 0F       		.uleb128 0xf
 2996 06b5 E1050000 		.4byte	.LASF91
 2997 06b9 05       		.byte	0x5
 2998 06ba 5002     		.2byte	0x250
 2999 06bc 1D070000 		.4byte	0x71d
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 108


 3000 06c0 04       		.byte	0x4
 3001 06c1 0F       		.uleb128 0xf
 3002 06c2 32040000 		.4byte	.LASF92
 3003 06c6 05       		.byte	0x5
 3004 06c7 5502     		.2byte	0x255
 3005 06c9 1D070000 		.4byte	0x71d
 3006 06cd 08       		.byte	0x8
 3007 06ce 0F       		.uleb128 0xf
 3008 06cf 33090000 		.4byte	.LASF93
 3009 06d3 05       		.byte	0x5
 3010 06d4 5A02     		.2byte	0x25a
 3011 06d6 1D070000 		.4byte	0x71d
 3012 06da 0C       		.byte	0xc
 3013 06db 0F       		.uleb128 0xf
 3014 06dc D10B0000 		.4byte	.LASF94
 3015 06e0 05       		.byte	0x5
 3016 06e1 5F02     		.2byte	0x25f
 3017 06e3 83000000 		.4byte	0x83
 3018 06e7 10       		.byte	0x10
 3019 06e8 0F       		.uleb128 0xf
 3020 06e9 24010000 		.4byte	.LASF95
 3021 06ed 05       		.byte	0x5
 3022 06ee 6402     		.2byte	0x264
 3023 06f0 83000000 		.4byte	0x83
 3024 06f4 14       		.byte	0x14
 3025 06f5 0F       		.uleb128 0xf
 3026 06f6 24050000 		.4byte	.LASF96
 3027 06fa 05       		.byte	0x5
 3028 06fb 6902     		.2byte	0x269
 3029 06fd 6B000000 		.4byte	0x6b
 3030 0701 18       		.byte	0x18
 3031 0702 0F       		.uleb128 0xf
 3032 0703 4D0A0000 		.4byte	.LASF97
 3033 0707 05       		.byte	0x5
 3034 0708 6E02     		.2byte	0x26e
 3035 070a 6B000000 		.4byte	0x6b
 3036 070e 19       		.byte	0x19
 3037 070f 0F       		.uleb128 0xf
 3038 0710 58020000 		.4byte	.LASF98
 3039 0714 05       		.byte	0x5
 3040 0715 7302     		.2byte	0x273
 3041 0717 6B000000 		.4byte	0x6b
 3042 071b 1A       		.byte	0x1a
 3043 071c 00       		.byte	0
 3044 071d 06       		.uleb128 0x6
 3045 071e 04       		.byte	0x4
 3046 071f B5000000 		.4byte	0xb5
 3047 0723 04       		.uleb128 0x4
 3048 0724 93030000 		.4byte	.LASF99
 3049 0728 05       		.byte	0x5
 3050 0729 7402     		.2byte	0x274
 3051 072b 9E060000 		.4byte	0x69e
 3052 072f 10       		.uleb128 0x10
 3053 0730 2C       		.byte	0x2c
 3054 0731 05       		.byte	0x5
 3055 0732 A702     		.2byte	0x2a7
 3056 0734 FC070000 		.4byte	0x7fc
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 109


 3057 0738 0F       		.uleb128 0xf
 3058 0739 B80C0000 		.4byte	.LASF100
 3059 073d 05       		.byte	0x5
 3060 073e B002     		.2byte	0x2b0
 3061 0740 FC070000 		.4byte	0x7fc
 3062 0744 00       		.byte	0
 3063 0745 0F       		.uleb128 0xf
 3064 0746 4F0B0000 		.4byte	.LASF101
 3065 074a 05       		.byte	0x5
 3066 074b B702     		.2byte	0x2b7
 3067 074d 03080000 		.4byte	0x803
 3068 0751 04       		.byte	0x4
 3069 0752 0F       		.uleb128 0xf
 3070 0753 FF070000 		.4byte	.LASF102
 3071 0757 05       		.byte	0x5
 3072 0758 BD02     		.2byte	0x2bd
 3073 075a 05080000 		.4byte	0x805
 3074 075e 08       		.byte	0x8
 3075 075f 0F       		.uleb128 0xf
 3076 0760 0A070000 		.4byte	.LASF103
 3077 0764 05       		.byte	0x5
 3078 0765 C302     		.2byte	0x2c3
 3079 0767 03080000 		.4byte	0x803
 3080 076b 0C       		.byte	0xc
 3081 076c 0F       		.uleb128 0xf
 3082 076d 900A0000 		.4byte	.LASF104
 3083 0771 05       		.byte	0x5
 3084 0772 CA02     		.2byte	0x2ca
 3085 0774 0B080000 		.4byte	0x80b
 3086 0778 10       		.byte	0x10
 3087 0779 0F       		.uleb128 0xf
 3088 077a 260B0000 		.4byte	.LASF105
 3089 077e 05       		.byte	0x5
 3090 077f CF02     		.2byte	0x2cf
 3091 0781 83000000 		.4byte	0x83
 3092 0785 14       		.byte	0x14
 3093 0786 0F       		.uleb128 0xf
 3094 0787 9C040000 		.4byte	.LASF106
 3095 078b 05       		.byte	0x5
 3096 078c D602     		.2byte	0x2d6
 3097 078e 77000000 		.4byte	0x77
 3098 0792 18       		.byte	0x18
 3099 0793 0F       		.uleb128 0xf
 3100 0794 CB030000 		.4byte	.LASF107
 3101 0798 05       		.byte	0x5
 3102 0799 DD02     		.2byte	0x2dd
 3103 079b 6B000000 		.4byte	0x6b
 3104 079f 1A       		.byte	0x1a
 3105 07a0 0F       		.uleb128 0xf
 3106 07a1 330B0000 		.4byte	.LASF108
 3107 07a5 05       		.byte	0x5
 3108 07a6 E302     		.2byte	0x2e3
 3109 07a8 6B000000 		.4byte	0x6b
 3110 07ac 1B       		.byte	0x1b
 3111 07ad 0F       		.uleb128 0xf
 3112 07ae F5050000 		.4byte	.LASF109
 3113 07b2 05       		.byte	0x5
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 110


 3114 07b3 ED02     		.2byte	0x2ed
 3115 07b5 6B000000 		.4byte	0x6b
 3116 07b9 1C       		.byte	0x1c
 3117 07ba 0F       		.uleb128 0xf
 3118 07bb A10B0000 		.4byte	.LASF110
 3119 07bf 05       		.byte	0x5
 3120 07c0 F502     		.2byte	0x2f5
 3121 07c2 6B000000 		.4byte	0x6b
 3122 07c6 1D       		.byte	0x1d
 3123 07c7 0F       		.uleb128 0xf
 3124 07c8 98080000 		.4byte	.LASF111
 3125 07cc 05       		.byte	0x5
 3126 07cd FA02     		.2byte	0x2fa
 3127 07cf 77000000 		.4byte	0x77
 3128 07d3 1E       		.byte	0x1e
 3129 07d4 0F       		.uleb128 0xf
 3130 07d5 B70A0000 		.4byte	.LASF112
 3131 07d9 05       		.byte	0x5
 3132 07da 0303     		.2byte	0x303
 3133 07dc 83000000 		.4byte	0x83
 3134 07e0 20       		.byte	0x20
 3135 07e1 0F       		.uleb128 0xf
 3136 07e2 BC030000 		.4byte	.LASF113
 3137 07e6 05       		.byte	0x5
 3138 07e7 0B03     		.2byte	0x30b
 3139 07e9 11080000 		.4byte	0x811
 3140 07ed 24       		.byte	0x24
 3141 07ee 0F       		.uleb128 0xf
 3142 07ef E7010000 		.4byte	.LASF114
 3143 07f3 05       		.byte	0x5
 3144 07f4 1003     		.2byte	0x310
 3145 07f6 6B000000 		.4byte	0x6b
 3146 07fa 28       		.byte	0x28
 3147 07fb 00       		.byte	0
 3148 07fc 06       		.uleb128 0x6
 3149 07fd 04       		.byte	0x4
 3150 07fe 02080000 		.4byte	0x802
 3151 0802 12       		.uleb128 0x12
 3152 0803 13       		.uleb128 0x13
 3153 0804 04       		.byte	0x4
 3154 0805 06       		.uleb128 0x6
 3155 0806 04       		.byte	0x4
 3156 0807 08050000 		.4byte	0x508
 3157 080b 06       		.uleb128 0x6
 3158 080c 04       		.byte	0x4
 3159 080d 6B000000 		.4byte	0x6b
 3160 0811 06       		.uleb128 0x6
 3161 0812 04       		.byte	0x4
 3162 0813 E0010000 		.4byte	0x1e0
 3163 0817 04       		.uleb128 0x4
 3164 0818 51040000 		.4byte	.LASF115
 3165 081c 05       		.byte	0x5
 3166 081d 1103     		.2byte	0x311
 3167 081f 2F070000 		.4byte	0x72f
 3168 0823 10       		.uleb128 0x10
 3169 0824 B0       		.byte	0xb0
 3170 0825 05       		.byte	0x5
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 111


 3171 0826 1703     		.2byte	0x317
 3172 0828 3A080000 		.4byte	0x83a
 3173 082c 0F       		.uleb128 0xf
 3174 082d 610E0000 		.4byte	.LASF116
 3175 0831 05       		.byte	0x5
 3176 0832 1C03     		.2byte	0x31c
 3177 0834 3A080000 		.4byte	0x83a
 3178 0838 00       		.byte	0
 3179 0839 00       		.byte	0
 3180 083a 0D       		.uleb128 0xd
 3181 083b 17080000 		.4byte	0x817
 3182 083f 4A080000 		.4byte	0x84a
 3183 0843 0E       		.uleb128 0xe
 3184 0844 CA020000 		.4byte	0x2ca
 3185 0848 03       		.byte	0x3
 3186 0849 00       		.byte	0
 3187 084a 04       		.uleb128 0x4
 3188 084b 5F060000 		.4byte	.LASF117
 3189 084f 05       		.byte	0x5
 3190 0850 1D03     		.2byte	0x31d
 3191 0852 23080000 		.4byte	0x823
 3192 0856 02       		.uleb128 0x2
 3193 0857 08       		.byte	0x8
 3194 0858 04       		.byte	0x4
 3195 0859 C1070000 		.4byte	.LASF118
 3196 085d 14       		.uleb128 0x14
 3197 085e 75040000 		.4byte	.LASF121
 3198 0862 01       		.byte	0x1
 3199 0863 6209     		.2byte	0x962
 3200 0865 6B000000 		.4byte	0x6b
 3201 0869 00000000 		.4byte	.LFB22
 3202 086d 84000000 		.4byte	.LFE22-.LFB22
 3203 0871 01       		.uleb128 0x1
 3204 0872 9C       		.byte	0x9c
 3205 0873 A8080000 		.4byte	0x8a8
 3206 0877 15       		.uleb128 0x15
 3207 0878 500D0000 		.4byte	.LASF119
 3208 087c 01       		.byte	0x1
 3209 087d 6209     		.2byte	0x962
 3210 087f 83000000 		.4byte	0x83
 3211 0883 00000000 		.4byte	.LLST0
 3212 0887 15       		.uleb128 0x15
 3213 0888 36050000 		.4byte	.LASF120
 3214 088c 01       		.byte	0x1
 3215 088d 6209     		.2byte	0x962
 3216 088f 83000000 		.4byte	0x83
 3217 0893 2C000000 		.4byte	.LLST1
 3218 0897 16       		.uleb128 0x16
 3219 0898 D4030000 		.4byte	.LASF123
 3220 089c 01       		.byte	0x1
 3221 089d 6409     		.2byte	0x964
 3222 089f 6B000000 		.4byte	0x6b
 3223 08a3 58000000 		.4byte	.LLST2
 3224 08a7 00       		.byte	0
 3225 08a8 14       		.uleb128 0x14
 3226 08a9 39020000 		.4byte	.LASF122
 3227 08ad 01       		.byte	0x1
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 112


 3228 08ae AE09     		.2byte	0x9ae
 3229 08b0 6B000000 		.4byte	0x6b
 3230 08b4 00000000 		.4byte	.LFB23
 3231 08b8 42000000 		.4byte	.LFE23-.LFB23
 3232 08bc 01       		.uleb128 0x1
 3233 08bd 9C       		.byte	0x9c
 3234 08be 13090000 		.4byte	0x913
 3235 08c2 15       		.uleb128 0x15
 3236 08c3 500D0000 		.4byte	.LASF119
 3237 08c7 01       		.byte	0x1
 3238 08c8 AE09     		.2byte	0x9ae
 3239 08ca 83000000 		.4byte	0x83
 3240 08ce 77000000 		.4byte	.LLST3
 3241 08d2 15       		.uleb128 0x15
 3242 08d3 D4030000 		.4byte	.LASF123
 3243 08d7 01       		.byte	0x1
 3244 08d8 AE09     		.2byte	0x9ae
 3245 08da 6B000000 		.4byte	0x6b
 3246 08de BC000000 		.4byte	.LLST4
 3247 08e2 16       		.uleb128 0x16
 3248 08e3 4C010000 		.4byte	.LASF124
 3249 08e7 01       		.byte	0x1
 3250 08e8 B009     		.2byte	0x9b0
 3251 08ea 83000000 		.4byte	0x83
 3252 08ee F6000000 		.4byte	.LLST5
 3253 08f2 16       		.uleb128 0x16
 3254 08f3 8B010000 		.4byte	.LASF125
 3255 08f7 01       		.byte	0x1
 3256 08f8 B109     		.2byte	0x9b1
 3257 08fa 83000000 		.4byte	0x83
 3258 08fe 20010000 		.4byte	.LLST6
 3259 0902 16       		.uleb128 0x16
 3260 0903 C50C0000 		.4byte	.LASF126
 3261 0907 01       		.byte	0x1
 3262 0908 B209     		.2byte	0x9b2
 3263 090a 83000000 		.4byte	0x83
 3264 090e 49010000 		.4byte	.LLST7
 3265 0912 00       		.byte	0
 3266 0913 17       		.uleb128 0x17
 3267 0914 54000000 		.4byte	.LASF128
 3268 0918 01       		.byte	0x1
 3269 0919 0003     		.2byte	0x300
 3270 091b 00000000 		.4byte	.LFB7
 3271 091f 24000000 		.4byte	.LFE7-.LFB7
 3272 0923 01       		.uleb128 0x1
 3273 0924 9C       		.byte	0x9c
 3274 0925 43090000 		.4byte	0x943
 3275 0929 16       		.uleb128 0x16
 3276 092a D00C0000 		.4byte	.LASF127
 3277 092e 01       		.byte	0x1
 3278 092f 0203     		.2byte	0x302
 3279 0931 83000000 		.4byte	0x83
 3280 0935 5C010000 		.4byte	.LLST8
 3281 0939 18       		.uleb128 0x18
 3282 093a 1A000000 		.4byte	.LVL29
 3283 093e C8130000 		.4byte	0x13c8
 3284 0942 00       		.byte	0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 113


 3285 0943 17       		.uleb128 0x17
 3286 0944 0B030000 		.4byte	.LASF129
 3287 0948 01       		.byte	0x1
 3288 0949 3703     		.2byte	0x337
 3289 094b 00000000 		.4byte	.LFB8
 3290 094f 28000000 		.4byte	.LFE8-.LFB8
 3291 0953 01       		.uleb128 0x1
 3292 0954 9C       		.byte	0x9c
 3293 0955 73090000 		.4byte	0x973
 3294 0959 16       		.uleb128 0x16
 3295 095a D00C0000 		.4byte	.LASF127
 3296 095e 01       		.byte	0x1
 3297 095f 3903     		.2byte	0x339
 3298 0961 83000000 		.4byte	0x83
 3299 0965 6F010000 		.4byte	.LLST9
 3300 0969 18       		.uleb128 0x18
 3301 096a 18000000 		.4byte	.LVL34
 3302 096e D4130000 		.4byte	0x13d4
 3303 0972 00       		.byte	0
 3304 0973 17       		.uleb128 0x17
 3305 0974 0A080000 		.4byte	.LASF130
 3306 0978 01       		.byte	0x1
 3307 0979 2209     		.2byte	0x922
 3308 097b 00000000 		.4byte	.LFB21
 3309 097f 26000000 		.4byte	.LFE21-.LFB21
 3310 0983 01       		.uleb128 0x1
 3311 0984 9C       		.byte	0x9c
 3312 0985 2F0A0000 		.4byte	0xa2f
 3313 0989 15       		.uleb128 0x15
 3314 098a 92070000 		.4byte	.LASF131
 3315 098e 01       		.byte	0x1
 3316 098f 2209     		.2byte	0x922
 3317 0991 83000000 		.4byte	0x83
 3318 0995 A3010000 		.4byte	.LLST10
 3319 0999 15       		.uleb128 0x15
 3320 099a 07020000 		.4byte	.LASF132
 3321 099e 01       		.byte	0x1
 3322 099f 2209     		.2byte	0x922
 3323 09a1 2F0A0000 		.4byte	0xa2f
 3324 09a5 C4010000 		.4byte	.LLST11
 3325 09a9 16       		.uleb128 0x16
 3326 09aa D4030000 		.4byte	.LASF123
 3327 09ae 01       		.byte	0x1
 3328 09af 2409     		.2byte	0x924
 3329 09b1 6B000000 		.4byte	0x6b
 3330 09b5 F0010000 		.4byte	.LLST12
 3331 09b9 16       		.uleb128 0x16
 3332 09ba 4C010000 		.4byte	.LASF124
 3333 09be 01       		.byte	0x1
 3334 09bf 2509     		.2byte	0x925
 3335 09c1 6B000000 		.4byte	0x6b
 3336 09c5 03020000 		.4byte	.LLST13
 3337 09c9 16       		.uleb128 0x16
 3338 09ca 36050000 		.4byte	.LASF120
 3339 09ce 01       		.byte	0x1
 3340 09cf 2909     		.2byte	0x929
 3341 09d1 83000000 		.4byte	0x83
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 114


 3342 09d5 16020000 		.4byte	.LLST14
 3343 09d9 16       		.uleb128 0x16
 3344 09da 500D0000 		.4byte	.LASF119
 3345 09de 01       		.byte	0x1
 3346 09df 2A09     		.2byte	0x92a
 3347 09e1 83000000 		.4byte	0x83
 3348 09e5 29020000 		.4byte	.LLST15
 3349 09e9 19       		.uleb128 0x19
 3350 09ea 0A000000 		.4byte	.LVL37
 3351 09ee DF130000 		.4byte	0x13df
 3352 09f2 FE090000 		.4byte	0x9fe
 3353 09f6 1A       		.uleb128 0x1a
 3354 09f7 01       		.uleb128 0x1
 3355 09f8 50       		.byte	0x50
 3356 09f9 03       		.uleb128 0x3
 3357 09fa F3       		.byte	0xf3
 3358 09fb 01       		.uleb128 0x1
 3359 09fc 50       		.byte	0x50
 3360 09fd 00       		.byte	0
 3361 09fe 19       		.uleb128 0x19
 3362 09ff 12000000 		.4byte	.LVL39
 3363 0a03 5D080000 		.4byte	0x85d
 3364 0a07 180A0000 		.4byte	0xa18
 3365 0a0b 1A       		.uleb128 0x1a
 3366 0a0c 01       		.uleb128 0x1
 3367 0a0d 50       		.byte	0x50
 3368 0a0e 02       		.uleb128 0x2
 3369 0a0f 76       		.byte	0x76
 3370 0a10 00       		.sleb128 0
 3371 0a11 1A       		.uleb128 0x1a
 3372 0a12 01       		.uleb128 0x1
 3373 0a13 51       		.byte	0x51
 3374 0a14 02       		.uleb128 0x2
 3375 0a15 74       		.byte	0x74
 3376 0a16 00       		.sleb128 0
 3377 0a17 00       		.byte	0
 3378 0a18 1B       		.uleb128 0x1b
 3379 0a19 1C000000 		.4byte	.LVL42
 3380 0a1d A8080000 		.4byte	0x8a8
 3381 0a21 1A       		.uleb128 0x1a
 3382 0a22 01       		.uleb128 0x1
 3383 0a23 50       		.byte	0x50
 3384 0a24 02       		.uleb128 0x2
 3385 0a25 76       		.byte	0x76
 3386 0a26 00       		.sleb128 0
 3387 0a27 1A       		.uleb128 0x1a
 3388 0a28 01       		.uleb128 0x1
 3389 0a29 51       		.byte	0x51
 3390 0a2a 02       		.uleb128 0x2
 3391 0a2b 74       		.byte	0x74
 3392 0a2c 00       		.sleb128 0
 3393 0a2d 00       		.byte	0
 3394 0a2e 00       		.byte	0
 3395 0a2f 06       		.uleb128 0x6
 3396 0a30 04       		.byte	0x4
 3397 0a31 D1020000 		.4byte	0x2d1
 3398 0a35 1C       		.uleb128 0x1c
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 115


 3399 0a36 9A010000 		.4byte	.LASF215
 3400 0a3a 01       		.byte	0x1
 3401 0a3b E9       		.byte	0xe9
 3402 0a3c 83000000 		.4byte	0x83
 3403 0a40 00000000 		.4byte	.LFB1
 3404 0a44 10000000 		.4byte	.LFE1-.LFB1
 3405 0a48 01       		.uleb128 0x1
 3406 0a49 9C       		.byte	0x9c
 3407 0a4a 1D       		.uleb128 0x1d
 3408 0a4b 39090000 		.4byte	.LASF135
 3409 0a4f 01       		.byte	0x1
 3410 0a50 1D01     		.2byte	0x11d
 3411 0a52 A4000000 		.4byte	0xa4
 3412 0a56 00000000 		.4byte	.LFB2
 3413 0a5a 64000000 		.4byte	.LFE2-.LFB2
 3414 0a5e 01       		.uleb128 0x1
 3415 0a5f 9C       		.byte	0x9c
 3416 0a60 A30A0000 		.4byte	0xaa3
 3417 0a64 15       		.uleb128 0x15
 3418 0a65 820D0000 		.4byte	.LASF133
 3419 0a69 01       		.byte	0x1
 3420 0a6a 1D01     		.2byte	0x11d
 3421 0a6c 83000000 		.4byte	0x83
 3422 0a70 47020000 		.4byte	.LLST16
 3423 0a74 16       		.uleb128 0x16
 3424 0a75 750D0000 		.4byte	.LASF134
 3425 0a79 01       		.byte	0x1
 3426 0a7a 1F01     		.2byte	0x11f
 3427 0a7c A4000000 		.4byte	0xa4
 3428 0a80 9A020000 		.4byte	.LLST17
 3429 0a84 19       		.uleb128 0x19
 3430 0a85 4A000000 		.4byte	.LVL48
 3431 0a89 EA130000 		.4byte	0x13ea
 3432 0a8d 990A0000 		.4byte	0xa99
 3433 0a91 1A       		.uleb128 0x1a
 3434 0a92 01       		.uleb128 0x1
 3435 0a93 50       		.byte	0x50
 3436 0a94 03       		.uleb128 0x3
 3437 0a95 F3       		.byte	0xf3
 3438 0a96 01       		.uleb128 0x1
 3439 0a97 50       		.byte	0x50
 3440 0a98 00       		.byte	0
 3441 0a99 18       		.uleb128 0x18
 3442 0a9a 50000000 		.4byte	.LVL50
 3443 0a9e F5130000 		.4byte	0x13f5
 3444 0aa2 00       		.byte	0
 3445 0aa3 1D       		.uleb128 0x1d
 3446 0aa4 75060000 		.4byte	.LASF136
 3447 0aa8 01       		.byte	0x1
 3448 0aa9 7001     		.2byte	0x170
 3449 0aab A4000000 		.4byte	0xa4
 3450 0aaf 00000000 		.4byte	.LFB3
 3451 0ab3 38000000 		.4byte	.LFE3-.LFB3
 3452 0ab7 01       		.uleb128 0x1
 3453 0ab8 9C       		.byte	0x9c
 3454 0ab9 E00A0000 		.4byte	0xae0
 3455 0abd 16       		.uleb128 0x16
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 116


 3456 0abe 49000000 		.4byte	.LASF137
 3457 0ac2 01       		.byte	0x1
 3458 0ac3 7201     		.2byte	0x172
 3459 0ac5 A4000000 		.4byte	0xa4
 3460 0ac9 C3020000 		.4byte	.LLST18
 3461 0acd 18       		.uleb128 0x18
 3462 0ace 1A000000 		.4byte	.LVL56
 3463 0ad2 01140000 		.4byte	0x1401
 3464 0ad6 18       		.uleb128 0x18
 3465 0ad7 22000000 		.4byte	.LVL57
 3466 0adb 0C140000 		.4byte	0x140c
 3467 0adf 00       		.byte	0
 3468 0ae0 1D       		.uleb128 0x1d
 3469 0ae1 B90B0000 		.4byte	.LASF138
 3470 0ae5 01       		.byte	0x1
 3471 0ae6 AE01     		.2byte	0x1ae
 3472 0ae8 A4000000 		.4byte	0xa4
 3473 0aec 00000000 		.4byte	.LFB4
 3474 0af0 48000000 		.4byte	.LFE4-.LFB4
 3475 0af4 01       		.uleb128 0x1
 3476 0af5 9C       		.byte	0x9c
 3477 0af6 380B0000 		.4byte	0xb38
 3478 0afa 16       		.uleb128 0x16
 3479 0afb 49000000 		.4byte	.LASF137
 3480 0aff 01       		.byte	0x1
 3481 0b00 B001     		.2byte	0x1b0
 3482 0b02 A4000000 		.4byte	0xa4
 3483 0b06 E2020000 		.4byte	.LLST19
 3484 0b0a 16       		.uleb128 0x16
 3485 0b0b 92070000 		.4byte	.LASF131
 3486 0b0f 01       		.byte	0x1
 3487 0b10 B201     		.2byte	0x1b2
 3488 0b12 83000000 		.4byte	0x83
 3489 0b16 30030000 		.4byte	.LLST20
 3490 0b1a 19       		.uleb128 0x19
 3491 0b1b 18000000 		.4byte	.LVL62
 3492 0b1f 4A0A0000 		.4byte	0xa4a
 3493 0b23 2E0B0000 		.4byte	0xb2e
 3494 0b27 1A       		.uleb128 0x1a
 3495 0b28 01       		.uleb128 0x1
 3496 0b29 50       		.byte	0x50
 3497 0b2a 02       		.uleb128 0x2
 3498 0b2b 74       		.byte	0x74
 3499 0b2c 00       		.sleb128 0
 3500 0b2d 00       		.byte	0
 3501 0b2e 18       		.uleb128 0x18
 3502 0b2f 32000000 		.4byte	.LVL63
 3503 0b33 A30A0000 		.4byte	0xaa3
 3504 0b37 00       		.byte	0
 3505 0b38 1E       		.uleb128 0x1e
 3506 0b39 110B0000 		.4byte	.LASF145
 3507 0b3d 01       		.byte	0x1
 3508 0b3e 8F02     		.2byte	0x28f
 3509 0b40 00000000 		.4byte	.LFB6
 3510 0b44 EC000000 		.4byte	.LFE6-.LFB6
 3511 0b48 01       		.uleb128 0x1
 3512 0b49 9C       		.byte	0x9c
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 117


 3513 0b4a 2A0C0000 		.4byte	0xc2a
 3514 0b4e 15       		.uleb128 0x15
 3515 0b4f 820D0000 		.4byte	.LASF133
 3516 0b53 01       		.byte	0x1
 3517 0b54 8F02     		.2byte	0x28f
 3518 0b56 83000000 		.4byte	0x83
 3519 0b5a 43030000 		.4byte	.LLST21
 3520 0b5e 15       		.uleb128 0x15
 3521 0b5f 3B000000 		.4byte	.LASF139
 3522 0b63 01       		.byte	0x1
 3523 0b64 8F02     		.2byte	0x28f
 3524 0b66 83000000 		.4byte	0x83
 3525 0b6a 64030000 		.4byte	.LLST22
 3526 0b6e 15       		.uleb128 0x15
 3527 0b6f A90B0000 		.4byte	.LASF140
 3528 0b73 01       		.byte	0x1
 3529 0b74 8F02     		.2byte	0x28f
 3530 0b76 83000000 		.4byte	0x83
 3531 0b7a 85030000 		.4byte	.LLST23
 3532 0b7e 1F       		.uleb128 0x1f
 3533 0b7f FF010000 		.4byte	.LASF141
 3534 0b83 01       		.byte	0x1
 3535 0b84 9102     		.2byte	0x291
 3536 0b86 83000000 		.4byte	0x83
 3537 0b8a 01       		.byte	0x1
 3538 0b8b 16       		.uleb128 0x16
 3539 0b8c AF0B0000 		.4byte	.LASF142
 3540 0b90 01       		.byte	0x1
 3541 0b91 9202     		.2byte	0x292
 3542 0b93 83000000 		.4byte	0x83
 3543 0b97 B1030000 		.4byte	.LLST24
 3544 0b9b 16       		.uleb128 0x16
 3545 0b9c 3D010000 		.4byte	.LASF143
 3546 0ba0 01       		.byte	0x1
 3547 0ba1 9302     		.2byte	0x293
 3548 0ba3 6B000000 		.4byte	0x6b
 3549 0ba7 D0030000 		.4byte	.LLST25
 3550 0bab 16       		.uleb128 0x16
 3551 0bac 490B0000 		.4byte	.LASF144
 3552 0bb0 01       		.byte	0x1
 3553 0bb1 9402     		.2byte	0x294
 3554 0bb3 2A0C0000 		.4byte	0xc2a
 3555 0bb7 0F040000 		.4byte	.LLST26
 3556 0bbb 18       		.uleb128 0x18
 3557 0bbc 1C000000 		.4byte	.LVL72
 3558 0bc0 18140000 		.4byte	0x1418
 3559 0bc4 18       		.uleb128 0x18
 3560 0bc5 3C000000 		.4byte	.LVL73
 3561 0bc9 23140000 		.4byte	0x1423
 3562 0bcd 18       		.uleb128 0x18
 3563 0bce 4C000000 		.4byte	.LVL74
 3564 0bd2 18140000 		.4byte	0x1418
 3565 0bd6 18       		.uleb128 0x18
 3566 0bd7 6C000000 		.4byte	.LVL75
 3567 0bdb 23140000 		.4byte	0x1423
 3568 0bdf 18       		.uleb128 0x18
 3569 0be0 72000000 		.4byte	.LVL76
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 118


 3570 0be4 18140000 		.4byte	0x1418
 3571 0be8 18       		.uleb128 0x18
 3572 0be9 84000000 		.4byte	.LVL77
 3573 0bed 23140000 		.4byte	0x1423
 3574 0bf1 19       		.uleb128 0x19
 3575 0bf2 8C000000 		.4byte	.LVL78
 3576 0bf6 2E140000 		.4byte	0x142e
 3577 0bfa 050C0000 		.4byte	0xc05
 3578 0bfe 1A       		.uleb128 0x1a
 3579 0bff 01       		.uleb128 0x1
 3580 0c00 50       		.byte	0x50
 3581 0c01 02       		.uleb128 0x2
 3582 0c02 74       		.byte	0x74
 3583 0c03 00       		.sleb128 0
 3584 0c04 00       		.byte	0
 3585 0c05 18       		.uleb128 0x18
 3586 0c06 92000000 		.4byte	.LVL79
 3587 0c0a 18140000 		.4byte	0x1418
 3588 0c0e 18       		.uleb128 0x18
 3589 0c0f B2000000 		.4byte	.LVL80
 3590 0c13 23140000 		.4byte	0x1423
 3591 0c17 18       		.uleb128 0x18
 3592 0c18 B8000000 		.4byte	.LVL81
 3593 0c1c 18140000 		.4byte	0x1418
 3594 0c20 18       		.uleb128 0x18
 3595 0c21 D8000000 		.4byte	.LVL82
 3596 0c25 23140000 		.4byte	0x1423
 3597 0c29 00       		.byte	0
 3598 0c2a 06       		.uleb128 0x6
 3599 0c2b 04       		.byte	0x4
 3600 0c2c 300C0000 		.4byte	0xc30
 3601 0c30 20       		.uleb128 0x20
 3602 0c31 23070000 		.4byte	0x723
 3603 0c35 1E       		.uleb128 0x1e
 3604 0c36 FF0B0000 		.4byte	.LASF146
 3605 0c3a 01       		.byte	0x1
 3606 0c3b 8B03     		.2byte	0x38b
 3607 0c3d 00000000 		.4byte	.LFB9
 3608 0c41 54000000 		.4byte	.LFE9-.LFB9
 3609 0c45 01       		.uleb128 0x1
 3610 0c46 9C       		.byte	0x9c
 3611 0c47 800C0000 		.4byte	0xc80
 3612 0c4b 15       		.uleb128 0x15
 3613 0c4c 95010000 		.4byte	.LASF147
 3614 0c50 01       		.byte	0x1
 3615 0c51 8B03     		.2byte	0x38b
 3616 0c53 16020000 		.4byte	0x216
 3617 0c57 22040000 		.4byte	.LLST27
 3618 0c5b 18       		.uleb128 0x18
 3619 0c5c 14000000 		.4byte	.LVL89
 3620 0c60 13090000 		.4byte	0x913
 3621 0c64 18       		.uleb128 0x18
 3622 0c65 1E000000 		.4byte	.LVL91
 3623 0c69 43090000 		.4byte	0x943
 3624 0c6d 18       		.uleb128 0x18
 3625 0c6e 26000000 		.4byte	.LVL92
 3626 0c72 3A140000 		.4byte	0x143a
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 119


 3627 0c76 18       		.uleb128 0x18
 3628 0c77 36000000 		.4byte	.LVL93
 3629 0c7b 46140000 		.4byte	0x1446
 3630 0c7f 00       		.byte	0
 3631 0c80 1E       		.uleb128 0x1e
 3632 0c81 6E000000 		.4byte	.LASF148
 3633 0c85 01       		.byte	0x1
 3634 0c86 EE03     		.2byte	0x3ee
 3635 0c88 00000000 		.4byte	.LFB10
 3636 0c8c 40000000 		.4byte	.LFE10-.LFB10
 3637 0c90 01       		.uleb128 0x1
 3638 0c91 9C       		.byte	0x9c
 3639 0c92 C70C0000 		.4byte	0xcc7
 3640 0c96 16       		.uleb128 0x16
 3641 0c97 490B0000 		.4byte	.LASF144
 3642 0c9b 01       		.byte	0x1
 3643 0c9c F003     		.2byte	0x3f0
 3644 0c9e 2A0C0000 		.4byte	0xc2a
 3645 0ca2 5C040000 		.4byte	.LLST28
 3646 0ca6 16       		.uleb128 0x16
 3647 0ca7 2F020000 		.4byte	.LASF149
 3648 0cab 01       		.byte	0x1
 3649 0cac F103     		.2byte	0x3f1
 3650 0cae 83000000 		.4byte	0x83
 3651 0cb2 6F040000 		.4byte	.LLST29
 3652 0cb6 16       		.uleb128 0x16
 3653 0cb7 34010000 		.4byte	.LASF150
 3654 0cbb 01       		.byte	0x1
 3655 0cbc F203     		.2byte	0x3f2
 3656 0cbe 83000000 		.4byte	0x83
 3657 0cc2 8E040000 		.4byte	.LLST30
 3658 0cc6 00       		.byte	0
 3659 0cc7 1E       		.uleb128 0x1e
 3660 0cc8 9A0C0000 		.4byte	.LASF151
 3661 0ccc 01       		.byte	0x1
 3662 0ccd 6404     		.2byte	0x464
 3663 0ccf 00000000 		.4byte	.LFB11
 3664 0cd3 78000000 		.4byte	.LFE11-.LFB11
 3665 0cd7 01       		.uleb128 0x1
 3666 0cd8 9C       		.byte	0x9c
 3667 0cd9 000D0000 		.4byte	0xd00
 3668 0cdd 16       		.uleb128 0x16
 3669 0cde 5F080000 		.4byte	.LASF152
 3670 0ce2 01       		.byte	0x1
 3671 0ce3 6C04     		.2byte	0x46c
 3672 0ce5 A4000000 		.4byte	0xa4
 3673 0ce9 B7040000 		.4byte	.LLST31
 3674 0ced 18       		.uleb128 0x18
 3675 0cee 14000000 		.4byte	.LVL106
 3676 0cf2 4A0A0000 		.4byte	0xa4a
 3677 0cf6 18       		.uleb128 0x18
 3678 0cf7 2A000000 		.4byte	.LVL108
 3679 0cfb A30A0000 		.4byte	0xaa3
 3680 0cff 00       		.byte	0
 3681 0d00 1E       		.uleb128 0x1e
 3682 0d01 A4080000 		.4byte	.LASF153
 3683 0d05 01       		.byte	0x1
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 120


 3684 0d06 B104     		.2byte	0x4b1
 3685 0d08 00000000 		.4byte	.LFB12
 3686 0d0c 08000000 		.4byte	.LFE12-.LFB12
 3687 0d10 01       		.uleb128 0x1
 3688 0d11 9C       		.byte	0x9c
 3689 0d12 380D0000 		.4byte	0xd38
 3690 0d16 15       		.uleb128 0x15
 3691 0d17 21060000 		.4byte	.LASF154
 3692 0d1b 01       		.byte	0x1
 3693 0d1c B104     		.2byte	0x4b1
 3694 0d1e C6000000 		.4byte	0xc6
 3695 0d22 02050000 		.4byte	.LLST32
 3696 0d26 1B       		.uleb128 0x1b
 3697 0d27 06000000 		.4byte	.LVL115
 3698 0d2b 51140000 		.4byte	0x1451
 3699 0d2f 1A       		.uleb128 0x1a
 3700 0d30 01       		.uleb128 0x1
 3701 0d31 50       		.byte	0x50
 3702 0d32 03       		.uleb128 0x3
 3703 0d33 F3       		.byte	0xf3
 3704 0d34 01       		.uleb128 0x1
 3705 0d35 50       		.byte	0x50
 3706 0d36 00       		.byte	0
 3707 0d37 00       		.byte	0
 3708 0d38 1E       		.uleb128 0x1e
 3709 0d39 AA010000 		.4byte	.LASF155
 3710 0d3d 01       		.byte	0x1
 3711 0d3e C804     		.2byte	0x4c8
 3712 0d40 00000000 		.4byte	.LFB13
 3713 0d44 30000000 		.4byte	.LFE13-.LFB13
 3714 0d48 01       		.uleb128 0x1
 3715 0d49 9C       		.byte	0x9c
 3716 0d4a 5F0D0000 		.4byte	0xd5f
 3717 0d4e 15       		.uleb128 0x15
 3718 0d4f 38040000 		.4byte	.LASF156
 3719 0d53 01       		.byte	0x1
 3720 0d54 C804     		.2byte	0x4c8
 3721 0d56 83000000 		.4byte	0x83
 3722 0d5a 23050000 		.4byte	.LLST33
 3723 0d5e 00       		.byte	0
 3724 0d5f 1E       		.uleb128 0x1e
 3725 0d60 9F050000 		.4byte	.LASF157
 3726 0d64 01       		.byte	0x1
 3727 0d65 0C05     		.2byte	0x50c
 3728 0d67 00000000 		.4byte	.LFB14
 3729 0d6b 14000000 		.4byte	.LFE14-.LFB14
 3730 0d6f 01       		.uleb128 0x1
 3731 0d70 9C       		.byte	0x9c
 3732 0d71 960D0000 		.4byte	0xd96
 3733 0d75 15       		.uleb128 0x15
 3734 0d76 F80B0000 		.4byte	.LASF53
 3735 0d7a 01       		.byte	0x1
 3736 0d7b 0C05     		.2byte	0x50c
 3737 0d7d 83000000 		.4byte	0x83
 3738 0d81 51050000 		.4byte	.LLST34
 3739 0d85 16       		.uleb128 0x16
 3740 0d86 D00C0000 		.4byte	.LASF127
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 121


 3741 0d8a 01       		.byte	0x1
 3742 0d8b 0F05     		.2byte	0x50f
 3743 0d8d 83000000 		.4byte	0x83
 3744 0d91 7F050000 		.4byte	.LLST35
 3745 0d95 00       		.byte	0
 3746 0d96 1E       		.uleb128 0x1e
 3747 0d97 34070000 		.4byte	.LASF158
 3748 0d9b 01       		.byte	0x1
 3749 0d9c 6005     		.2byte	0x560
 3750 0d9e 00000000 		.4byte	.LFB15
 3751 0da2 12000000 		.4byte	.LFE15-.LFB15
 3752 0da6 01       		.uleb128 0x1
 3753 0da7 9C       		.byte	0x9c
 3754 0da8 F20D0000 		.4byte	0xdf2
 3755 0dac 15       		.uleb128 0x15
 3756 0dad F80B0000 		.4byte	.LASF53
 3757 0db1 01       		.byte	0x1
 3758 0db2 6005     		.2byte	0x560
 3759 0db4 83000000 		.4byte	0x83
 3760 0db8 A8050000 		.4byte	.LLST36
 3761 0dbc 15       		.uleb128 0x15
 3762 0dbd 38040000 		.4byte	.LASF156
 3763 0dc1 01       		.byte	0x1
 3764 0dc2 6005     		.2byte	0x560
 3765 0dc4 83000000 		.4byte	0x83
 3766 0dc8 D4050000 		.4byte	.LLST37
 3767 0dcc 19       		.uleb128 0x19
 3768 0dcd 0A000000 		.4byte	.LVL127
 3769 0dd1 380D0000 		.4byte	0xd38
 3770 0dd5 E10D0000 		.4byte	0xde1
 3771 0dd9 1A       		.uleb128 0x1a
 3772 0dda 01       		.uleb128 0x1
 3773 0ddb 50       		.byte	0x50
 3774 0ddc 03       		.uleb128 0x3
 3775 0ddd F3       		.byte	0xf3
 3776 0dde 01       		.uleb128 0x1
 3777 0ddf 51       		.byte	0x51
 3778 0de0 00       		.byte	0
 3779 0de1 1B       		.uleb128 0x1b
 3780 0de2 10000000 		.4byte	.LVL128
 3781 0de6 5F0D0000 		.4byte	0xd5f
 3782 0dea 1A       		.uleb128 0x1a
 3783 0deb 01       		.uleb128 0x1
 3784 0dec 50       		.byte	0x50
 3785 0ded 02       		.uleb128 0x2
 3786 0dee 74       		.byte	0x74
 3787 0def 00       		.sleb128 0
 3788 0df0 00       		.byte	0
 3789 0df1 00       		.byte	0
 3790 0df2 1D       		.uleb128 0x1d
 3791 0df3 6B050000 		.4byte	.LASF159
 3792 0df7 01       		.byte	0x1
 3793 0df8 9405     		.2byte	0x594
 3794 0dfa A4000000 		.4byte	0xa4
 3795 0dfe 00000000 		.4byte	.LFB16
 3796 0e02 40000000 		.4byte	.LFE16-.LFB16
 3797 0e06 01       		.uleb128 0x1
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 122


 3798 0e07 9C       		.byte	0x9c
 3799 0e08 5D0E0000 		.4byte	0xe5d
 3800 0e0c 15       		.uleb128 0x15
 3801 0e0d 820D0000 		.4byte	.LASF133
 3802 0e11 01       		.byte	0x1
 3803 0e12 9405     		.2byte	0x594
 3804 0e14 83000000 		.4byte	0x83
 3805 0e18 F5050000 		.4byte	.LLST38
 3806 0e1c 16       		.uleb128 0x16
 3807 0e1d 29060000 		.4byte	.LASF160
 3808 0e21 01       		.byte	0x1
 3809 0e22 9605     		.2byte	0x596
 3810 0e24 A4000000 		.4byte	0xa4
 3811 0e28 21060000 		.4byte	.LLST39
 3812 0e2c 19       		.uleb128 0x19
 3813 0e2d 28000000 		.4byte	.LVL134
 3814 0e31 5C140000 		.4byte	0x145c
 3815 0e35 460E0000 		.4byte	0xe46
 3816 0e39 1A       		.uleb128 0x1a
 3817 0e3a 01       		.uleb128 0x1
 3818 0e3b 50       		.byte	0x50
 3819 0e3c 02       		.uleb128 0x2
 3820 0e3d 75       		.byte	0x75
 3821 0e3e 00       		.sleb128 0
 3822 0e3f 1A       		.uleb128 0x1a
 3823 0e40 01       		.uleb128 0x1
 3824 0e41 51       		.byte	0x51
 3825 0e42 02       		.uleb128 0x2
 3826 0e43 08       		.byte	0x8
 3827 0e44 28       		.byte	0x28
 3828 0e45 00       		.byte	0
 3829 0e46 1B       		.uleb128 0x1b
 3830 0e47 34000000 		.4byte	.LVL135
 3831 0e4b 67140000 		.4byte	0x1467
 3832 0e4f 1A       		.uleb128 0x1a
 3833 0e50 01       		.uleb128 0x1
 3834 0e51 50       		.byte	0x50
 3835 0e52 02       		.uleb128 0x2
 3836 0e53 75       		.byte	0x75
 3837 0e54 00       		.sleb128 0
 3838 0e55 1A       		.uleb128 0x1a
 3839 0e56 01       		.uleb128 0x1
 3840 0e57 51       		.byte	0x51
 3841 0e58 02       		.uleb128 0x2
 3842 0e59 08       		.byte	0x8
 3843 0e5a 55       		.byte	0x55
 3844 0e5b 00       		.byte	0
 3845 0e5c 00       		.byte	0
 3846 0e5d 1D       		.uleb128 0x1d
 3847 0e5e 42060000 		.4byte	.LASF161
 3848 0e62 01       		.byte	0x1
 3849 0e63 0506     		.2byte	0x605
 3850 0e65 A4000000 		.4byte	0xa4
 3851 0e69 00000000 		.4byte	.LFB17
 3852 0e6d 1A000000 		.4byte	.LFE17-.LFB17
 3853 0e71 01       		.uleb128 0x1
 3854 0e72 9C       		.byte	0x9c
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 123


 3855 0e73 A80E0000 		.4byte	0xea8
 3856 0e77 16       		.uleb128 0x16
 3857 0e78 29060000 		.4byte	.LASF160
 3858 0e7c 01       		.byte	0x1
 3859 0e7d 0706     		.2byte	0x607
 3860 0e7f A4000000 		.4byte	0xa4
 3861 0e83 4B060000 		.4byte	.LLST40
 3862 0e87 16       		.uleb128 0x16
 3863 0e88 92070000 		.4byte	.LASF131
 3864 0e8c 01       		.byte	0x1
 3865 0e8d 0806     		.2byte	0x608
 3866 0e8f 83000000 		.4byte	0x83
 3867 0e93 75060000 		.4byte	.LLST41
 3868 0e97 1B       		.uleb128 0x1b
 3869 0e98 0E000000 		.4byte	.LVL141
 3870 0e9c F20D0000 		.4byte	0xdf2
 3871 0ea0 1A       		.uleb128 0x1a
 3872 0ea1 01       		.uleb128 0x1
 3873 0ea2 50       		.byte	0x50
 3874 0ea3 02       		.uleb128 0x2
 3875 0ea4 74       		.byte	0x74
 3876 0ea5 00       		.sleb128 0
 3877 0ea6 00       		.byte	0
 3878 0ea7 00       		.byte	0
 3879 0ea8 1E       		.uleb128 0x1e
 3880 0ea9 5E020000 		.4byte	.LASF162
 3881 0ead 01       		.byte	0x1
 3882 0eae 080A     		.2byte	0xa08
 3883 0eb0 00000000 		.4byte	.LFB24
 3884 0eb4 48000000 		.4byte	.LFE24-.LFB24
 3885 0eb8 01       		.uleb128 0x1
 3886 0eb9 9C       		.byte	0x9c
 3887 0eba 090F0000 		.4byte	0xf09
 3888 0ebe 16       		.uleb128 0x16
 3889 0ebf 92070000 		.4byte	.LASF131
 3890 0ec3 01       		.byte	0x1
 3891 0ec4 0A0A     		.2byte	0xa0a
 3892 0ec6 83000000 		.4byte	0x83
 3893 0eca 94060000 		.4byte	.LLST42
 3894 0ece 16       		.uleb128 0x16
 3895 0ecf 9C070000 		.4byte	.LASF163
 3896 0ed3 01       		.byte	0x1
 3897 0ed4 0B0A     		.2byte	0xa0b
 3898 0ed6 83000000 		.4byte	0x83
 3899 0eda B3060000 		.4byte	.LLST43
 3900 0ede 16       		.uleb128 0x16
 3901 0edf EC0B0000 		.4byte	.LASF164
 3902 0ee3 01       		.byte	0x1
 3903 0ee4 170A     		.2byte	0xa17
 3904 0ee6 2A0C0000 		.4byte	0xc2a
 3905 0eea D2060000 		.4byte	.LLST44
 3906 0eee 1B       		.uleb128 0x1b
 3907 0eef 2A000000 		.4byte	.LVL150
 3908 0ef3 73140000 		.4byte	0x1473
 3909 0ef7 1A       		.uleb128 0x1a
 3910 0ef8 01       		.uleb128 0x1
 3911 0ef9 50       		.byte	0x50
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 124


 3912 0efa 0C       		.uleb128 0xc
 3913 0efb 74       		.byte	0x74
 3914 0efc 00       		.sleb128 0
 3915 0efd 33       		.byte	0x33
 3916 0efe 24       		.byte	0x24
 3917 0eff 74       		.byte	0x74
 3918 0f00 00       		.sleb128 0
 3919 0f01 1C       		.byte	0x1c
 3920 0f02 32       		.byte	0x32
 3921 0f03 24       		.byte	0x24
 3922 0f04 76       		.byte	0x76
 3923 0f05 00       		.sleb128 0
 3924 0f06 22       		.byte	0x22
 3925 0f07 00       		.byte	0
 3926 0f08 00       		.byte	0
 3927 0f09 1D       		.uleb128 0x1d
 3928 0f0a 19000000 		.4byte	.LASF165
 3929 0f0e 01       		.byte	0x1
 3930 0f0f 5A0A     		.2byte	0xa5a
 3931 0f11 83000000 		.4byte	0x83
 3932 0f15 00000000 		.4byte	.LFB25
 3933 0f19 14000000 		.4byte	.LFE25-.LFB25
 3934 0f1d 01       		.uleb128 0x1
 3935 0f1e 9C       		.byte	0x9c
 3936 0f1f 500F0000 		.4byte	0xf50
 3937 0f23 15       		.uleb128 0x15
 3938 0f24 820D0000 		.4byte	.LASF133
 3939 0f28 01       		.byte	0x1
 3940 0f29 5A0A     		.2byte	0xa5a
 3941 0f2b 83000000 		.4byte	0x83
 3942 0f2f E5060000 		.4byte	.LLST45
 3943 0f33 21       		.uleb128 0x21
 3944 0f34 670A0000 		.4byte	.LASF166
 3945 0f38 01       		.byte	0x1
 3946 0f39 5C0A     		.2byte	0xa5c
 3947 0f3b 83000000 		.4byte	0x83
 3948 0f3f 01       		.uleb128 0x1
 3949 0f40 50       		.byte	0x50
 3950 0f41 21       		.uleb128 0x21
 3951 0f42 07020000 		.4byte	.LASF132
 3952 0f46 01       		.byte	0x1
 3953 0f47 600A     		.2byte	0xa60
 3954 0f49 2F0A0000 		.4byte	0xa2f
 3955 0f4d 01       		.uleb128 0x1
 3956 0f4e 53       		.byte	0x53
 3957 0f4f 00       		.byte	0
 3958 0f50 1D       		.uleb128 0x1d
 3959 0f51 0E040000 		.4byte	.LASF167
 3960 0f55 01       		.byte	0x1
 3961 0f56 B10A     		.2byte	0xab1
 3962 0f58 6B000000 		.4byte	0x6b
 3963 0f5c 00000000 		.4byte	.LFB26
 3964 0f60 24000000 		.4byte	.LFE26-.LFB26
 3965 0f64 01       		.uleb128 0x1
 3966 0f65 9C       		.byte	0x9c
 3967 0f66 A60F0000 		.4byte	0xfa6
 3968 0f6a 15       		.uleb128 0x15
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 125


 3969 0f6b 500D0000 		.4byte	.LASF119
 3970 0f6f 01       		.byte	0x1
 3971 0f70 B10A     		.2byte	0xab1
 3972 0f72 83000000 		.4byte	0x83
 3973 0f76 06070000 		.4byte	.LLST46
 3974 0f7a 22       		.uleb128 0x22
 3975 0f7b 59050000 		.4byte	.LASF45
 3976 0f7f 01       		.byte	0x1
 3977 0f80 B10A     		.2byte	0xab1
 3978 0f82 83000000 		.4byte	0x83
 3979 0f86 01       		.uleb128 0x1
 3980 0f87 51       		.byte	0x51
 3981 0f88 16       		.uleb128 0x16
 3982 0f89 3C0A0000 		.4byte	.LASF168
 3983 0f8d 01       		.byte	0x1
 3984 0f8e B30A     		.2byte	0xab3
 3985 0f90 83000000 		.4byte	0x83
 3986 0f94 40070000 		.4byte	.LLST47
 3987 0f98 1F       		.uleb128 0x1f
 3988 0f99 5E0D0000 		.4byte	.LASF169
 3989 0f9d 01       		.byte	0x1
 3990 0f9e B40A     		.2byte	0xab4
 3991 0fa0 83000000 		.4byte	0x83
 3992 0fa4 01       		.byte	0x1
 3993 0fa5 00       		.byte	0
 3994 0fa6 17       		.uleb128 0x17
 3995 0fa7 0F020000 		.4byte	.LASF170
 3996 0fab 01       		.byte	0x1
 3997 0fac C008     		.2byte	0x8c0
 3998 0fae 00000000 		.4byte	.LFB20
 3999 0fb2 3A000000 		.4byte	.LFE20-.LFB20
 4000 0fb6 01       		.uleb128 0x1
 4001 0fb7 9C       		.byte	0x9c
 4002 0fb8 8B100000 		.4byte	0x108b
 4003 0fbc 15       		.uleb128 0x15
 4004 0fbd 92070000 		.4byte	.LASF131
 4005 0fc1 01       		.byte	0x1
 4006 0fc2 C008     		.2byte	0x8c0
 4007 0fc4 83000000 		.4byte	0x83
 4008 0fc8 53070000 		.4byte	.LLST48
 4009 0fcc 15       		.uleb128 0x15
 4010 0fcd 07020000 		.4byte	.LASF132
 4011 0fd1 01       		.byte	0x1
 4012 0fd2 C008     		.2byte	0x8c0
 4013 0fd4 2F0A0000 		.4byte	0xa2f
 4014 0fd8 74070000 		.4byte	.LLST49
 4015 0fdc 16       		.uleb128 0x16
 4016 0fdd D4030000 		.4byte	.LASF123
 4017 0fe1 01       		.byte	0x1
 4018 0fe2 C208     		.2byte	0x8c2
 4019 0fe4 6B000000 		.4byte	0x6b
 4020 0fe8 A0070000 		.4byte	.LLST50
 4021 0fec 16       		.uleb128 0x16
 4022 0fed 4C010000 		.4byte	.LASF124
 4023 0ff1 01       		.byte	0x1
 4024 0ff2 C308     		.2byte	0x8c3
 4025 0ff4 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 126


 4026 0ff8 BE070000 		.4byte	.LLST51
 4027 0ffc 16       		.uleb128 0x16
 4028 0ffd 36050000 		.4byte	.LASF120
 4029 1001 01       		.byte	0x1
 4030 1002 C708     		.2byte	0x8c7
 4031 1004 83000000 		.4byte	0x83
 4032 1008 D1070000 		.4byte	.LLST52
 4033 100c 16       		.uleb128 0x16
 4034 100d 500D0000 		.4byte	.LASF119
 4035 1011 01       		.byte	0x1
 4036 1012 C908     		.2byte	0x8c9
 4037 1014 83000000 		.4byte	0x83
 4038 1018 EF070000 		.4byte	.LLST53
 4039 101c 19       		.uleb128 0x19
 4040 101d 08000000 		.4byte	.LVL166
 4041 1021 090F0000 		.4byte	0xf09
 4042 1025 31100000 		.4byte	0x1031
 4043 1029 1A       		.uleb128 0x1a
 4044 102a 01       		.uleb128 0x1
 4045 102b 50       		.byte	0x50
 4046 102c 03       		.uleb128 0x3
 4047 102d F3       		.byte	0xf3
 4048 102e 01       		.uleb128 0x1
 4049 102f 50       		.byte	0x50
 4050 1030 00       		.byte	0
 4051 1031 19       		.uleb128 0x19
 4052 1032 12000000 		.4byte	.LVL168
 4053 1036 7F140000 		.4byte	0x147f
 4054 103a 4A100000 		.4byte	0x104a
 4055 103e 1A       		.uleb128 0x1a
 4056 103f 01       		.uleb128 0x1
 4057 1040 50       		.byte	0x50
 4058 1041 02       		.uleb128 0x2
 4059 1042 75       		.byte	0x75
 4060 1043 00       		.sleb128 0
 4061 1044 1A       		.uleb128 0x1a
 4062 1045 01       		.uleb128 0x1
 4063 1046 52       		.byte	0x52
 4064 1047 01       		.uleb128 0x1
 4065 1048 30       		.byte	0x30
 4066 1049 00       		.byte	0
 4067 104a 19       		.uleb128 0x19
 4068 104b 1A000000 		.4byte	.LVL171
 4069 104f 5D080000 		.4byte	0x85d
 4070 1053 5E100000 		.4byte	0x105e
 4071 1057 1A       		.uleb128 0x1a
 4072 1058 01       		.uleb128 0x1
 4073 1059 50       		.byte	0x50
 4074 105a 02       		.uleb128 0x2
 4075 105b 75       		.byte	0x75
 4076 105c 00       		.sleb128 0
 4077 105d 00       		.byte	0
 4078 105e 19       		.uleb128 0x19
 4079 105f 26000000 		.4byte	.LVL174
 4080 1063 500F0000 		.4byte	0xf50
 4081 1067 74100000 		.4byte	0x1074
 4082 106b 1A       		.uleb128 0x1a
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 127


 4083 106c 01       		.uleb128 0x1
 4084 106d 50       		.byte	0x50
 4085 106e 04       		.uleb128 0x4
 4086 106f 75       		.byte	0x75
 4087 1070 00       		.sleb128 0
 4088 1071 31       		.byte	0x31
 4089 1072 24       		.byte	0x24
 4090 1073 00       		.byte	0
 4091 1074 1B       		.uleb128 0x1b
 4092 1075 30000000 		.4byte	.LVL176
 4093 1079 A8080000 		.4byte	0x8a8
 4094 107d 1A       		.uleb128 0x1a
 4095 107e 01       		.uleb128 0x1
 4096 107f 50       		.byte	0x50
 4097 1080 02       		.uleb128 0x2
 4098 1081 75       		.byte	0x75
 4099 1082 00       		.sleb128 0
 4100 1083 1A       		.uleb128 0x1a
 4101 1084 01       		.uleb128 0x1
 4102 1085 51       		.byte	0x51
 4103 1086 02       		.uleb128 0x2
 4104 1087 74       		.byte	0x74
 4105 1088 00       		.sleb128 0
 4106 1089 00       		.byte	0
 4107 108a 00       		.byte	0
 4108 108b 23       		.uleb128 0x23
 4109 108c 45050000 		.4byte	.LASF171
 4110 1090 01       		.byte	0x1
 4111 1091 2906     		.2byte	0x629
 4112 1093 A4000000 		.4byte	0xa4
 4113 1097 00000000 		.4byte	.LFB18
 4114 109b 68010000 		.4byte	.LFE18-.LFB18
 4115 109f 01       		.uleb128 0x1
 4116 10a0 9C       		.byte	0x9c
 4117 10a1 94110000 		.4byte	0x1194
 4118 10a5 16       		.uleb128 0x16
 4119 10a6 DD030000 		.4byte	.LASF172
 4120 10aa 01       		.byte	0x1
 4121 10ab 2B06     		.2byte	0x62b
 4122 10ad A4000000 		.4byte	0xa4
 4123 10b1 0D080000 		.4byte	.LLST54
 4124 10b5 16       		.uleb128 0x16
 4125 10b6 92070000 		.4byte	.LASF131
 4126 10ba 01       		.byte	0x1
 4127 10bb 2C06     		.2byte	0x62c
 4128 10bd 83000000 		.4byte	0x83
 4129 10c1 42080000 		.4byte	.LLST55
 4130 10c5 24       		.uleb128 0x24
 4131 10c6 637000   		.ascii	"cp\000"
 4132 10c9 01       		.byte	0x1
 4133 10ca 2E06     		.2byte	0x62e
 4134 10cc 83000000 		.4byte	0x83
 4135 10d0 77080000 		.4byte	.LLST56
 4136 10d4 21       		.uleb128 0x21
 4137 10d5 F6010000 		.4byte	.LASF173
 4138 10d9 01       		.byte	0x1
 4139 10da 3306     		.2byte	0x633
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 128


 4140 10dc 94110000 		.4byte	0x1194
 4141 10e0 02       		.uleb128 0x2
 4142 10e1 91       		.byte	0x91
 4143 10e2 58       		.sleb128 -40
 4144 10e3 16       		.uleb128 0x16
 4145 10e4 07020000 		.4byte	.LASF132
 4146 10e8 01       		.byte	0x1
 4147 10e9 3406     		.2byte	0x634
 4148 10eb 2F0A0000 		.4byte	0xa2f
 4149 10ef 96080000 		.4byte	.LLST57
 4150 10f3 21       		.uleb128 0x21
 4151 10f4 CD040000 		.4byte	.LASF174
 4152 10f8 01       		.byte	0x1
 4153 10f9 3506     		.2byte	0x635
 4154 10fb 78010000 		.4byte	0x178
 4155 10ff 03       		.uleb128 0x3
 4156 1100 91       		.byte	0x91
 4157 1101 BC7F     		.sleb128 -68
 4158 1103 18       		.uleb128 0x18
 4159 1104 26000000 		.4byte	.LVL183
 4160 1108 3A140000 		.4byte	0x143a
 4161 110c 19       		.uleb128 0x19
 4162 110d 5E000000 		.4byte	.LVL187
 4163 1111 67140000 		.4byte	0x1467
 4164 1115 26110000 		.4byte	0x1126
 4165 1119 1A       		.uleb128 0x1a
 4166 111a 01       		.uleb128 0x1
 4167 111b 50       		.byte	0x50
 4168 111c 02       		.uleb128 0x2
 4169 111d 75       		.byte	0x75
 4170 111e 00       		.sleb128 0
 4171 111f 1A       		.uleb128 0x1a
 4172 1120 01       		.uleb128 0x1
 4173 1121 51       		.byte	0x51
 4174 1122 02       		.uleb128 0x2
 4175 1123 08       		.byte	0x8
 4176 1124 55       		.byte	0x55
 4177 1125 00       		.byte	0
 4178 1126 19       		.uleb128 0x19
 4179 1127 82000000 		.4byte	.LVL189
 4180 112b 8B140000 		.4byte	0x148b
 4181 112f 3A110000 		.4byte	0x113a
 4182 1133 1A       		.uleb128 0x1a
 4183 1134 01       		.uleb128 0x1
 4184 1135 50       		.byte	0x50
 4185 1136 02       		.uleb128 0x2
 4186 1137 77       		.byte	0x77
 4187 1138 00       		.sleb128 0
 4188 1139 00       		.byte	0
 4189 113a 19       		.uleb128 0x19
 4190 113b DA000000 		.4byte	.LVL197
 4191 113f 67140000 		.4byte	0x1467
 4192 1143 54110000 		.4byte	0x1154
 4193 1147 1A       		.uleb128 0x1a
 4194 1148 01       		.uleb128 0x1
 4195 1149 50       		.byte	0x50
 4196 114a 02       		.uleb128 0x2
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 129


 4197 114b 74       		.byte	0x74
 4198 114c 00       		.sleb128 0
 4199 114d 1A       		.uleb128 0x1a
 4200 114e 01       		.uleb128 0x1
 4201 114f 51       		.byte	0x51
 4202 1150 02       		.uleb128 0x2
 4203 1151 08       		.byte	0x8
 4204 1152 55       		.byte	0x55
 4205 1153 00       		.byte	0
 4206 1154 19       		.uleb128 0x19
 4207 1155 00010000 		.4byte	.LVL199
 4208 1159 96140000 		.4byte	0x1496
 4209 115d 69110000 		.4byte	0x1169
 4210 1161 1A       		.uleb128 0x1a
 4211 1162 01       		.uleb128 0x1
 4212 1163 50       		.byte	0x50
 4213 1164 03       		.uleb128 0x3
 4214 1165 91       		.byte	0x91
 4215 1166 BC7F     		.sleb128 -68
 4216 1168 00       		.byte	0
 4217 1169 19       		.uleb128 0x19
 4218 116a 28010000 		.4byte	.LVL205
 4219 116e A60F0000 		.4byte	0xfa6
 4220 1172 7D110000 		.4byte	0x117d
 4221 1176 1A       		.uleb128 0x1a
 4222 1177 01       		.uleb128 0x1
 4223 1178 50       		.byte	0x50
 4224 1179 02       		.uleb128 0x2
 4225 117a 74       		.byte	0x74
 4226 117b 00       		.sleb128 0
 4227 117c 00       		.byte	0
 4228 117d 1B       		.uleb128 0x1b
 4229 117e 30010000 		.4byte	.LVL206
 4230 1182 67140000 		.4byte	0x1467
 4231 1186 1A       		.uleb128 0x1a
 4232 1187 01       		.uleb128 0x1
 4233 1188 50       		.byte	0x50
 4234 1189 02       		.uleb128 0x2
 4235 118a 74       		.byte	0x74
 4236 118b 00       		.sleb128 0
 4237 118c 1A       		.uleb128 0x1a
 4238 118d 01       		.uleb128 0x1
 4239 118e 51       		.byte	0x51
 4240 118f 02       		.uleb128 0x2
 4241 1190 08       		.byte	0x8
 4242 1191 55       		.byte	0x55
 4243 1192 00       		.byte	0
 4244 1193 00       		.byte	0
 4245 1194 0D       		.uleb128 0xd
 4246 1195 83000000 		.4byte	0x83
 4247 1199 A4110000 		.4byte	0x11a4
 4248 119d 0E       		.uleb128 0xe
 4249 119e CA020000 		.4byte	0x2ca
 4250 11a2 03       		.byte	0x3
 4251 11a3 00       		.byte	0
 4252 11a4 1E       		.uleb128 0x1e
 4253 11a5 A90D0000 		.4byte	.LASF175
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 130


 4254 11a9 01       		.byte	0x1
 4255 11aa 8B08     		.2byte	0x88b
 4256 11ac 00000000 		.4byte	.LFB19
 4257 11b0 38000000 		.4byte	.LFE19-.LFB19
 4258 11b4 01       		.uleb128 0x1
 4259 11b5 9C       		.byte	0x9c
 4260 11b6 FF110000 		.4byte	0x11ff
 4261 11ba 16       		.uleb128 0x16
 4262 11bb 92070000 		.4byte	.LASF131
 4263 11bf 01       		.byte	0x1
 4264 11c0 8D08     		.2byte	0x88d
 4265 11c2 83000000 		.4byte	0x83
 4266 11c6 BF080000 		.4byte	.LLST58
 4267 11ca 16       		.uleb128 0x16
 4268 11cb 07020000 		.4byte	.LASF132
 4269 11cf 01       		.byte	0x1
 4270 11d0 8E08     		.2byte	0x88e
 4271 11d2 2F0A0000 		.4byte	0xa2f
 4272 11d6 DE080000 		.4byte	.LLST59
 4273 11da 19       		.uleb128 0x19
 4274 11db 22000000 		.4byte	.LVL214
 4275 11df A60F0000 		.4byte	0xfa6
 4276 11e3 EE110000 		.4byte	0x11ee
 4277 11e7 1A       		.uleb128 0x1a
 4278 11e8 01       		.uleb128 0x1
 4279 11e9 50       		.byte	0x50
 4280 11ea 02       		.uleb128 0x2
 4281 11eb 74       		.byte	0x74
 4282 11ec 00       		.sleb128 0
 4283 11ed 00       		.byte	0
 4284 11ee 1B       		.uleb128 0x1b
 4285 11ef 2A000000 		.4byte	.LVL216
 4286 11f3 73090000 		.4byte	0x973
 4287 11f7 1A       		.uleb128 0x1a
 4288 11f8 01       		.uleb128 0x1
 4289 11f9 50       		.byte	0x50
 4290 11fa 02       		.uleb128 0x2
 4291 11fb 74       		.byte	0x74
 4292 11fc 00       		.sleb128 0
 4293 11fd 00       		.byte	0
 4294 11fe 00       		.byte	0
 4295 11ff 1D       		.uleb128 0x1d
 4296 1200 27080000 		.4byte	.LASF176
 4297 1204 01       		.byte	0x1
 4298 1205 0402     		.2byte	0x204
 4299 1207 A4000000 		.4byte	0xa4
 4300 120b 00000000 		.4byte	.LFB5
 4301 120f 14000000 		.4byte	.LFE5-.LFB5
 4302 1213 01       		.uleb128 0x1
 4303 1214 9C       		.byte	0x9c
 4304 1215 48120000 		.4byte	0x1248
 4305 1219 1F       		.uleb128 0x1f
 4306 121a 29010000 		.4byte	.LASF177
 4307 121e 01       		.byte	0x1
 4308 121f 0602     		.2byte	0x206
 4309 1221 A4000000 		.4byte	0xa4
 4310 1225 00       		.byte	0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 131


 4311 1226 18       		.uleb128 0x18
 4312 1227 06000000 		.4byte	.LVL220
 4313 122b A4110000 		.4byte	0x11a4
 4314 122f 18       		.uleb128 0x18
 4315 1230 0A000000 		.4byte	.LVL221
 4316 1234 800C0000 		.4byte	0xc80
 4317 1238 1B       		.uleb128 0x1b
 4318 1239 10000000 		.4byte	.LVL222
 4319 123d 350C0000 		.4byte	0xc35
 4320 1241 1A       		.uleb128 0x1a
 4321 1242 01       		.uleb128 0x1
 4322 1243 50       		.byte	0x50
 4323 1244 01       		.uleb128 0x1
 4324 1245 30       		.byte	0x30
 4325 1246 00       		.byte	0
 4326 1247 00       		.byte	0
 4327 1248 1E       		.uleb128 0x1e
 4328 1249 8E000000 		.4byte	.LASF178
 4329 124d 01       		.byte	0x1
 4330 124e E10A     		.2byte	0xae1
 4331 1250 00000000 		.4byte	.LFB27
 4332 1254 68000000 		.4byte	.LFE27-.LFB27
 4333 1258 01       		.uleb128 0x1
 4334 1259 9C       		.byte	0x9c
 4335 125a DA120000 		.4byte	0x12da
 4336 125e 16       		.uleb128 0x16
 4337 125f D00C0000 		.4byte	.LASF127
 4338 1263 01       		.byte	0x1
 4339 1264 E30A     		.2byte	0xae3
 4340 1266 83000000 		.4byte	0x83
 4341 126a FC080000 		.4byte	.LLST60
 4342 126e 16       		.uleb128 0x16
 4343 126f 3D010000 		.4byte	.LASF143
 4344 1273 01       		.byte	0x1
 4345 1274 E40A     		.2byte	0xae4
 4346 1276 6B000000 		.4byte	0x6b
 4347 127a 46090000 		.4byte	.LLST61
 4348 127e 18       		.uleb128 0x18
 4349 127f 06000000 		.4byte	.LVL223
 4350 1283 18140000 		.4byte	0x1418
 4351 1287 18       		.uleb128 0x18
 4352 1288 14000000 		.4byte	.LVL226
 4353 128c 23140000 		.4byte	0x1423
 4354 1290 18       		.uleb128 0x18
 4355 1291 18000000 		.4byte	.LVL227
 4356 1295 18140000 		.4byte	0x1418
 4357 1299 18       		.uleb128 0x18
 4358 129a 26000000 		.4byte	.LVL230
 4359 129e 23140000 		.4byte	0x1423
 4360 12a2 18       		.uleb128 0x18
 4361 12a3 2A000000 		.4byte	.LVL231
 4362 12a7 18140000 		.4byte	0x1418
 4363 12ab 18       		.uleb128 0x18
 4364 12ac 3E000000 		.4byte	.LVL235
 4365 12b0 23140000 		.4byte	0x1423
 4366 12b4 19       		.uleb128 0x19
 4367 12b5 44000000 		.4byte	.LVL236
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 132


 4368 12b9 A1140000 		.4byte	0x14a1
 4369 12bd C7120000 		.4byte	0x12c7
 4370 12c1 1A       		.uleb128 0x1a
 4371 12c2 01       		.uleb128 0x1
 4372 12c3 50       		.byte	0x50
 4373 12c4 01       		.uleb128 0x1
 4374 12c5 31       		.byte	0x31
 4375 12c6 00       		.byte	0
 4376 12c7 18       		.uleb128 0x18
 4377 12c8 48000000 		.4byte	.LVL237
 4378 12cc 18140000 		.4byte	0x1418
 4379 12d0 18       		.uleb128 0x18
 4380 12d1 52000000 		.4byte	.LVL240
 4381 12d5 23140000 		.4byte	0x1423
 4382 12d9 00       		.byte	0
 4383 12da 25       		.uleb128 0x25
 4384 12db 83060000 		.4byte	.LASF179
 4385 12df 05       		.byte	0x5
 4386 12e0 B104     		.2byte	0x4b1
 4387 12e2 92060000 		.4byte	0x692
 4388 12e6 25       		.uleb128 0x25
 4389 12e7 86090000 		.4byte	.LASF180
 4390 12eb 05       		.byte	0x5
 4391 12ec B204     		.2byte	0x4b2
 4392 12ee F2120000 		.4byte	0x12f2
 4393 12f2 20       		.uleb128 0x20
 4394 12f3 4A080000 		.4byte	0x84a
 4395 12f7 0D       		.uleb128 0xd
 4396 12f8 300C0000 		.4byte	0xc30
 4397 12fc 07130000 		.4byte	0x1307
 4398 1300 0E       		.uleb128 0xe
 4399 1301 CA020000 		.4byte	0x2ca
 4400 1305 0A       		.byte	0xa
 4401 1306 00       		.byte	0
 4402 1307 25       		.uleb128 0x25
 4403 1308 AC090000 		.4byte	.LASF181
 4404 130c 05       		.byte	0x5
 4405 130d B304     		.2byte	0x4b3
 4406 130f 13130000 		.4byte	0x1313
 4407 1313 20       		.uleb128 0x20
 4408 1314 F7120000 		.4byte	0x12f7
 4409 1318 26       		.uleb128 0x26
 4410 1319 C9000000 		.4byte	.LASF182
 4411 131d 01       		.byte	0x1
 4412 131e BB       		.byte	0xbb
 4413 131f B0000000 		.4byte	0xb0
 4414 1323 05       		.uleb128 0x5
 4415 1324 03       		.byte	0x3
 4416 1325 00000000 		.4byte	CapSense_widgetIndex
 4417 1329 26       		.uleb128 0x26
 4418 132a 7E030000 		.4byte	.LASF183
 4419 132e 01       		.byte	0x1
 4420 132f BC       		.byte	0xbc
 4421 1330 B0000000 		.4byte	0xb0
 4422 1334 05       		.uleb128 0x5
 4423 1335 03       		.byte	0x3
 4424 1336 00000000 		.4byte	CapSense_sensorIndex
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 133


 4425 133a 26       		.uleb128 0x26
 4426 133b 8B0D0000 		.4byte	.LASF184
 4427 133f 01       		.byte	0x1
 4428 1340 BD       		.byte	0xbd
 4429 1341 6B000000 		.4byte	0x6b
 4430 1345 05       		.uleb128 0x5
 4431 1346 03       		.byte	0x3
 4432 1347 00000000 		.4byte	CapSense_requestScanAllWidget
 4433 134b 26       		.uleb128 0x26
 4434 134c 330C0000 		.4byte	.LASF185
 4435 1350 01       		.byte	0x1
 4436 1351 C0       		.byte	0xc0
 4437 1352 05080000 		.4byte	0x805
 4438 1356 05       		.uleb128 0x5
 4439 1357 03       		.byte	0x3
 4440 1358 00000000 		.4byte	CapSense_curRamSnsPtr
 4441 135c 26       		.uleb128 0x26
 4442 135d 200A0000 		.4byte	.LASF186
 4443 1361 01       		.byte	0x1
 4444 1362 AE       		.byte	0xae
 4445 1363 16020000 		.4byte	0x216
 4446 1367 05       		.uleb128 0x5
 4447 1368 03       		.byte	0x3
 4448 1369 00000000 		.4byte	CapSense_currentSenseMethod
 4449 136d 26       		.uleb128 0x26
 4450 136e 550C0000 		.4byte	.LASF187
 4451 1372 01       		.byte	0x1
 4452 1373 B7       		.byte	0xb7
 4453 1374 7E130000 		.4byte	0x137e
 4454 1378 05       		.uleb128 0x5
 4455 1379 03       		.byte	0x3
 4456 137a 00000000 		.4byte	CapSense_scanFreqIndex
 4457 137e 20       		.uleb128 0x20
 4458 137f 6B000000 		.4byte	0x6b
 4459 1383 26       		.uleb128 0x26
 4460 1384 00000000 		.4byte	.LASF188
 4461 1388 01       		.byte	0x1
 4462 1389 C6       		.byte	0xc6
 4463 138a 94130000 		.4byte	0x1394
 4464 138e 05       		.uleb128 0x5
 4465 138f 03       		.byte	0x3
 4466 1390 00000000 		.4byte	CapSense_curFlashWdgtPtr
 4467 1394 06       		.uleb128 0x6
 4468 1395 04       		.byte	0x4
 4469 1396 9A130000 		.4byte	0x139a
 4470 139a 20       		.uleb128 0x20
 4471 139b 17080000 		.4byte	0x817
 4472 139f 26       		.uleb128 0x26
 4473 13a0 1A070000 		.4byte	.LASF189
 4474 13a4 01       		.byte	0x1
 4475 13a5 CF       		.byte	0xcf
 4476 13a6 2A0C0000 		.4byte	0xc2a
 4477 13aa 05       		.uleb128 0x5
 4478 13ab 03       		.byte	0x3
 4479 13ac 00000000 		.4byte	CapSense_curSnsIOPtr
 4480 13b0 25       		.uleb128 0x25
 4481 13b1 3D080000 		.4byte	.LASF190
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 134


 4482 13b5 06       		.byte	0x6
 4483 13b6 A501     		.2byte	0x1a5
 4484 13b8 6B000000 		.4byte	0x6b
 4485 13bc 25       		.uleb128 0x25
 4486 13bd 6A090000 		.4byte	.LASF191
 4487 13c1 06       		.byte	0x6
 4488 13c2 A601     		.2byte	0x1a6
 4489 13c4 77000000 		.4byte	0x77
 4490 13c8 27       		.uleb128 0x27
 4491 13c9 7B080000 		.4byte	.LASF192
 4492 13cd 7B080000 		.4byte	.LASF192
 4493 13d1 06       		.byte	0x6
 4494 13d2 D401     		.2byte	0x1d4
 4495 13d4 28       		.uleb128 0x28
 4496 13d5 E8060000 		.4byte	.LASF193
 4497 13d9 E8060000 		.4byte	.LASF193
 4498 13dd 07       		.byte	0x7
 4499 13de 54       		.byte	0x54
 4500 13df 28       		.uleb128 0x28
 4501 13e0 E60C0000 		.4byte	.LASF194
 4502 13e4 E60C0000 		.4byte	.LASF194
 4503 13e8 07       		.byte	0x7
 4504 13e9 55       		.byte	0x55
 4505 13ea 28       		.uleb128 0x28
 4506 13eb 3D030000 		.4byte	.LASF195
 4507 13ef 3D030000 		.4byte	.LASF195
 4508 13f3 07       		.byte	0x7
 4509 13f4 39       		.byte	0x39
 4510 13f5 27       		.uleb128 0x27
 4511 13f6 25030000 		.4byte	.LASF196
 4512 13fa 25030000 		.4byte	.LASF196
 4513 13fe 06       		.byte	0x6
 4514 13ff B701     		.2byte	0x1b7
 4515 1401 28       		.uleb128 0x28
 4516 1402 DB0B0000 		.4byte	.LASF197
 4517 1406 DB0B0000 		.4byte	.LASF197
 4518 140a 07       		.byte	0x7
 4519 140b 3B       		.byte	0x3b
 4520 140c 27       		.uleb128 0x27
 4521 140d 730B0000 		.4byte	.LASF198
 4522 1411 730B0000 		.4byte	.LASF198
 4523 1415 06       		.byte	0x6
 4524 1416 B901     		.2byte	0x1b9
 4525 1418 28       		.uleb128 0x28
 4526 1419 1C0C0000 		.4byte	.LASF199
 4527 141d 1C0C0000 		.4byte	.LASF199
 4528 1421 08       		.byte	0x8
 4529 1422 E5       		.byte	0xe5
 4530 1423 28       		.uleb128 0x28
 4531 1424 E9040000 		.4byte	.LASF200
 4532 1428 E9040000 		.4byte	.LASF200
 4533 142c 08       		.byte	0x8
 4534 142d E6       		.byte	0xe6
 4535 142e 27       		.uleb128 0x27
 4536 142f A00A0000 		.4byte	.LASF201
 4537 1433 A00A0000 		.4byte	.LASF201
 4538 1437 06       		.byte	0x6
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 135


 4539 1438 C001     		.2byte	0x1c0
 4540 143a 27       		.uleb128 0x27
 4541 143b FD050000 		.4byte	.LASF202
 4542 143f FD050000 		.4byte	.LASF202
 4543 1443 06       		.byte	0x6
 4544 1444 D001     		.2byte	0x1d0
 4545 1446 28       		.uleb128 0x28
 4546 1447 B2000000 		.4byte	.LASF203
 4547 144b B2000000 		.4byte	.LASF203
 4548 144f 07       		.byte	0x7
 4549 1450 53       		.byte	0x53
 4550 1451 28       		.uleb128 0x28
 4551 1452 7B0A0000 		.4byte	.LASF204
 4552 1456 7B0A0000 		.4byte	.LASF204
 4553 145a 09       		.byte	0x9
 4554 145b 18       		.byte	0x18
 4555 145c 28       		.uleb128 0x28
 4556 145d 50070000 		.4byte	.LASF205
 4557 1461 50070000 		.4byte	.LASF205
 4558 1465 07       		.byte	0x7
 4559 1466 3F       		.byte	0x3f
 4560 1467 27       		.uleb128 0x27
 4561 1468 4E090000 		.4byte	.LASF206
 4562 146c 4E090000 		.4byte	.LASF206
 4563 1470 06       		.byte	0x6
 4564 1471 BD01     		.2byte	0x1bd
 4565 1473 27       		.uleb128 0x27
 4566 1474 DB080000 		.4byte	.LASF207
 4567 1478 DB080000 		.4byte	.LASF207
 4568 147c 06       		.byte	0x6
 4569 147d C101     		.2byte	0x1c1
 4570 147f 27       		.uleb128 0x27
 4571 1480 FF040000 		.4byte	.LASF208
 4572 1484 FF040000 		.4byte	.LASF208
 4573 1488 06       		.byte	0x6
 4574 1489 DB01     		.2byte	0x1db
 4575 148b 28       		.uleb128 0x28
 4576 148c 6C070000 		.4byte	.LASF209
 4577 1490 6C070000 		.4byte	.LASF209
 4578 1494 04       		.byte	0x4
 4579 1495 B0       		.byte	0xb0
 4580 1496 28       		.uleb128 0x28
 4581 1497 5F010000 		.4byte	.LASF210
 4582 149b 5F010000 		.4byte	.LASF210
 4583 149f 04       		.byte	0x4
 4584 14a0 B1       		.byte	0xb1
 4585 14a1 28       		.uleb128 0x28
 4586 14a2 55030000 		.4byte	.LASF211
 4587 14a6 55030000 		.4byte	.LASF211
 4588 14aa 08       		.byte	0x8
 4589 14ab DA       		.byte	0xda
 4590 14ac 00       		.byte	0
 4591              		.section	.debug_abbrev,"",%progbits
 4592              	.Ldebug_abbrev0:
 4593 0000 01       		.uleb128 0x1
 4594 0001 11       		.uleb128 0x11
 4595 0002 01       		.byte	0x1
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 136


 4596 0003 25       		.uleb128 0x25
 4597 0004 0E       		.uleb128 0xe
 4598 0005 13       		.uleb128 0x13
 4599 0006 0B       		.uleb128 0xb
 4600 0007 03       		.uleb128 0x3
 4601 0008 0E       		.uleb128 0xe
 4602 0009 1B       		.uleb128 0x1b
 4603 000a 0E       		.uleb128 0xe
 4604 000b 55       		.uleb128 0x55
 4605 000c 17       		.uleb128 0x17
 4606 000d 11       		.uleb128 0x11
 4607 000e 01       		.uleb128 0x1
 4608 000f 10       		.uleb128 0x10
 4609 0010 17       		.uleb128 0x17
 4610 0011 00       		.byte	0
 4611 0012 00       		.byte	0
 4612 0013 02       		.uleb128 0x2
 4613 0014 24       		.uleb128 0x24
 4614 0015 00       		.byte	0
 4615 0016 0B       		.uleb128 0xb
 4616 0017 0B       		.uleb128 0xb
 4617 0018 3E       		.uleb128 0x3e
 4618 0019 0B       		.uleb128 0xb
 4619 001a 03       		.uleb128 0x3
 4620 001b 0E       		.uleb128 0xe
 4621 001c 00       		.byte	0
 4622 001d 00       		.byte	0
 4623 001e 03       		.uleb128 0x3
 4624 001f 24       		.uleb128 0x24
 4625 0020 00       		.byte	0
 4626 0021 0B       		.uleb128 0xb
 4627 0022 0B       		.uleb128 0xb
 4628 0023 3E       		.uleb128 0x3e
 4629 0024 0B       		.uleb128 0xb
 4630 0025 03       		.uleb128 0x3
 4631 0026 08       		.uleb128 0x8
 4632 0027 00       		.byte	0
 4633 0028 00       		.byte	0
 4634 0029 04       		.uleb128 0x4
 4635 002a 16       		.uleb128 0x16
 4636 002b 00       		.byte	0
 4637 002c 03       		.uleb128 0x3
 4638 002d 0E       		.uleb128 0xe
 4639 002e 3A       		.uleb128 0x3a
 4640 002f 0B       		.uleb128 0xb
 4641 0030 3B       		.uleb128 0x3b
 4642 0031 05       		.uleb128 0x5
 4643 0032 49       		.uleb128 0x49
 4644 0033 13       		.uleb128 0x13
 4645 0034 00       		.byte	0
 4646 0035 00       		.byte	0
 4647 0036 05       		.uleb128 0x5
 4648 0037 35       		.uleb128 0x35
 4649 0038 00       		.byte	0
 4650 0039 49       		.uleb128 0x49
 4651 003a 13       		.uleb128 0x13
 4652 003b 00       		.byte	0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 137


 4653 003c 00       		.byte	0
 4654 003d 06       		.uleb128 0x6
 4655 003e 0F       		.uleb128 0xf
 4656 003f 00       		.byte	0
 4657 0040 0B       		.uleb128 0xb
 4658 0041 0B       		.uleb128 0xb
 4659 0042 49       		.uleb128 0x49
 4660 0043 13       		.uleb128 0x13
 4661 0044 00       		.byte	0
 4662 0045 00       		.byte	0
 4663 0046 07       		.uleb128 0x7
 4664 0047 15       		.uleb128 0x15
 4665 0048 00       		.byte	0
 4666 0049 27       		.uleb128 0x27
 4667 004a 19       		.uleb128 0x19
 4668 004b 00       		.byte	0
 4669 004c 00       		.byte	0
 4670 004d 08       		.uleb128 0x8
 4671 004e 13       		.uleb128 0x13
 4672 004f 01       		.byte	0x1
 4673 0050 0B       		.uleb128 0xb
 4674 0051 0B       		.uleb128 0xb
 4675 0052 3A       		.uleb128 0x3a
 4676 0053 0B       		.uleb128 0xb
 4677 0054 3B       		.uleb128 0x3b
 4678 0055 0B       		.uleb128 0xb
 4679 0056 01       		.uleb128 0x1
 4680 0057 13       		.uleb128 0x13
 4681 0058 00       		.byte	0
 4682 0059 00       		.byte	0
 4683 005a 09       		.uleb128 0x9
 4684 005b 0D       		.uleb128 0xd
 4685 005c 00       		.byte	0
 4686 005d 03       		.uleb128 0x3
 4687 005e 0E       		.uleb128 0xe
 4688 005f 3A       		.uleb128 0x3a
 4689 0060 0B       		.uleb128 0xb
 4690 0061 3B       		.uleb128 0x3b
 4691 0062 0B       		.uleb128 0xb
 4692 0063 49       		.uleb128 0x49
 4693 0064 13       		.uleb128 0x13
 4694 0065 38       		.uleb128 0x38
 4695 0066 0B       		.uleb128 0xb
 4696 0067 00       		.byte	0
 4697 0068 00       		.byte	0
 4698 0069 0A       		.uleb128 0xa
 4699 006a 16       		.uleb128 0x16
 4700 006b 00       		.byte	0
 4701 006c 03       		.uleb128 0x3
 4702 006d 0E       		.uleb128 0xe
 4703 006e 3A       		.uleb128 0x3a
 4704 006f 0B       		.uleb128 0xb
 4705 0070 3B       		.uleb128 0x3b
 4706 0071 0B       		.uleb128 0xb
 4707 0072 49       		.uleb128 0x49
 4708 0073 13       		.uleb128 0x13
 4709 0074 00       		.byte	0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 138


 4710 0075 00       		.byte	0
 4711 0076 0B       		.uleb128 0xb
 4712 0077 04       		.uleb128 0x4
 4713 0078 01       		.byte	0x1
 4714 0079 0B       		.uleb128 0xb
 4715 007a 0B       		.uleb128 0xb
 4716 007b 49       		.uleb128 0x49
 4717 007c 13       		.uleb128 0x13
 4718 007d 3A       		.uleb128 0x3a
 4719 007e 0B       		.uleb128 0xb
 4720 007f 3B       		.uleb128 0x3b
 4721 0080 0B       		.uleb128 0xb
 4722 0081 01       		.uleb128 0x1
 4723 0082 13       		.uleb128 0x13
 4724 0083 00       		.byte	0
 4725 0084 00       		.byte	0
 4726 0085 0C       		.uleb128 0xc
 4727 0086 28       		.uleb128 0x28
 4728 0087 00       		.byte	0
 4729 0088 03       		.uleb128 0x3
 4730 0089 0E       		.uleb128 0xe
 4731 008a 1C       		.uleb128 0x1c
 4732 008b 0B       		.uleb128 0xb
 4733 008c 00       		.byte	0
 4734 008d 00       		.byte	0
 4735 008e 0D       		.uleb128 0xd
 4736 008f 01       		.uleb128 0x1
 4737 0090 01       		.byte	0x1
 4738 0091 49       		.uleb128 0x49
 4739 0092 13       		.uleb128 0x13
 4740 0093 01       		.uleb128 0x1
 4741 0094 13       		.uleb128 0x13
 4742 0095 00       		.byte	0
 4743 0096 00       		.byte	0
 4744 0097 0E       		.uleb128 0xe
 4745 0098 21       		.uleb128 0x21
 4746 0099 00       		.byte	0
 4747 009a 49       		.uleb128 0x49
 4748 009b 13       		.uleb128 0x13
 4749 009c 2F       		.uleb128 0x2f
 4750 009d 0B       		.uleb128 0xb
 4751 009e 00       		.byte	0
 4752 009f 00       		.byte	0
 4753 00a0 0F       		.uleb128 0xf
 4754 00a1 0D       		.uleb128 0xd
 4755 00a2 00       		.byte	0
 4756 00a3 03       		.uleb128 0x3
 4757 00a4 0E       		.uleb128 0xe
 4758 00a5 3A       		.uleb128 0x3a
 4759 00a6 0B       		.uleb128 0xb
 4760 00a7 3B       		.uleb128 0x3b
 4761 00a8 05       		.uleb128 0x5
 4762 00a9 49       		.uleb128 0x49
 4763 00aa 13       		.uleb128 0x13
 4764 00ab 38       		.uleb128 0x38
 4765 00ac 0B       		.uleb128 0xb
 4766 00ad 00       		.byte	0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 139


 4767 00ae 00       		.byte	0
 4768 00af 10       		.uleb128 0x10
 4769 00b0 13       		.uleb128 0x13
 4770 00b1 01       		.byte	0x1
 4771 00b2 0B       		.uleb128 0xb
 4772 00b3 0B       		.uleb128 0xb
 4773 00b4 3A       		.uleb128 0x3a
 4774 00b5 0B       		.uleb128 0xb
 4775 00b6 3B       		.uleb128 0x3b
 4776 00b7 05       		.uleb128 0x5
 4777 00b8 01       		.uleb128 0x1
 4778 00b9 13       		.uleb128 0x13
 4779 00ba 00       		.byte	0
 4780 00bb 00       		.byte	0
 4781 00bc 11       		.uleb128 0x11
 4782 00bd 0D       		.uleb128 0xd
 4783 00be 00       		.byte	0
 4784 00bf 03       		.uleb128 0x3
 4785 00c0 08       		.uleb128 0x8
 4786 00c1 3A       		.uleb128 0x3a
 4787 00c2 0B       		.uleb128 0xb
 4788 00c3 3B       		.uleb128 0x3b
 4789 00c4 05       		.uleb128 0x5
 4790 00c5 49       		.uleb128 0x49
 4791 00c6 13       		.uleb128 0x13
 4792 00c7 38       		.uleb128 0x38
 4793 00c8 0B       		.uleb128 0xb
 4794 00c9 00       		.byte	0
 4795 00ca 00       		.byte	0
 4796 00cb 12       		.uleb128 0x12
 4797 00cc 26       		.uleb128 0x26
 4798 00cd 00       		.byte	0
 4799 00ce 00       		.byte	0
 4800 00cf 00       		.byte	0
 4801 00d0 13       		.uleb128 0x13
 4802 00d1 0F       		.uleb128 0xf
 4803 00d2 00       		.byte	0
 4804 00d3 0B       		.uleb128 0xb
 4805 00d4 0B       		.uleb128 0xb
 4806 00d5 00       		.byte	0
 4807 00d6 00       		.byte	0
 4808 00d7 14       		.uleb128 0x14
 4809 00d8 2E       		.uleb128 0x2e
 4810 00d9 01       		.byte	0x1
 4811 00da 03       		.uleb128 0x3
 4812 00db 0E       		.uleb128 0xe
 4813 00dc 3A       		.uleb128 0x3a
 4814 00dd 0B       		.uleb128 0xb
 4815 00de 3B       		.uleb128 0x3b
 4816 00df 05       		.uleb128 0x5
 4817 00e0 27       		.uleb128 0x27
 4818 00e1 19       		.uleb128 0x19
 4819 00e2 49       		.uleb128 0x49
 4820 00e3 13       		.uleb128 0x13
 4821 00e4 11       		.uleb128 0x11
 4822 00e5 01       		.uleb128 0x1
 4823 00e6 12       		.uleb128 0x12
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 140


 4824 00e7 06       		.uleb128 0x6
 4825 00e8 40       		.uleb128 0x40
 4826 00e9 18       		.uleb128 0x18
 4827 00ea 9642     		.uleb128 0x2116
 4828 00ec 19       		.uleb128 0x19
 4829 00ed 01       		.uleb128 0x1
 4830 00ee 13       		.uleb128 0x13
 4831 00ef 00       		.byte	0
 4832 00f0 00       		.byte	0
 4833 00f1 15       		.uleb128 0x15
 4834 00f2 05       		.uleb128 0x5
 4835 00f3 00       		.byte	0
 4836 00f4 03       		.uleb128 0x3
 4837 00f5 0E       		.uleb128 0xe
 4838 00f6 3A       		.uleb128 0x3a
 4839 00f7 0B       		.uleb128 0xb
 4840 00f8 3B       		.uleb128 0x3b
 4841 00f9 05       		.uleb128 0x5
 4842 00fa 49       		.uleb128 0x49
 4843 00fb 13       		.uleb128 0x13
 4844 00fc 02       		.uleb128 0x2
 4845 00fd 17       		.uleb128 0x17
 4846 00fe 00       		.byte	0
 4847 00ff 00       		.byte	0
 4848 0100 16       		.uleb128 0x16
 4849 0101 34       		.uleb128 0x34
 4850 0102 00       		.byte	0
 4851 0103 03       		.uleb128 0x3
 4852 0104 0E       		.uleb128 0xe
 4853 0105 3A       		.uleb128 0x3a
 4854 0106 0B       		.uleb128 0xb
 4855 0107 3B       		.uleb128 0x3b
 4856 0108 05       		.uleb128 0x5
 4857 0109 49       		.uleb128 0x49
 4858 010a 13       		.uleb128 0x13
 4859 010b 02       		.uleb128 0x2
 4860 010c 17       		.uleb128 0x17
 4861 010d 00       		.byte	0
 4862 010e 00       		.byte	0
 4863 010f 17       		.uleb128 0x17
 4864 0110 2E       		.uleb128 0x2e
 4865 0111 01       		.byte	0x1
 4866 0112 03       		.uleb128 0x3
 4867 0113 0E       		.uleb128 0xe
 4868 0114 3A       		.uleb128 0x3a
 4869 0115 0B       		.uleb128 0xb
 4870 0116 3B       		.uleb128 0x3b
 4871 0117 05       		.uleb128 0x5
 4872 0118 27       		.uleb128 0x27
 4873 0119 19       		.uleb128 0x19
 4874 011a 11       		.uleb128 0x11
 4875 011b 01       		.uleb128 0x1
 4876 011c 12       		.uleb128 0x12
 4877 011d 06       		.uleb128 0x6
 4878 011e 40       		.uleb128 0x40
 4879 011f 18       		.uleb128 0x18
 4880 0120 9742     		.uleb128 0x2117
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 141


 4881 0122 19       		.uleb128 0x19
 4882 0123 01       		.uleb128 0x1
 4883 0124 13       		.uleb128 0x13
 4884 0125 00       		.byte	0
 4885 0126 00       		.byte	0
 4886 0127 18       		.uleb128 0x18
 4887 0128 898201   		.uleb128 0x4109
 4888 012b 00       		.byte	0
 4889 012c 11       		.uleb128 0x11
 4890 012d 01       		.uleb128 0x1
 4891 012e 31       		.uleb128 0x31
 4892 012f 13       		.uleb128 0x13
 4893 0130 00       		.byte	0
 4894 0131 00       		.byte	0
 4895 0132 19       		.uleb128 0x19
 4896 0133 898201   		.uleb128 0x4109
 4897 0136 01       		.byte	0x1
 4898 0137 11       		.uleb128 0x11
 4899 0138 01       		.uleb128 0x1
 4900 0139 31       		.uleb128 0x31
 4901 013a 13       		.uleb128 0x13
 4902 013b 01       		.uleb128 0x1
 4903 013c 13       		.uleb128 0x13
 4904 013d 00       		.byte	0
 4905 013e 00       		.byte	0
 4906 013f 1A       		.uleb128 0x1a
 4907 0140 8A8201   		.uleb128 0x410a
 4908 0143 00       		.byte	0
 4909 0144 02       		.uleb128 0x2
 4910 0145 18       		.uleb128 0x18
 4911 0146 9142     		.uleb128 0x2111
 4912 0148 18       		.uleb128 0x18
 4913 0149 00       		.byte	0
 4914 014a 00       		.byte	0
 4915 014b 1B       		.uleb128 0x1b
 4916 014c 898201   		.uleb128 0x4109
 4917 014f 01       		.byte	0x1
 4918 0150 11       		.uleb128 0x11
 4919 0151 01       		.uleb128 0x1
 4920 0152 31       		.uleb128 0x31
 4921 0153 13       		.uleb128 0x13
 4922 0154 00       		.byte	0
 4923 0155 00       		.byte	0
 4924 0156 1C       		.uleb128 0x1c
 4925 0157 2E       		.uleb128 0x2e
 4926 0158 00       		.byte	0
 4927 0159 3F       		.uleb128 0x3f
 4928 015a 19       		.uleb128 0x19
 4929 015b 03       		.uleb128 0x3
 4930 015c 0E       		.uleb128 0xe
 4931 015d 3A       		.uleb128 0x3a
 4932 015e 0B       		.uleb128 0xb
 4933 015f 3B       		.uleb128 0x3b
 4934 0160 0B       		.uleb128 0xb
 4935 0161 27       		.uleb128 0x27
 4936 0162 19       		.uleb128 0x19
 4937 0163 49       		.uleb128 0x49
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 142


 4938 0164 13       		.uleb128 0x13
 4939 0165 11       		.uleb128 0x11
 4940 0166 01       		.uleb128 0x1
 4941 0167 12       		.uleb128 0x12
 4942 0168 06       		.uleb128 0x6
 4943 0169 40       		.uleb128 0x40
 4944 016a 18       		.uleb128 0x18
 4945 016b 9742     		.uleb128 0x2117
 4946 016d 19       		.uleb128 0x19
 4947 016e 00       		.byte	0
 4948 016f 00       		.byte	0
 4949 0170 1D       		.uleb128 0x1d
 4950 0171 2E       		.uleb128 0x2e
 4951 0172 01       		.byte	0x1
 4952 0173 3F       		.uleb128 0x3f
 4953 0174 19       		.uleb128 0x19
 4954 0175 03       		.uleb128 0x3
 4955 0176 0E       		.uleb128 0xe
 4956 0177 3A       		.uleb128 0x3a
 4957 0178 0B       		.uleb128 0xb
 4958 0179 3B       		.uleb128 0x3b
 4959 017a 05       		.uleb128 0x5
 4960 017b 27       		.uleb128 0x27
 4961 017c 19       		.uleb128 0x19
 4962 017d 49       		.uleb128 0x49
 4963 017e 13       		.uleb128 0x13
 4964 017f 11       		.uleb128 0x11
 4965 0180 01       		.uleb128 0x1
 4966 0181 12       		.uleb128 0x12
 4967 0182 06       		.uleb128 0x6
 4968 0183 40       		.uleb128 0x40
 4969 0184 18       		.uleb128 0x18
 4970 0185 9742     		.uleb128 0x2117
 4971 0187 19       		.uleb128 0x19
 4972 0188 01       		.uleb128 0x1
 4973 0189 13       		.uleb128 0x13
 4974 018a 00       		.byte	0
 4975 018b 00       		.byte	0
 4976 018c 1E       		.uleb128 0x1e
 4977 018d 2E       		.uleb128 0x2e
 4978 018e 01       		.byte	0x1
 4979 018f 3F       		.uleb128 0x3f
 4980 0190 19       		.uleb128 0x19
 4981 0191 03       		.uleb128 0x3
 4982 0192 0E       		.uleb128 0xe
 4983 0193 3A       		.uleb128 0x3a
 4984 0194 0B       		.uleb128 0xb
 4985 0195 3B       		.uleb128 0x3b
 4986 0196 05       		.uleb128 0x5
 4987 0197 27       		.uleb128 0x27
 4988 0198 19       		.uleb128 0x19
 4989 0199 11       		.uleb128 0x11
 4990 019a 01       		.uleb128 0x1
 4991 019b 12       		.uleb128 0x12
 4992 019c 06       		.uleb128 0x6
 4993 019d 40       		.uleb128 0x40
 4994 019e 18       		.uleb128 0x18
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 143


 4995 019f 9742     		.uleb128 0x2117
 4996 01a1 19       		.uleb128 0x19
 4997 01a2 01       		.uleb128 0x1
 4998 01a3 13       		.uleb128 0x13
 4999 01a4 00       		.byte	0
 5000 01a5 00       		.byte	0
 5001 01a6 1F       		.uleb128 0x1f
 5002 01a7 34       		.uleb128 0x34
 5003 01a8 00       		.byte	0
 5004 01a9 03       		.uleb128 0x3
 5005 01aa 0E       		.uleb128 0xe
 5006 01ab 3A       		.uleb128 0x3a
 5007 01ac 0B       		.uleb128 0xb
 5008 01ad 3B       		.uleb128 0x3b
 5009 01ae 05       		.uleb128 0x5
 5010 01af 49       		.uleb128 0x49
 5011 01b0 13       		.uleb128 0x13
 5012 01b1 1C       		.uleb128 0x1c
 5013 01b2 0B       		.uleb128 0xb
 5014 01b3 00       		.byte	0
 5015 01b4 00       		.byte	0
 5016 01b5 20       		.uleb128 0x20
 5017 01b6 26       		.uleb128 0x26
 5018 01b7 00       		.byte	0
 5019 01b8 49       		.uleb128 0x49
 5020 01b9 13       		.uleb128 0x13
 5021 01ba 00       		.byte	0
 5022 01bb 00       		.byte	0
 5023 01bc 21       		.uleb128 0x21
 5024 01bd 34       		.uleb128 0x34
 5025 01be 00       		.byte	0
 5026 01bf 03       		.uleb128 0x3
 5027 01c0 0E       		.uleb128 0xe
 5028 01c1 3A       		.uleb128 0x3a
 5029 01c2 0B       		.uleb128 0xb
 5030 01c3 3B       		.uleb128 0x3b
 5031 01c4 05       		.uleb128 0x5
 5032 01c5 49       		.uleb128 0x49
 5033 01c6 13       		.uleb128 0x13
 5034 01c7 02       		.uleb128 0x2
 5035 01c8 18       		.uleb128 0x18
 5036 01c9 00       		.byte	0
 5037 01ca 00       		.byte	0
 5038 01cb 22       		.uleb128 0x22
 5039 01cc 05       		.uleb128 0x5
 5040 01cd 00       		.byte	0
 5041 01ce 03       		.uleb128 0x3
 5042 01cf 0E       		.uleb128 0xe
 5043 01d0 3A       		.uleb128 0x3a
 5044 01d1 0B       		.uleb128 0xb
 5045 01d2 3B       		.uleb128 0x3b
 5046 01d3 05       		.uleb128 0x5
 5047 01d4 49       		.uleb128 0x49
 5048 01d5 13       		.uleb128 0x13
 5049 01d6 02       		.uleb128 0x2
 5050 01d7 18       		.uleb128 0x18
 5051 01d8 00       		.byte	0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 144


 5052 01d9 00       		.byte	0
 5053 01da 23       		.uleb128 0x23
 5054 01db 2E       		.uleb128 0x2e
 5055 01dc 01       		.byte	0x1
 5056 01dd 3F       		.uleb128 0x3f
 5057 01de 19       		.uleb128 0x19
 5058 01df 03       		.uleb128 0x3
 5059 01e0 0E       		.uleb128 0xe
 5060 01e1 3A       		.uleb128 0x3a
 5061 01e2 0B       		.uleb128 0xb
 5062 01e3 3B       		.uleb128 0x3b
 5063 01e4 05       		.uleb128 0x5
 5064 01e5 27       		.uleb128 0x27
 5065 01e6 19       		.uleb128 0x19
 5066 01e7 49       		.uleb128 0x49
 5067 01e8 13       		.uleb128 0x13
 5068 01e9 11       		.uleb128 0x11
 5069 01ea 01       		.uleb128 0x1
 5070 01eb 12       		.uleb128 0x12
 5071 01ec 06       		.uleb128 0x6
 5072 01ed 40       		.uleb128 0x40
 5073 01ee 18       		.uleb128 0x18
 5074 01ef 9642     		.uleb128 0x2116
 5075 01f1 19       		.uleb128 0x19
 5076 01f2 01       		.uleb128 0x1
 5077 01f3 13       		.uleb128 0x13
 5078 01f4 00       		.byte	0
 5079 01f5 00       		.byte	0
 5080 01f6 24       		.uleb128 0x24
 5081 01f7 34       		.uleb128 0x34
 5082 01f8 00       		.byte	0
 5083 01f9 03       		.uleb128 0x3
 5084 01fa 08       		.uleb128 0x8
 5085 01fb 3A       		.uleb128 0x3a
 5086 01fc 0B       		.uleb128 0xb
 5087 01fd 3B       		.uleb128 0x3b
 5088 01fe 05       		.uleb128 0x5
 5089 01ff 49       		.uleb128 0x49
 5090 0200 13       		.uleb128 0x13
 5091 0201 02       		.uleb128 0x2
 5092 0202 17       		.uleb128 0x17
 5093 0203 00       		.byte	0
 5094 0204 00       		.byte	0
 5095 0205 25       		.uleb128 0x25
 5096 0206 34       		.uleb128 0x34
 5097 0207 00       		.byte	0
 5098 0208 03       		.uleb128 0x3
 5099 0209 0E       		.uleb128 0xe
 5100 020a 3A       		.uleb128 0x3a
 5101 020b 0B       		.uleb128 0xb
 5102 020c 3B       		.uleb128 0x3b
 5103 020d 05       		.uleb128 0x5
 5104 020e 49       		.uleb128 0x49
 5105 020f 13       		.uleb128 0x13
 5106 0210 3F       		.uleb128 0x3f
 5107 0211 19       		.uleb128 0x19
 5108 0212 3C       		.uleb128 0x3c
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 145


 5109 0213 19       		.uleb128 0x19
 5110 0214 00       		.byte	0
 5111 0215 00       		.byte	0
 5112 0216 26       		.uleb128 0x26
 5113 0217 34       		.uleb128 0x34
 5114 0218 00       		.byte	0
 5115 0219 03       		.uleb128 0x3
 5116 021a 0E       		.uleb128 0xe
 5117 021b 3A       		.uleb128 0x3a
 5118 021c 0B       		.uleb128 0xb
 5119 021d 3B       		.uleb128 0x3b
 5120 021e 0B       		.uleb128 0xb
 5121 021f 49       		.uleb128 0x49
 5122 0220 13       		.uleb128 0x13
 5123 0221 3F       		.uleb128 0x3f
 5124 0222 19       		.uleb128 0x19
 5125 0223 02       		.uleb128 0x2
 5126 0224 18       		.uleb128 0x18
 5127 0225 00       		.byte	0
 5128 0226 00       		.byte	0
 5129 0227 27       		.uleb128 0x27
 5130 0228 2E       		.uleb128 0x2e
 5131 0229 00       		.byte	0
 5132 022a 3F       		.uleb128 0x3f
 5133 022b 19       		.uleb128 0x19
 5134 022c 3C       		.uleb128 0x3c
 5135 022d 19       		.uleb128 0x19
 5136 022e 6E       		.uleb128 0x6e
 5137 022f 0E       		.uleb128 0xe
 5138 0230 03       		.uleb128 0x3
 5139 0231 0E       		.uleb128 0xe
 5140 0232 3A       		.uleb128 0x3a
 5141 0233 0B       		.uleb128 0xb
 5142 0234 3B       		.uleb128 0x3b
 5143 0235 05       		.uleb128 0x5
 5144 0236 00       		.byte	0
 5145 0237 00       		.byte	0
 5146 0238 28       		.uleb128 0x28
 5147 0239 2E       		.uleb128 0x2e
 5148 023a 00       		.byte	0
 5149 023b 3F       		.uleb128 0x3f
 5150 023c 19       		.uleb128 0x19
 5151 023d 3C       		.uleb128 0x3c
 5152 023e 19       		.uleb128 0x19
 5153 023f 6E       		.uleb128 0x6e
 5154 0240 0E       		.uleb128 0xe
 5155 0241 03       		.uleb128 0x3
 5156 0242 0E       		.uleb128 0xe
 5157 0243 3A       		.uleb128 0x3a
 5158 0244 0B       		.uleb128 0xb
 5159 0245 3B       		.uleb128 0x3b
 5160 0246 0B       		.uleb128 0xb
 5161 0247 00       		.byte	0
 5162 0248 00       		.byte	0
 5163 0249 00       		.byte	0
 5164              		.section	.debug_loc,"",%progbits
 5165              	.Ldebug_loc0:
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 146


 5166              	.LLST0:
 5167 0000 00000000 		.4byte	.LVL0
 5168 0004 14000000 		.4byte	.LVL3
 5169 0008 0100     		.2byte	0x1
 5170 000a 50       		.byte	0x50
 5171 000b 14000000 		.4byte	.LVL3
 5172 000f 76000000 		.4byte	.LVL9
 5173 0013 0100     		.2byte	0x1
 5174 0015 54       		.byte	0x54
 5175 0016 76000000 		.4byte	.LVL9
 5176 001a 84000000 		.4byte	.LFE22
 5177 001e 0400     		.2byte	0x4
 5178 0020 F3       		.byte	0xf3
 5179 0021 01       		.uleb128 0x1
 5180 0022 50       		.byte	0x50
 5181 0023 9F       		.byte	0x9f
 5182 0024 00000000 		.4byte	0
 5183 0028 00000000 		.4byte	0
 5184              	.LLST1:
 5185 002c 00000000 		.4byte	.LVL0
 5186 0030 12000000 		.4byte	.LVL2
 5187 0034 0100     		.2byte	0x1
 5188 0036 51       		.byte	0x51
 5189 0037 12000000 		.4byte	.LVL2
 5190 003b 76000000 		.4byte	.LVL10
 5191 003f 0100     		.2byte	0x1
 5192 0041 55       		.byte	0x55
 5193 0042 76000000 		.4byte	.LVL10
 5194 0046 84000000 		.4byte	.LFE22
 5195 004a 0400     		.2byte	0x4
 5196 004c F3       		.byte	0xf3
 5197 004d 01       		.uleb128 0x1
 5198 004e 51       		.byte	0x51
 5199 004f 9F       		.byte	0x9f
 5200 0050 00000000 		.4byte	0
 5201 0054 00000000 		.4byte	0
 5202              	.LLST2:
 5203 0058 06000000 		.4byte	.LVL1
 5204 005c 76000000 		.4byte	.LVL8
 5205 0060 0200     		.2byte	0x2
 5206 0062 30       		.byte	0x30
 5207 0063 9F       		.byte	0x9f
 5208 0064 76000000 		.4byte	.LVL8
 5209 0068 84000000 		.4byte	.LFE22
 5210 006c 0100     		.2byte	0x1
 5211 006e 50       		.byte	0x50
 5212 006f 00000000 		.4byte	0
 5213 0073 00000000 		.4byte	0
 5214              	.LLST3:
 5215 0077 00000000 		.4byte	.LVL11
 5216 007b 20000000 		.4byte	.LVL15
 5217 007f 0100     		.2byte	0x1
 5218 0081 50       		.byte	0x50
 5219 0082 20000000 		.4byte	.LVL15
 5220 0086 23000000 		.4byte	.LVL16-1
 5221 008a 0100     		.2byte	0x1
 5222 008c 51       		.byte	0x51
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 147


 5223 008d 23000000 		.4byte	.LVL16-1
 5224 0091 38000000 		.4byte	.LVL21
 5225 0095 0400     		.2byte	0x4
 5226 0097 F3       		.byte	0xf3
 5227 0098 01       		.uleb128 0x1
 5228 0099 50       		.byte	0x50
 5229 009a 9F       		.byte	0x9f
 5230 009b 38000000 		.4byte	.LVL21
 5231 009f 3E000000 		.4byte	.LVL24
 5232 00a3 0100     		.2byte	0x1
 5233 00a5 50       		.byte	0x50
 5234 00a6 3E000000 		.4byte	.LVL24
 5235 00aa 42000000 		.4byte	.LFE23
 5236 00ae 0400     		.2byte	0x4
 5237 00b0 F3       		.byte	0xf3
 5238 00b1 01       		.uleb128 0x1
 5239 00b2 50       		.byte	0x50
 5240 00b3 9F       		.byte	0x9f
 5241 00b4 00000000 		.4byte	0
 5242 00b8 00000000 		.4byte	0
 5243              	.LLST4:
 5244 00bc 00000000 		.4byte	.LVL11
 5245 00c0 1E000000 		.4byte	.LVL14
 5246 00c4 0100     		.2byte	0x1
 5247 00c6 51       		.byte	0x51
 5248 00c7 1E000000 		.4byte	.LVL14
 5249 00cb 38000000 		.4byte	.LVL21
 5250 00cf 0400     		.2byte	0x4
 5251 00d1 F3       		.byte	0xf3
 5252 00d2 01       		.uleb128 0x1
 5253 00d3 51       		.byte	0x51
 5254 00d4 9F       		.byte	0x9f
 5255 00d5 38000000 		.4byte	.LVL21
 5256 00d9 3E000000 		.4byte	.LVL24
 5257 00dd 0100     		.2byte	0x1
 5258 00df 51       		.byte	0x51
 5259 00e0 3E000000 		.4byte	.LVL24
 5260 00e4 42000000 		.4byte	.LFE23
 5261 00e8 0400     		.2byte	0x4
 5262 00ea F3       		.byte	0xf3
 5263 00eb 01       		.uleb128 0x1
 5264 00ec 51       		.byte	0x51
 5265 00ed 9F       		.byte	0x9f
 5266 00ee 00000000 		.4byte	0
 5267 00f2 00000000 		.4byte	0
 5268              	.LLST5:
 5269 00f6 24000000 		.4byte	.LVL16
 5270 00fa 28000000 		.4byte	.LVL17
 5271 00fe 0200     		.2byte	0x2
 5272 0100 30       		.byte	0x30
 5273 0101 9F       		.byte	0x9f
 5274 0102 28000000 		.4byte	.LVL17
 5275 0106 38000000 		.4byte	.LVL21
 5276 010a 0100     		.2byte	0x1
 5277 010c 53       		.byte	0x53
 5278 010d 3E000000 		.4byte	.LVL24
 5279 0111 42000000 		.4byte	.LFE23
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 148


 5280 0115 0100     		.2byte	0x1
 5281 0117 53       		.byte	0x53
 5282 0118 00000000 		.4byte	0
 5283 011c 00000000 		.4byte	0
 5284              	.LLST6:
 5285 0120 10000000 		.4byte	.LVL12
 5286 0124 1C000000 		.4byte	.LVL13
 5287 0128 0100     		.2byte	0x1
 5288 012a 53       		.byte	0x53
 5289 012b 38000000 		.4byte	.LVL21
 5290 012f 3A000000 		.4byte	.LVL22
 5291 0133 0100     		.2byte	0x1
 5292 0135 53       		.byte	0x53
 5293 0136 3C000000 		.4byte	.LVL23
 5294 013a 3E000000 		.4byte	.LVL24
 5295 013e 0100     		.2byte	0x1
 5296 0140 53       		.byte	0x53
 5297 0141 00000000 		.4byte	0
 5298 0145 00000000 		.4byte	0
 5299              	.LLST7:
 5300 0149 24000000 		.4byte	.LVL16
 5301 014d 38000000 		.4byte	.LVL21
 5302 0151 0100     		.2byte	0x1
 5303 0153 50       		.byte	0x50
 5304 0154 00000000 		.4byte	0
 5305 0158 00000000 		.4byte	0
 5306              	.LLST8:
 5307 015c 06000000 		.4byte	.LVL25
 5308 0160 19000000 		.4byte	.LVL29-1
 5309 0164 0100     		.2byte	0x1
 5310 0166 53       		.byte	0x53
 5311 0167 00000000 		.4byte	0
 5312 016b 00000000 		.4byte	0
 5313              	.LLST9:
 5314 016f 06000000 		.4byte	.LVL30
 5315 0173 0A000000 		.4byte	.LVL31
 5316 0177 0100     		.2byte	0x1
 5317 0179 51       		.byte	0x51
 5318 017a 0A000000 		.4byte	.LVL31
 5319 017e 0E000000 		.4byte	.LVL32
 5320 0182 0100     		.2byte	0x1
 5321 0184 52       		.byte	0x52
 5322 0185 0E000000 		.4byte	.LVL32
 5323 0189 12000000 		.4byte	.LVL33
 5324 018d 0100     		.2byte	0x1
 5325 018f 51       		.byte	0x51
 5326 0190 12000000 		.4byte	.LVL33
 5327 0194 17000000 		.4byte	.LVL34-1
 5328 0198 0100     		.2byte	0x1
 5329 019a 52       		.byte	0x52
 5330 019b 00000000 		.4byte	0
 5331 019f 00000000 		.4byte	0
 5332              	.LLST10:
 5333 01a3 00000000 		.4byte	.LVL35
 5334 01a7 09000000 		.4byte	.LVL37-1
 5335 01ab 0100     		.2byte	0x1
 5336 01ad 50       		.byte	0x50
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 149


 5337 01ae 09000000 		.4byte	.LVL37-1
 5338 01b2 26000000 		.4byte	.LFE21
 5339 01b6 0400     		.2byte	0x4
 5340 01b8 F3       		.byte	0xf3
 5341 01b9 01       		.uleb128 0x1
 5342 01ba 50       		.byte	0x50
 5343 01bb 9F       		.byte	0x9f
 5344 01bc 00000000 		.4byte	0
 5345 01c0 00000000 		.4byte	0
 5346              	.LLST11:
 5347 01c4 00000000 		.4byte	.LVL35
 5348 01c8 09000000 		.4byte	.LVL37-1
 5349 01cc 0100     		.2byte	0x1
 5350 01ce 51       		.byte	0x51
 5351 01cf 09000000 		.4byte	.LVL37-1
 5352 01d3 24000000 		.4byte	.LVL44
 5353 01d7 0100     		.2byte	0x1
 5354 01d9 55       		.byte	0x55
 5355 01da 24000000 		.4byte	.LVL44
 5356 01de 26000000 		.4byte	.LFE21
 5357 01e2 0400     		.2byte	0x4
 5358 01e4 F3       		.byte	0xf3
 5359 01e5 01       		.uleb128 0x1
 5360 01e6 51       		.byte	0x51
 5361 01e7 9F       		.byte	0x9f
 5362 01e8 00000000 		.4byte	0
 5363 01ec 00000000 		.4byte	0
 5364              	.LLST12:
 5365 01f0 14000000 		.4byte	.LVL40
 5366 01f4 18000000 		.4byte	.LVL41
 5367 01f8 0100     		.2byte	0x1
 5368 01fa 50       		.byte	0x50
 5369 01fb 00000000 		.4byte	0
 5370 01ff 00000000 		.4byte	0
 5371              	.LLST13:
 5372 0203 1C000000 		.4byte	.LVL42
 5373 0207 1E000000 		.4byte	.LVL43
 5374 020b 0100     		.2byte	0x1
 5375 020d 50       		.byte	0x50
 5376 020e 00000000 		.4byte	0
 5377 0212 00000000 		.4byte	0
 5378              	.LLST14:
 5379 0216 06000000 		.4byte	.LVL36
 5380 021a 14000000 		.4byte	.LVL40
 5381 021e 0100     		.2byte	0x1
 5382 0220 54       		.byte	0x54
 5383 0221 00000000 		.4byte	0
 5384 0225 00000000 		.4byte	0
 5385              	.LLST15:
 5386 0229 0C000000 		.4byte	.LVL38
 5387 022d 11000000 		.4byte	.LVL39-1
 5388 0231 0100     		.2byte	0x1
 5389 0233 50       		.byte	0x50
 5390 0234 11000000 		.4byte	.LVL39-1
 5391 0238 24000000 		.4byte	.LVL45
 5392 023c 0100     		.2byte	0x1
 5393 023e 56       		.byte	0x56
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 150


 5394 023f 00000000 		.4byte	0
 5395 0243 00000000 		.4byte	0
 5396              	.LLST16:
 5397 0247 00000000 		.4byte	.LVL46
 5398 024b 49000000 		.4byte	.LVL48-1
 5399 024f 0100     		.2byte	0x1
 5400 0251 50       		.byte	0x50
 5401 0252 49000000 		.4byte	.LVL48-1
 5402 0256 4C000000 		.4byte	.LVL49
 5403 025a 0400     		.2byte	0x4
 5404 025c F3       		.byte	0xf3
 5405 025d 01       		.uleb128 0x1
 5406 025e 50       		.byte	0x50
 5407 025f 9F       		.byte	0x9f
 5408 0260 4C000000 		.4byte	.LVL49
 5409 0264 4F000000 		.4byte	.LVL50-1
 5410 0268 0100     		.2byte	0x1
 5411 026a 50       		.byte	0x50
 5412 026b 4F000000 		.4byte	.LVL50-1
 5413 026f 52000000 		.4byte	.LVL51
 5414 0273 0400     		.2byte	0x4
 5415 0275 F3       		.byte	0xf3
 5416 0276 01       		.uleb128 0x1
 5417 0277 50       		.byte	0x50
 5418 0278 9F       		.byte	0x9f
 5419 0279 52000000 		.4byte	.LVL51
 5420 027d 56000000 		.4byte	.LVL53
 5421 0281 0100     		.2byte	0x1
 5422 0283 50       		.byte	0x50
 5423 0284 56000000 		.4byte	.LVL53
 5424 0288 64000000 		.4byte	.LFE2
 5425 028c 0400     		.2byte	0x4
 5426 028e F3       		.byte	0xf3
 5427 028f 01       		.uleb128 0x1
 5428 0290 50       		.byte	0x50
 5429 0291 9F       		.byte	0x9f
 5430 0292 00000000 		.4byte	0
 5431 0296 00000000 		.4byte	0
 5432              	.LLST17:
 5433 029a 30000000 		.4byte	.LVL47
 5434 029e 54000000 		.4byte	.LVL52
 5435 02a2 0100     		.2byte	0x1
 5436 02a4 54       		.byte	0x54
 5437 02a5 56000000 		.4byte	.LVL53
 5438 02a9 58000000 		.4byte	.LVL54
 5439 02ad 0100     		.2byte	0x1
 5440 02af 54       		.byte	0x54
 5441 02b0 58000000 		.4byte	.LVL54
 5442 02b4 64000000 		.4byte	.LFE2
 5443 02b8 0100     		.2byte	0x1
 5444 02ba 50       		.byte	0x50
 5445 02bb 00000000 		.4byte	0
 5446 02bf 00000000 		.4byte	0
 5447              	.LLST18:
 5448 02c3 02000000 		.4byte	.LVL55
 5449 02c7 2E000000 		.4byte	.LVL58
 5450 02cb 0200     		.2byte	0x2
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 151


 5451 02cd 30       		.byte	0x30
 5452 02ce 9F       		.byte	0x9f
 5453 02cf 2E000000 		.4byte	.LVL58
 5454 02d3 38000000 		.4byte	.LFE3
 5455 02d7 0100     		.2byte	0x1
 5456 02d9 50       		.byte	0x50
 5457 02da 00000000 		.4byte	0
 5458 02de 00000000 		.4byte	0
 5459              	.LLST19:
 5460 02e2 02000000 		.4byte	.LVL59
 5461 02e6 12000000 		.4byte	.LVL60
 5462 02ea 0300     		.2byte	0x3
 5463 02ec 09       		.byte	0x9
 5464 02ed FF       		.byte	0xff
 5465 02ee 9F       		.byte	0x9f
 5466 02ef 12000000 		.4byte	.LVL60
 5467 02f3 14000000 		.4byte	.LVL61
 5468 02f7 0100     		.2byte	0x1
 5469 02f9 50       		.byte	0x50
 5470 02fa 18000000 		.4byte	.LVL62
 5471 02fe 31000000 		.4byte	.LVL63-1
 5472 0302 0100     		.2byte	0x1
 5473 0304 50       		.byte	0x50
 5474 0305 32000000 		.4byte	.LVL63
 5475 0309 3C000000 		.4byte	.LVL65
 5476 030d 0100     		.2byte	0x1
 5477 030f 50       		.byte	0x50
 5478 0310 3C000000 		.4byte	.LVL65
 5479 0314 3E000000 		.4byte	.LVL66
 5480 0318 0300     		.2byte	0x3
 5481 031a 09       		.byte	0x9
 5482 031b FF       		.byte	0xff
 5483 031c 9F       		.byte	0x9f
 5484 031d 3E000000 		.4byte	.LVL66
 5485 0321 48000000 		.4byte	.LFE4
 5486 0325 0100     		.2byte	0x1
 5487 0327 50       		.byte	0x50
 5488 0328 00000000 		.4byte	0
 5489 032c 00000000 		.4byte	0
 5490              	.LLST20:
 5491 0330 12000000 		.4byte	.LVL60
 5492 0334 3C000000 		.4byte	.LVL65
 5493 0338 0100     		.2byte	0x1
 5494 033a 54       		.byte	0x54
 5495 033b 00000000 		.4byte	0
 5496 033f 00000000 		.4byte	0
 5497              	.LLST21:
 5498 0343 00000000 		.4byte	.LVL67
 5499 0347 08000000 		.4byte	.LVL68
 5500 034b 0100     		.2byte	0x1
 5501 034d 50       		.byte	0x50
 5502 034e 08000000 		.4byte	.LVL68
 5503 0352 EC000000 		.4byte	.LFE6
 5504 0356 0400     		.2byte	0x4
 5505 0358 F3       		.byte	0xf3
 5506 0359 01       		.uleb128 0x1
 5507 035a 50       		.byte	0x50
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 152


 5508 035b 9F       		.byte	0x9f
 5509 035c 00000000 		.4byte	0
 5510 0360 00000000 		.4byte	0
 5511              	.LLST22:
 5512 0364 00000000 		.4byte	.LVL67
 5513 0368 10000000 		.4byte	.LVL69
 5514 036c 0100     		.2byte	0x1
 5515 036e 51       		.byte	0x51
 5516 036f 10000000 		.4byte	.LVL69
 5517 0373 EC000000 		.4byte	.LFE6
 5518 0377 0400     		.2byte	0x4
 5519 0379 F3       		.byte	0xf3
 5520 037a 01       		.uleb128 0x1
 5521 037b 51       		.byte	0x51
 5522 037c 9F       		.byte	0x9f
 5523 037d 00000000 		.4byte	0
 5524 0381 00000000 		.4byte	0
 5525              	.LLST23:
 5526 0385 00000000 		.4byte	.LVL67
 5527 0389 18000000 		.4byte	.LVL71
 5528 038d 0100     		.2byte	0x1
 5529 038f 52       		.byte	0x52
 5530 0390 18000000 		.4byte	.LVL71
 5531 0394 E0000000 		.4byte	.LVL87
 5532 0398 0100     		.2byte	0x1
 5533 039a 56       		.byte	0x56
 5534 039b E0000000 		.4byte	.LVL87
 5535 039f EC000000 		.4byte	.LFE6
 5536 03a3 0400     		.2byte	0x4
 5537 03a5 F3       		.byte	0xf3
 5538 03a6 01       		.uleb128 0x1
 5539 03a7 52       		.byte	0x52
 5540 03a8 9F       		.byte	0x9f
 5541 03a9 00000000 		.4byte	0
 5542 03ad 00000000 		.4byte	0
 5543              	.LLST24:
 5544 03b1 14000000 		.4byte	.LVL70
 5545 03b5 18000000 		.4byte	.LVL71
 5546 03b9 0200     		.2byte	0x2
 5547 03bb 30       		.byte	0x30
 5548 03bc 9F       		.byte	0x9f
 5549 03bd 18000000 		.4byte	.LVL71
 5550 03c1 E0000000 		.4byte	.LVL86
 5551 03c5 0100     		.2byte	0x1
 5552 03c7 55       		.byte	0x55
 5553 03c8 00000000 		.4byte	0
 5554 03cc 00000000 		.4byte	0
 5555              	.LLST25:
 5556 03d0 1C000000 		.4byte	.LVL72
 5557 03d4 3B000000 		.4byte	.LVL73-1
 5558 03d8 0100     		.2byte	0x1
 5559 03da 50       		.byte	0x50
 5560 03db 4C000000 		.4byte	.LVL74
 5561 03df 6B000000 		.4byte	.LVL75-1
 5562 03e3 0100     		.2byte	0x1
 5563 03e5 50       		.byte	0x50
 5564 03e6 72000000 		.4byte	.LVL76
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 153


 5565 03ea 83000000 		.4byte	.LVL77-1
 5566 03ee 0100     		.2byte	0x1
 5567 03f0 50       		.byte	0x50
 5568 03f1 92000000 		.4byte	.LVL79
 5569 03f5 B1000000 		.4byte	.LVL80-1
 5570 03f9 0100     		.2byte	0x1
 5571 03fb 50       		.byte	0x50
 5572 03fc B8000000 		.4byte	.LVL81
 5573 0400 D7000000 		.4byte	.LVL82-1
 5574 0404 0100     		.2byte	0x1
 5575 0406 50       		.byte	0x50
 5576 0407 00000000 		.4byte	0
 5577 040b 00000000 		.4byte	0
 5578              	.LLST26:
 5579 040f 14000000 		.4byte	.LVL70
 5580 0413 E0000000 		.4byte	.LVL85
 5581 0417 0100     		.2byte	0x1
 5582 0419 54       		.byte	0x54
 5583 041a 00000000 		.4byte	0
 5584 041e 00000000 		.4byte	0
 5585              	.LLST27:
 5586 0422 00000000 		.4byte	.LVL88
 5587 0426 13000000 		.4byte	.LVL89-1
 5588 042a 0100     		.2byte	0x1
 5589 042c 50       		.byte	0x50
 5590 042d 13000000 		.4byte	.LVL89-1
 5591 0431 16000000 		.4byte	.LVL90
 5592 0435 0400     		.2byte	0x4
 5593 0437 F3       		.byte	0xf3
 5594 0438 01       		.uleb128 0x1
 5595 0439 50       		.byte	0x50
 5596 043a 9F       		.byte	0x9f
 5597 043b 16000000 		.4byte	.LVL90
 5598 043f 1D000000 		.4byte	.LVL91-1
 5599 0443 0100     		.2byte	0x1
 5600 0445 50       		.byte	0x50
 5601 0446 1D000000 		.4byte	.LVL91-1
 5602 044a 54000000 		.4byte	.LFE9
 5603 044e 0400     		.2byte	0x4
 5604 0450 F3       		.byte	0xf3
 5605 0451 01       		.uleb128 0x1
 5606 0452 50       		.byte	0x50
 5607 0453 9F       		.byte	0x9f
 5608 0454 00000000 		.4byte	0
 5609 0458 00000000 		.4byte	0
 5610              	.LLST28:
 5611 045c 08000000 		.4byte	.LVL95
 5612 0460 40000000 		.4byte	.LFE10
 5613 0464 0100     		.2byte	0x1
 5614 0466 53       		.byte	0x53
 5615 0467 00000000 		.4byte	0
 5616 046b 00000000 		.4byte	0
 5617              	.LLST29:
 5618 046f 02000000 		.4byte	.LVL94
 5619 0473 08000000 		.4byte	.LVL95
 5620 0477 0200     		.2byte	0x2
 5621 0479 30       		.byte	0x30
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 154


 5622 047a 9F       		.byte	0x9f
 5623 047b 08000000 		.4byte	.LVL95
 5624 047f 40000000 		.4byte	.LFE10
 5625 0483 0100     		.2byte	0x1
 5626 0485 50       		.byte	0x50
 5627 0486 00000000 		.4byte	0
 5628 048a 00000000 		.4byte	0
 5629              	.LLST30:
 5630 048e 0C000000 		.4byte	.LVL96
 5631 0492 1E000000 		.4byte	.LVL99
 5632 0496 0100     		.2byte	0x1
 5633 0498 52       		.byte	0x52
 5634 0499 20000000 		.4byte	.LVL100
 5635 049d 26000000 		.4byte	.LVL101
 5636 04a1 0100     		.2byte	0x1
 5637 04a3 51       		.byte	0x51
 5638 04a4 26000000 		.4byte	.LVL101
 5639 04a8 36000000 		.4byte	.LVL105
 5640 04ac 0100     		.2byte	0x1
 5641 04ae 52       		.byte	0x52
 5642 04af 00000000 		.4byte	0
 5643 04b3 00000000 		.4byte	0
 5644              	.LLST31:
 5645 04b7 16000000 		.4byte	.LVL107
 5646 04bb 29000000 		.4byte	.LVL108-1
 5647 04bf 0100     		.2byte	0x1
 5648 04c1 50       		.byte	0x50
 5649 04c2 29000000 		.4byte	.LVL108-1
 5650 04c6 2C000000 		.4byte	.LVL109
 5651 04ca 0100     		.2byte	0x1
 5652 04cc 54       		.byte	0x54
 5653 04cd 2C000000 		.4byte	.LVL109
 5654 04d1 54000000 		.4byte	.LVL110
 5655 04d5 0100     		.2byte	0x1
 5656 04d7 50       		.byte	0x50
 5657 04d8 54000000 		.4byte	.LVL110
 5658 04dc 58000000 		.4byte	.LVL111
 5659 04e0 0200     		.2byte	0x2
 5660 04e2 30       		.byte	0x30
 5661 04e3 9F       		.byte	0x9f
 5662 04e4 58000000 		.4byte	.LVL111
 5663 04e8 6A000000 		.4byte	.LVL112
 5664 04ec 0100     		.2byte	0x1
 5665 04ee 50       		.byte	0x50
 5666 04ef 6A000000 		.4byte	.LVL112
 5667 04f3 6E000000 		.4byte	.LVL113
 5668 04f7 0100     		.2byte	0x1
 5669 04f9 54       		.byte	0x54
 5670 04fa 00000000 		.4byte	0
 5671 04fe 00000000 		.4byte	0
 5672              	.LLST32:
 5673 0502 00000000 		.4byte	.LVL114
 5674 0506 05000000 		.4byte	.LVL115-1
 5675 050a 0100     		.2byte	0x1
 5676 050c 50       		.byte	0x50
 5677 050d 05000000 		.4byte	.LVL115-1
 5678 0511 08000000 		.4byte	.LFE12
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 155


 5679 0515 0400     		.2byte	0x4
 5680 0517 F3       		.byte	0xf3
 5681 0518 01       		.uleb128 0x1
 5682 0519 50       		.byte	0x50
 5683 051a 9F       		.byte	0x9f
 5684 051b 00000000 		.4byte	0
 5685 051f 00000000 		.4byte	0
 5686              	.LLST33:
 5687 0523 00000000 		.4byte	.LVL116
 5688 0527 08000000 		.4byte	.LVL117
 5689 052b 0100     		.2byte	0x1
 5690 052d 50       		.byte	0x50
 5691 052e 08000000 		.4byte	.LVL117
 5692 0532 0A000000 		.4byte	.LVL118
 5693 0536 0300     		.2byte	0x3
 5694 0538 70       		.byte	0x70
 5695 0539 01       		.sleb128 1
 5696 053a 9F       		.byte	0x9f
 5697 053b 0A000000 		.4byte	.LVL118
 5698 053f 30000000 		.4byte	.LFE13
 5699 0543 0400     		.2byte	0x4
 5700 0545 F3       		.byte	0xf3
 5701 0546 01       		.uleb128 0x1
 5702 0547 50       		.byte	0x50
 5703 0548 9F       		.byte	0x9f
 5704 0549 00000000 		.4byte	0
 5705 054d 00000000 		.4byte	0
 5706              	.LLST34:
 5707 0551 00000000 		.4byte	.LVL119
 5708 0555 0A000000 		.4byte	.LVL123
 5709 0559 0100     		.2byte	0x1
 5710 055b 50       		.byte	0x50
 5711 055c 0A000000 		.4byte	.LVL123
 5712 0560 0C000000 		.4byte	.LVL124
 5713 0564 0300     		.2byte	0x3
 5714 0566 70       		.byte	0x70
 5715 0567 01       		.sleb128 1
 5716 0568 9F       		.byte	0x9f
 5717 0569 0C000000 		.4byte	.LVL124
 5718 056d 14000000 		.4byte	.LFE14
 5719 0571 0400     		.2byte	0x4
 5720 0573 F3       		.byte	0xf3
 5721 0574 01       		.uleb128 0x1
 5722 0575 50       		.byte	0x50
 5723 0576 9F       		.byte	0x9f
 5724 0577 00000000 		.4byte	0
 5725 057b 00000000 		.4byte	0
 5726              	.LLST35:
 5727 057f 04000000 		.4byte	.LVL120
 5728 0583 06000000 		.4byte	.LVL121
 5729 0587 0100     		.2byte	0x1
 5730 0589 53       		.byte	0x53
 5731 058a 08000000 		.4byte	.LVL122
 5732 058e 0C000000 		.4byte	.LVL124
 5733 0592 0100     		.2byte	0x1
 5734 0594 53       		.byte	0x53
 5735 0595 0C000000 		.4byte	.LVL124
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 156


 5736 0599 14000000 		.4byte	.LFE14
 5737 059d 0100     		.2byte	0x1
 5738 059f 50       		.byte	0x50
 5739 05a0 00000000 		.4byte	0
 5740 05a4 00000000 		.4byte	0
 5741              	.LLST36:
 5742 05a8 00000000 		.4byte	.LVL125
 5743 05ac 06000000 		.4byte	.LVL126
 5744 05b0 0100     		.2byte	0x1
 5745 05b2 50       		.byte	0x50
 5746 05b3 06000000 		.4byte	.LVL126
 5747 05b7 10000000 		.4byte	.LVL129
 5748 05bb 0100     		.2byte	0x1
 5749 05bd 54       		.byte	0x54
 5750 05be 10000000 		.4byte	.LVL129
 5751 05c2 12000000 		.4byte	.LFE15
 5752 05c6 0400     		.2byte	0x4
 5753 05c8 F3       		.byte	0xf3
 5754 05c9 01       		.uleb128 0x1
 5755 05ca 50       		.byte	0x50
 5756 05cb 9F       		.byte	0x9f
 5757 05cc 00000000 		.4byte	0
 5758 05d0 00000000 		.4byte	0
 5759              	.LLST37:
 5760 05d4 00000000 		.4byte	.LVL125
 5761 05d8 09000000 		.4byte	.LVL127-1
 5762 05dc 0100     		.2byte	0x1
 5763 05de 51       		.byte	0x51
 5764 05df 09000000 		.4byte	.LVL127-1
 5765 05e3 12000000 		.4byte	.LFE15
 5766 05e7 0400     		.2byte	0x4
 5767 05e9 F3       		.byte	0xf3
 5768 05ea 01       		.uleb128 0x1
 5769 05eb 51       		.byte	0x51
 5770 05ec 9F       		.byte	0x9f
 5771 05ed 00000000 		.4byte	0
 5772 05f1 00000000 		.4byte	0
 5773              	.LLST38:
 5774 05f5 00000000 		.4byte	.LVL130
 5775 05f9 24000000 		.4byte	.LVL133
 5776 05fd 0100     		.2byte	0x1
 5777 05ff 50       		.byte	0x50
 5778 0600 24000000 		.4byte	.LVL133
 5779 0604 38000000 		.4byte	.LVL138
 5780 0608 0100     		.2byte	0x1
 5781 060a 55       		.byte	0x55
 5782 060b 38000000 		.4byte	.LVL138
 5783 060f 40000000 		.4byte	.LFE16
 5784 0613 0400     		.2byte	0x4
 5785 0615 F3       		.byte	0xf3
 5786 0616 01       		.uleb128 0x1
 5787 0617 50       		.byte	0x50
 5788 0618 9F       		.byte	0x9f
 5789 0619 00000000 		.4byte	0
 5790 061d 00000000 		.4byte	0
 5791              	.LLST39:
 5792 0621 04000000 		.4byte	.LVL131
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 157


 5793 0625 0E000000 		.4byte	.LVL132
 5794 0629 0200     		.2byte	0x2
 5795 062b 30       		.byte	0x30
 5796 062c 9F       		.byte	0x9f
 5797 062d 0E000000 		.4byte	.LVL132
 5798 0631 38000000 		.4byte	.LVL137
 5799 0635 0100     		.2byte	0x1
 5800 0637 54       		.byte	0x54
 5801 0638 38000000 		.4byte	.LVL137
 5802 063c 40000000 		.4byte	.LFE16
 5803 0640 0100     		.2byte	0x1
 5804 0642 50       		.byte	0x50
 5805 0643 00000000 		.4byte	0
 5806 0647 00000000 		.4byte	0
 5807              	.LLST40:
 5808 064b 02000000 		.4byte	.LVL139
 5809 064f 08000000 		.4byte	.LVL140
 5810 0653 0200     		.2byte	0x2
 5811 0655 30       		.byte	0x30
 5812 0656 9F       		.byte	0x9f
 5813 0657 08000000 		.4byte	.LVL140
 5814 065b 18000000 		.4byte	.LVL145
 5815 065f 0100     		.2byte	0x1
 5816 0661 55       		.byte	0x55
 5817 0662 18000000 		.4byte	.LVL145
 5818 0666 1A000000 		.4byte	.LFE17
 5819 066a 0100     		.2byte	0x1
 5820 066c 50       		.byte	0x50
 5821 066d 00000000 		.4byte	0
 5822 0671 00000000 		.4byte	0
 5823              	.LLST41:
 5824 0675 02000000 		.4byte	.LVL139
 5825 0679 08000000 		.4byte	.LVL140
 5826 067d 0200     		.2byte	0x2
 5827 067f 30       		.byte	0x30
 5828 0680 9F       		.byte	0x9f
 5829 0681 08000000 		.4byte	.LVL140
 5830 0685 18000000 		.4byte	.LVL144
 5831 0689 0100     		.2byte	0x1
 5832 068b 54       		.byte	0x54
 5833 068c 00000000 		.4byte	0
 5834 0690 00000000 		.4byte	0
 5835              	.LLST42:
 5836 0694 02000000 		.4byte	.LVL146
 5837 0698 06000000 		.4byte	.LVL147
 5838 069c 0200     		.2byte	0x2
 5839 069e 30       		.byte	0x30
 5840 069f 9F       		.byte	0x9f
 5841 06a0 06000000 		.4byte	.LVL147
 5842 06a4 40000000 		.4byte	.LVL154
 5843 06a8 0100     		.2byte	0x1
 5844 06aa 55       		.byte	0x55
 5845 06ab 00000000 		.4byte	0
 5846 06af 00000000 		.4byte	0
 5847              	.LLST43:
 5848 06b3 1A000000 		.4byte	.LVL148
 5849 06b7 1E000000 		.4byte	.LVL149
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 158


 5850 06bb 0200     		.2byte	0x2
 5851 06bd 30       		.byte	0x30
 5852 06be 9F       		.byte	0x9f
 5853 06bf 1E000000 		.4byte	.LVL149
 5854 06c3 3A000000 		.4byte	.LVL152
 5855 06c7 0100     		.2byte	0x1
 5856 06c9 54       		.byte	0x54
 5857 06ca 00000000 		.4byte	0
 5858 06ce 00000000 		.4byte	0
 5859              	.LLST44:
 5860 06d2 1A000000 		.4byte	.LVL148
 5861 06d6 3A000000 		.4byte	.LVL152
 5862 06da 0100     		.2byte	0x1
 5863 06dc 56       		.byte	0x56
 5864 06dd 00000000 		.4byte	0
 5865 06e1 00000000 		.4byte	0
 5866              	.LLST45:
 5867 06e5 00000000 		.4byte	.LVL155
 5868 06e9 04000000 		.4byte	.LVL156
 5869 06ed 0100     		.2byte	0x1
 5870 06ef 50       		.byte	0x50
 5871 06f0 04000000 		.4byte	.LVL156
 5872 06f4 14000000 		.4byte	.LFE25
 5873 06f8 0400     		.2byte	0x4
 5874 06fa F3       		.byte	0xf3
 5875 06fb 01       		.uleb128 0x1
 5876 06fc 50       		.byte	0x50
 5877 06fd 9F       		.byte	0x9f
 5878 06fe 00000000 		.4byte	0
 5879 0702 00000000 		.4byte	0
 5880              	.LLST46:
 5881 0706 00000000 		.4byte	.LVL159
 5882 070a 12000000 		.4byte	.LVL160
 5883 070e 0100     		.2byte	0x1
 5884 0710 50       		.byte	0x50
 5885 0711 12000000 		.4byte	.LVL160
 5886 0715 1A000000 		.4byte	.LVL161
 5887 0719 0400     		.2byte	0x4
 5888 071b F3       		.byte	0xf3
 5889 071c 01       		.uleb128 0x1
 5890 071d 50       		.byte	0x50
 5891 071e 9F       		.byte	0x9f
 5892 071f 1A000000 		.4byte	.LVL161
 5893 0723 1C000000 		.4byte	.LVL162
 5894 0727 0100     		.2byte	0x1
 5895 0729 50       		.byte	0x50
 5896 072a 1C000000 		.4byte	.LVL162
 5897 072e 24000000 		.4byte	.LFE26
 5898 0732 0400     		.2byte	0x4
 5899 0734 F3       		.byte	0xf3
 5900 0735 01       		.uleb128 0x1
 5901 0736 50       		.byte	0x50
 5902 0737 9F       		.byte	0x9f
 5903 0738 00000000 		.4byte	0
 5904 073c 00000000 		.4byte	0
 5905              	.LLST47:
 5906 0740 20000000 		.4byte	.LVL163
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 159


 5907 0744 22000000 		.4byte	.LVL164
 5908 0748 0100     		.2byte	0x1
 5909 074a 50       		.byte	0x50
 5910 074b 00000000 		.4byte	0
 5911 074f 00000000 		.4byte	0
 5912              	.LLST48:
 5913 0753 00000000 		.4byte	.LVL165
 5914 0757 07000000 		.4byte	.LVL166-1
 5915 075b 0100     		.2byte	0x1
 5916 075d 50       		.byte	0x50
 5917 075e 07000000 		.4byte	.LVL166-1
 5918 0762 3A000000 		.4byte	.LFE20
 5919 0766 0400     		.2byte	0x4
 5920 0768 F3       		.byte	0xf3
 5921 0769 01       		.uleb128 0x1
 5922 076a 50       		.byte	0x50
 5923 076b 9F       		.byte	0x9f
 5924 076c 00000000 		.4byte	0
 5925 0770 00000000 		.4byte	0
 5926              	.LLST49:
 5927 0774 00000000 		.4byte	.LVL165
 5928 0778 07000000 		.4byte	.LVL166-1
 5929 077c 0100     		.2byte	0x1
 5930 077e 51       		.byte	0x51
 5931 077f 07000000 		.4byte	.LVL166-1
 5932 0783 38000000 		.4byte	.LVL180
 5933 0787 0100     		.2byte	0x1
 5934 0789 56       		.byte	0x56
 5935 078a 38000000 		.4byte	.LVL180
 5936 078e 3A000000 		.4byte	.LFE20
 5937 0792 0400     		.2byte	0x4
 5938 0794 F3       		.byte	0xf3
 5939 0795 01       		.uleb128 0x1
 5940 0796 51       		.byte	0x51
 5941 0797 9F       		.byte	0x9f
 5942 0798 00000000 		.4byte	0
 5943 079c 00000000 		.4byte	0
 5944              	.LLST50:
 5945 07a0 1C000000 		.4byte	.LVL172
 5946 07a4 20000000 		.4byte	.LVL173
 5947 07a8 0100     		.2byte	0x1
 5948 07aa 50       		.byte	0x50
 5949 07ab 20000000 		.4byte	.LVL173
 5950 07af 38000000 		.4byte	.LVL178
 5951 07b3 0100     		.2byte	0x1
 5952 07b5 54       		.byte	0x54
 5953 07b6 00000000 		.4byte	0
 5954 07ba 00000000 		.4byte	0
 5955              	.LLST51:
 5956 07be 30000000 		.4byte	.LVL176
 5957 07c2 32000000 		.4byte	.LVL177
 5958 07c6 0100     		.2byte	0x1
 5959 07c8 50       		.byte	0x50
 5960 07c9 00000000 		.4byte	0
 5961 07cd 00000000 		.4byte	0
 5962              	.LLST52:
 5963 07d1 14000000 		.4byte	.LVL169
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 160


 5964 07d5 16000000 		.4byte	.LVL170
 5965 07d9 0100     		.2byte	0x1
 5966 07db 50       		.byte	0x50
 5967 07dc 16000000 		.4byte	.LVL170
 5968 07e0 19000000 		.4byte	.LVL171-1
 5969 07e4 0100     		.2byte	0x1
 5970 07e6 51       		.byte	0x51
 5971 07e7 00000000 		.4byte	0
 5972 07eb 00000000 		.4byte	0
 5973              	.LLST53:
 5974 07ef 0A000000 		.4byte	.LVL167
 5975 07f3 11000000 		.4byte	.LVL168-1
 5976 07f7 0100     		.2byte	0x1
 5977 07f9 50       		.byte	0x50
 5978 07fa 11000000 		.4byte	.LVL168-1
 5979 07fe 38000000 		.4byte	.LVL179
 5980 0802 0100     		.2byte	0x1
 5981 0804 55       		.byte	0x55
 5982 0805 00000000 		.4byte	0
 5983 0809 00000000 		.4byte	0
 5984              	.LLST54:
 5985 080d 04000000 		.4byte	.LVL181
 5986 0811 2C000000 		.4byte	.LVL184
 5987 0815 0200     		.2byte	0x2
 5988 0817 30       		.byte	0x30
 5989 0818 9F       		.byte	0x9f
 5990 0819 2C000000 		.4byte	.LVL184
 5991 081d 8A000000 		.4byte	.LVL190
 5992 0821 0100     		.2byte	0x1
 5993 0823 56       		.byte	0x56
 5994 0824 8C000000 		.4byte	.LVL191
 5995 0828 3C010000 		.4byte	.LVL210
 5996 082c 0100     		.2byte	0x1
 5997 082e 56       		.byte	0x56
 5998 082f 3C010000 		.4byte	.LVL210
 5999 0833 68010000 		.4byte	.LFE18
 6000 0837 0100     		.2byte	0x1
 6001 0839 50       		.byte	0x50
 6002 083a 00000000 		.4byte	0
 6003 083e 00000000 		.4byte	0
 6004              	.LLST55:
 6005 0842 26000000 		.4byte	.LVL183
 6006 0846 2C000000 		.4byte	.LVL184
 6007 084a 0200     		.2byte	0x2
 6008 084c 30       		.byte	0x30
 6009 084d 9F       		.byte	0x9f
 6010 084e 2C000000 		.4byte	.LVL184
 6011 0852 BC000000 		.4byte	.LVL195
 6012 0856 0100     		.2byte	0x1
 6013 0858 55       		.byte	0x55
 6014 0859 BC000000 		.4byte	.LVL195
 6015 085d 0A010000 		.4byte	.LVL202
 6016 0861 0100     		.2byte	0x1
 6017 0863 54       		.byte	0x54
 6018 0864 0C010000 		.4byte	.LVL203
 6019 0868 3C010000 		.4byte	.LVL209
 6020 086c 0100     		.2byte	0x1
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 161


 6021 086e 54       		.byte	0x54
 6022 086f 00000000 		.4byte	0
 6023 0873 00000000 		.4byte	0
 6024              	.LLST56:
 6025 0877 04000000 		.4byte	.LVL181
 6026 087b 2C000000 		.4byte	.LVL184
 6027 087f 0200     		.2byte	0x2
 6028 0881 30       		.byte	0x30
 6029 0882 9F       		.byte	0x9f
 6030 0883 82000000 		.4byte	.LVL189
 6031 0887 AA000000 		.4byte	.LVL193
 6032 088b 0100     		.2byte	0x1
 6033 088d 50       		.byte	0x50
 6034 088e 00000000 		.4byte	0
 6035 0892 00000000 		.4byte	0
 6036              	.LLST57:
 6037 0896 42000000 		.4byte	.LVL185
 6038 089a AA000000 		.4byte	.LVL193
 6039 089e 0100     		.2byte	0x1
 6040 08a0 54       		.byte	0x54
 6041 08a1 D2000000 		.4byte	.LVL196
 6042 08a5 02010000 		.4byte	.LVL200
 6043 08a9 0100     		.2byte	0x1
 6044 08ab 55       		.byte	0x55
 6045 08ac 22010000 		.4byte	.LVL204
 6046 08b0 27010000 		.4byte	.LVL205-1
 6047 08b4 0100     		.2byte	0x1
 6048 08b6 51       		.byte	0x51
 6049 08b7 00000000 		.4byte	0
 6050 08bb 00000000 		.4byte	0
 6051              	.LLST58:
 6052 08bf 02000000 		.4byte	.LVL211
 6053 08c3 06000000 		.4byte	.LVL212
 6054 08c7 0200     		.2byte	0x2
 6055 08c9 30       		.byte	0x30
 6056 08ca 9F       		.byte	0x9f
 6057 08cb 06000000 		.4byte	.LVL212
 6058 08cf 30000000 		.4byte	.LVL218
 6059 08d3 0100     		.2byte	0x1
 6060 08d5 54       		.byte	0x54
 6061 08d6 00000000 		.4byte	0
 6062 08da 00000000 		.4byte	0
 6063              	.LLST59:
 6064 08de 10000000 		.4byte	.LVL213
 6065 08e2 21000000 		.4byte	.LVL214-1
 6066 08e6 0100     		.2byte	0x1
 6067 08e8 51       		.byte	0x51
 6068 08e9 24000000 		.4byte	.LVL215
 6069 08ed 29000000 		.4byte	.LVL216-1
 6070 08f1 0100     		.2byte	0x1
 6071 08f3 51       		.byte	0x51
 6072 08f4 00000000 		.4byte	0
 6073 08f8 00000000 		.4byte	0
 6074              	.LLST60:
 6075 08fc 0A000000 		.4byte	.LVL224
 6076 0900 0E000000 		.4byte	.LVL225
 6077 0904 0100     		.2byte	0x1
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 162


 6078 0906 51       		.byte	0x51
 6079 0907 0E000000 		.4byte	.LVL225
 6080 090b 13000000 		.4byte	.LVL226-1
 6081 090f 0100     		.2byte	0x1
 6082 0911 53       		.byte	0x53
 6083 0912 1C000000 		.4byte	.LVL228
 6084 0916 25000000 		.4byte	.LVL230-1
 6085 091a 0100     		.2byte	0x1
 6086 091c 53       		.byte	0x53
 6087 091d 2E000000 		.4byte	.LVL232
 6088 0921 3D000000 		.4byte	.LVL235-1
 6089 0925 0100     		.2byte	0x1
 6090 0927 53       		.byte	0x53
 6091 0928 4A000000 		.4byte	.LVL238
 6092 092c 4C000000 		.4byte	.LVL239
 6093 0930 0100     		.2byte	0x1
 6094 0932 53       		.byte	0x53
 6095 0933 4C000000 		.4byte	.LVL239
 6096 0937 52000000 		.4byte	.LVL241
 6097 093b 0100     		.2byte	0x1
 6098 093d 55       		.byte	0x55
 6099 093e 00000000 		.4byte	0
 6100 0942 00000000 		.4byte	0
 6101              	.LLST61:
 6102 0946 06000000 		.4byte	.LVL223
 6103 094a 13000000 		.4byte	.LVL226-1
 6104 094e 0100     		.2byte	0x1
 6105 0950 50       		.byte	0x50
 6106 0951 18000000 		.4byte	.LVL227
 6107 0955 25000000 		.4byte	.LVL230-1
 6108 0959 0100     		.2byte	0x1
 6109 095b 50       		.byte	0x50
 6110 095c 2A000000 		.4byte	.LVL231
 6111 0960 3D000000 		.4byte	.LVL235-1
 6112 0964 0100     		.2byte	0x1
 6113 0966 50       		.byte	0x50
 6114 0967 48000000 		.4byte	.LVL237
 6115 096b 51000000 		.4byte	.LVL240-1
 6116 096f 0100     		.2byte	0x1
 6117 0971 50       		.byte	0x50
 6118 0972 00000000 		.4byte	0
 6119 0976 00000000 		.4byte	0
 6120              		.section	.debug_aranges,"",%progbits
 6121 0000 EC000000 		.4byte	0xec
 6122 0004 0200     		.2byte	0x2
 6123 0006 00000000 		.4byte	.Ldebug_info0
 6124 000a 04       		.byte	0x4
 6125 000b 00       		.byte	0
 6126 000c 0000     		.2byte	0
 6127 000e 0000     		.2byte	0
 6128 0010 00000000 		.4byte	.LFB22
 6129 0014 84000000 		.4byte	.LFE22-.LFB22
 6130 0018 00000000 		.4byte	.LFB23
 6131 001c 42000000 		.4byte	.LFE23-.LFB23
 6132 0020 00000000 		.4byte	.LFB7
 6133 0024 24000000 		.4byte	.LFE7-.LFB7
 6134 0028 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 163


 6135 002c 28000000 		.4byte	.LFE8-.LFB8
 6136 0030 00000000 		.4byte	.LFB21
 6137 0034 26000000 		.4byte	.LFE21-.LFB21
 6138 0038 00000000 		.4byte	.LFB1
 6139 003c 10000000 		.4byte	.LFE1-.LFB1
 6140 0040 00000000 		.4byte	.LFB2
 6141 0044 64000000 		.4byte	.LFE2-.LFB2
 6142 0048 00000000 		.4byte	.LFB3
 6143 004c 38000000 		.4byte	.LFE3-.LFB3
 6144 0050 00000000 		.4byte	.LFB4
 6145 0054 48000000 		.4byte	.LFE4-.LFB4
 6146 0058 00000000 		.4byte	.LFB6
 6147 005c EC000000 		.4byte	.LFE6-.LFB6
 6148 0060 00000000 		.4byte	.LFB9
 6149 0064 54000000 		.4byte	.LFE9-.LFB9
 6150 0068 00000000 		.4byte	.LFB10
 6151 006c 40000000 		.4byte	.LFE10-.LFB10
 6152 0070 00000000 		.4byte	.LFB11
 6153 0074 78000000 		.4byte	.LFE11-.LFB11
 6154 0078 00000000 		.4byte	.LFB12
 6155 007c 08000000 		.4byte	.LFE12-.LFB12
 6156 0080 00000000 		.4byte	.LFB13
 6157 0084 30000000 		.4byte	.LFE13-.LFB13
 6158 0088 00000000 		.4byte	.LFB14
 6159 008c 14000000 		.4byte	.LFE14-.LFB14
 6160 0090 00000000 		.4byte	.LFB15
 6161 0094 12000000 		.4byte	.LFE15-.LFB15
 6162 0098 00000000 		.4byte	.LFB16
 6163 009c 40000000 		.4byte	.LFE16-.LFB16
 6164 00a0 00000000 		.4byte	.LFB17
 6165 00a4 1A000000 		.4byte	.LFE17-.LFB17
 6166 00a8 00000000 		.4byte	.LFB24
 6167 00ac 48000000 		.4byte	.LFE24-.LFB24
 6168 00b0 00000000 		.4byte	.LFB25
 6169 00b4 14000000 		.4byte	.LFE25-.LFB25
 6170 00b8 00000000 		.4byte	.LFB26
 6171 00bc 24000000 		.4byte	.LFE26-.LFB26
 6172 00c0 00000000 		.4byte	.LFB20
 6173 00c4 3A000000 		.4byte	.LFE20-.LFB20
 6174 00c8 00000000 		.4byte	.LFB18
 6175 00cc 68010000 		.4byte	.LFE18-.LFB18
 6176 00d0 00000000 		.4byte	.LFB19
 6177 00d4 38000000 		.4byte	.LFE19-.LFB19
 6178 00d8 00000000 		.4byte	.LFB5
 6179 00dc 14000000 		.4byte	.LFE5-.LFB5
 6180 00e0 00000000 		.4byte	.LFB27
 6181 00e4 68000000 		.4byte	.LFE27-.LFB27
 6182 00e8 00000000 		.4byte	0
 6183 00ec 00000000 		.4byte	0
 6184              		.section	.debug_ranges,"",%progbits
 6185              	.Ldebug_ranges0:
 6186 0000 00000000 		.4byte	.LFB22
 6187 0004 84000000 		.4byte	.LFE22
 6188 0008 00000000 		.4byte	.LFB23
 6189 000c 42000000 		.4byte	.LFE23
 6190 0010 00000000 		.4byte	.LFB7
 6191 0014 24000000 		.4byte	.LFE7
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 164


 6192 0018 00000000 		.4byte	.LFB8
 6193 001c 28000000 		.4byte	.LFE8
 6194 0020 00000000 		.4byte	.LFB21
 6195 0024 26000000 		.4byte	.LFE21
 6196 0028 00000000 		.4byte	.LFB1
 6197 002c 10000000 		.4byte	.LFE1
 6198 0030 00000000 		.4byte	.LFB2
 6199 0034 64000000 		.4byte	.LFE2
 6200 0038 00000000 		.4byte	.LFB3
 6201 003c 38000000 		.4byte	.LFE3
 6202 0040 00000000 		.4byte	.LFB4
 6203 0044 48000000 		.4byte	.LFE4
 6204 0048 00000000 		.4byte	.LFB6
 6205 004c EC000000 		.4byte	.LFE6
 6206 0050 00000000 		.4byte	.LFB9
 6207 0054 54000000 		.4byte	.LFE9
 6208 0058 00000000 		.4byte	.LFB10
 6209 005c 40000000 		.4byte	.LFE10
 6210 0060 00000000 		.4byte	.LFB11
 6211 0064 78000000 		.4byte	.LFE11
 6212 0068 00000000 		.4byte	.LFB12
 6213 006c 08000000 		.4byte	.LFE12
 6214 0070 00000000 		.4byte	.LFB13
 6215 0074 30000000 		.4byte	.LFE13
 6216 0078 00000000 		.4byte	.LFB14
 6217 007c 14000000 		.4byte	.LFE14
 6218 0080 00000000 		.4byte	.LFB15
 6219 0084 12000000 		.4byte	.LFE15
 6220 0088 00000000 		.4byte	.LFB16
 6221 008c 40000000 		.4byte	.LFE16
 6222 0090 00000000 		.4byte	.LFB17
 6223 0094 1A000000 		.4byte	.LFE17
 6224 0098 00000000 		.4byte	.LFB24
 6225 009c 48000000 		.4byte	.LFE24
 6226 00a0 00000000 		.4byte	.LFB25
 6227 00a4 14000000 		.4byte	.LFE25
 6228 00a8 00000000 		.4byte	.LFB26
 6229 00ac 24000000 		.4byte	.LFE26
 6230 00b0 00000000 		.4byte	.LFB20
 6231 00b4 3A000000 		.4byte	.LFE20
 6232 00b8 00000000 		.4byte	.LFB18
 6233 00bc 68010000 		.4byte	.LFE18
 6234 00c0 00000000 		.4byte	.LFB19
 6235 00c4 38000000 		.4byte	.LFE19
 6236 00c8 00000000 		.4byte	.LFB5
 6237 00cc 14000000 		.4byte	.LFE5
 6238 00d0 00000000 		.4byte	.LFB27
 6239 00d4 68000000 		.4byte	.LFE27
 6240 00d8 00000000 		.4byte	0
 6241 00dc 00000000 		.4byte	0
 6242              		.section	.debug_line,"",%progbits
 6243              	.Ldebug_line0:
 6244 0000 45050000 		.section	.debug_str,"MS",%progbits,1
 6244      0200F200 
 6244      00000201 
 6244      FB0E0D00 
 6244      01010101 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 165


 6245              	.LASF188:
 6246 0000 43617053 		.ascii	"CapSense_curFlashWdgtPtr\000"
 6246      656E7365 
 6246      5F637572 
 6246      466C6173 
 6246      68576467 
 6247              	.LASF165:
 6248 0019 43617053 		.ascii	"CapSense_SsCSDGetColSnsClkDivider\000"
 6248      656E7365 
 6248      5F537343 
 6248      53444765 
 6248      74436F6C 
 6249              	.LASF139:
 6250 003b 73656E73 		.ascii	"sensorElement\000"
 6250      6F72456C 
 6250      656D656E 
 6250      7400
 6251              	.LASF137:
 6252 0049 7363616E 		.ascii	"scanStatus\000"
 6252      53746174 
 6252      757300
 6253              	.LASF128:
 6254 0054 43617053 		.ascii	"CapSense_SsCSDDisableMode\000"
 6254      656E7365 
 6254      5F537343 
 6254      53444469 
 6254      7361626C 
 6255              	.LASF148:
 6256 006e 43617053 		.ascii	"CapSense_SsSetIOsInDefaultState\000"
 6256      656E7365 
 6256      5F537353 
 6256      6574494F 
 6256      73496E44 
 6257              	.LASF178:
 6258 008e 43617053 		.ascii	"CapSense_BistDischargeExtCapacitors\000"
 6258      656E7365 
 6258      5F426973 
 6258      74446973 
 6258      63686172 
 6259              	.LASF203:
 6260 00b2 43617053 		.ascii	"CapSense_CSXInitialize\000"
 6260      656E7365 
 6260      5F435358 
 6260      496E6974 
 6260      69616C69 
 6261              	.LASF182:
 6262 00c9 43617053 		.ascii	"CapSense_widgetIndex\000"
 6262      656E7365 
 6262      5F776964 
 6262      67657449 
 6262      6E646578 
 6263              	.LASF85:
 6264 00de 736E7254 		.ascii	"snrTestWidgetId\000"
 6264      65737457 
 6264      69646765 
 6264      74496400 
 6265              	.LASF39:
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 166


 6266 00ee 43617053 		.ascii	"CapSense_UNDEFINED_E\000"
 6266      656E7365 
 6266      5F554E44 
 6266      4546494E 
 6266      45445F45 
 6267              	.LASF8:
 6268 0103 756E7369 		.ascii	"unsigned int\000"
 6268      676E6564 
 6268      20696E74 
 6268      00
 6269              	.LASF75:
 6270 0110 7363616E 		.ascii	"scanCounter\000"
 6270      436F756E 
 6270      74657200 
 6271              	.LASF73:
 6272 011c 6877436C 		.ascii	"hwClock\000"
 6272      6F636B00 
 6273              	.LASF95:
 6274 0124 6D61736B 		.ascii	"mask\000"
 6274      00
 6275              	.LASF177:
 6276 0129 696E6974 		.ascii	"initStatus\000"
 6276      53746174 
 6276      757300
 6277              	.LASF150:
 6278 0134 72656756 		.ascii	"regValue\000"
 6278      616C7565 
 6278      00
 6279              	.LASF143:
 6280 013d 696E7465 		.ascii	"interruptState\000"
 6280      72727570 
 6280      74537461 
 6280      746500
 6281              	.LASF124:
 6282 014c 6C667372 		.ascii	"lfsrScale\000"
 6282      5363616C 
 6282      6500
 6283              	.LASF22:
 6284 0156 69446163 		.ascii	"iDacGain\000"
 6284      4761696E 
 6284      00
 6285              	.LASF210:
 6286 015f 536D6172 		.ascii	"SmartSense_TuneSensitivity\000"
 6286      7453656E 
 6286      73655F54 
 6286      756E6553 
 6286      656E7369 
 6287              	.LASF25:
 6288 017a 736E7343 		.ascii	"snsClkInputClock\000"
 6288      6C6B496E 
 6288      70757443 
 6288      6C6F636B 
 6288      00
 6289              	.LASF125:
 6290 018b 6C667372 		.ascii	"lfsrRange\000"
 6290      52616E67 
 6290      6500
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 167


 6291              	.LASF147:
 6292 0195 6D6F6465 		.ascii	"mode\000"
 6292      00
 6293              	.LASF215:
 6294 019a 43617053 		.ascii	"CapSense_IsBusy\000"
 6294      656E7365 
 6294      5F497342 
 6294      75737900 
 6295              	.LASF155:
 6296 01aa 43617053 		.ascii	"CapSense_SsSetModClkClockDivider\000"
 6296      656E7365 
 6296      5F537353 
 6296      65744D6F 
 6296      64436C6B 
 6297              	.LASF63:
 6298 01cb 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 6298      656E7365 
 6298      5F52414D 
 6298      5F57445F 
 6298      4C495354 
 6299              	.LASF114:
 6300 01e7 69697246 		.ascii	"iirFilterCoeff\000"
 6300      696C7465 
 6300      72436F65 
 6300      666600
 6301              	.LASF173:
 6302 01f6 63705769 		.ascii	"cpWidget\000"
 6302      64676574 
 6302      00
 6303              	.LASF141:
 6304 01ff 656C7464 		.ascii	"eltdNum\000"
 6304      4E756D00 
 6305              	.LASF132:
 6306 0207 70747257 		.ascii	"ptrWdgt\000"
 6306      64677400 
 6307              	.LASF170:
 6308 020f 43617053 		.ascii	"CapSense_SsSetWidgetSenseClkSrc\000"
 6308      656E7365 
 6308      5F537353 
 6308      65745769 
 6308      64676574 
 6309              	.LASF149:
 6310 022f 6C6F6F70 		.ascii	"loopIndex\000"
 6310      496E6465 
 6310      7800
 6311              	.LASF122:
 6312 0239 43617053 		.ascii	"CapSense_SsCalcLfsrScale\000"
 6312      656E7365 
 6312      5F537343 
 6312      616C634C 
 6312      66737253 
 6313              	.LASF12:
 6314 0252 666C6F61 		.ascii	"float\000"
 6314      7400
 6315              	.LASF98:
 6316 0258 73686966 		.ascii	"shift\000"
 6316      7400
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 168


 6317              	.LASF162:
 6318 025e 43617053 		.ascii	"CapSense_SsClearCSDSensors\000"
 6318      656E7365 
 6318      5F537343 
 6318      6C656172 
 6318      43534453 
 6319              	.LASF212:
 6320 0279 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6320      43313120 
 6320      352E342E 
 6320      31203230 
 6320      31363036 
 6321 02ac 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 6321      20726576 
 6321      6973696F 
 6321      6E203233 
 6321      37373135 
 6322 02df 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 6322      67202D66 
 6322      66756E63 
 6322      74696F6E 
 6322      2D736563 
 6323              	.LASF129:
 6324 030b 43617053 		.ascii	"CapSense_SsDisableCSXMode\000"
 6324      656E7365 
 6324      5F537344 
 6324      69736162 
 6324      6C654353 
 6325              	.LASF196:
 6326 0325 43617053 		.ascii	"CapSense_CSDSetupWidget\000"
 6326      656E7365 
 6326      5F435344 
 6326      53657475 
 6326      70576964 
 6327              	.LASF195:
 6328 033d 43617053 		.ascii	"CapSense_CSXSetupWidget\000"
 6328      656E7365 
 6328      5F435358 
 6328      53657475 
 6328      70576964 
 6329              	.LASF211:
 6330 0355 43794465 		.ascii	"CyDelayUs\000"
 6330      6C617955 
 6330      7300
 6331              	.LASF84:
 6332 035f 736E734C 		.ascii	"snsList\000"
 6332      69737400 
 6333              	.LASF7:
 6334 0367 6C6F6E67 		.ascii	"long long unsigned int\000"
 6334      206C6F6E 
 6334      6720756E 
 6334      7369676E 
 6334      65642069 
 6335              	.LASF183:
 6336 037e 43617053 		.ascii	"CapSense_sensorIndex\000"
 6336      656E7365 
 6336      5F73656E 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 169


 6336      736F7249 
 6336      6E646578 
 6337              	.LASF99:
 6338 0393 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 6338      656E7365 
 6338      5F464C41 
 6338      53485F49 
 6338      4F5F5354 
 6339              	.LASF86:
 6340 03ac 736E7254 		.ascii	"snrTestSensorId\000"
 6340      65737453 
 6340      656E736F 
 6340      72496400 
 6341              	.LASF113:
 6342 03bc 70747232 		.ascii	"ptr2NoiseEnvlp\000"
 6342      4E6F6973 
 6342      65456E76 
 6342      6C7000
 6343              	.LASF107:
 6344 03cb 77646774 		.ascii	"wdgtType\000"
 6344      54797065 
 6344      00
 6345              	.LASF123:
 6346 03d4 6C667372 		.ascii	"lfsrSize\000"
 6346      53697A65 
 6346      00
 6347              	.LASF172:
 6348 03dd 6175746F 		.ascii	"autoTuneStatus\000"
 6348      54756E65 
 6348      53746174 
 6348      757300
 6349              	.LASF81:
 6350 03ec 6D6F6443 		.ascii	"modCsdClk\000"
 6350      7364436C 
 6350      6B00
 6351              	.LASF69:
 6352 03f6 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 6352      656E7365 
 6352      5F52414D 
 6352      5F534E53 
 6352      5F535452 
 6353              	.LASF167:
 6354 040e 43617053 		.ascii	"CapSense_SsCSDCalcPrsSize\000"
 6354      656E7365 
 6354      5F537343 
 6354      53444361 
 6354      6C635072 
 6355              	.LASF26:
 6356 0428 63616C54 		.ascii	"calTarget\000"
 6356      61726765 
 6356      7400
 6357              	.LASF92:
 6358 0432 64725074 		.ascii	"drPtr\000"
 6358      7200
 6359              	.LASF156:
 6360 0438 6D6F6443 		.ascii	"modClk\000"
 6360      6C6B00
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 170


 6361              	.LASF28:
 6362 043f 73696750 		.ascii	"sigPFC\000"
 6362      464300
 6363              	.LASF49:
 6364 0446 68797374 		.ascii	"hysteresis\000"
 6364      65726573 
 6364      697300
 6365              	.LASF115:
 6366 0451 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 6366      656E7365 
 6366      5F464C41 
 6366      53485F57 
 6366      445F5354 
 6367              	.LASF51:
 6368 046a 6C6F7742 		.ascii	"lowBslnRst\000"
 6368      736C6E52 
 6368      737400
 6369              	.LASF121:
 6370 0475 43617053 		.ascii	"CapSense_SsCalcLfsrSize\000"
 6370      656E7365 
 6370      5F537343 
 6370      616C634C 
 6370      66737253 
 6371              	.LASF60:
 6372 048d 62746E30 		.ascii	"btn0\000"
 6372      00
 6373              	.LASF61:
 6374 0492 62746E31 		.ascii	"btn1\000"
 6374      00
 6375              	.LASF62:
 6376 0497 62746E32 		.ascii	"btn2\000"
 6376      00
 6377              	.LASF106:
 6378 049c 746F7461 		.ascii	"totalNumSns\000"
 6378      6C4E756D 
 6378      536E7300 
 6379              	.LASF38:
 6380 04a8 534D4152 		.ascii	"SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT\000"
 6380      5453454E 
 6380      53455F43 
 6380      53445F4E 
 6380      4F495345 
 6381              	.LASF174:
 6382 04cd 6175746F 		.ascii	"autoTuneConfig\000"
 6382      54756E65 
 6382      436F6E66 
 6382      696700
 6383              	.LASF47:
 6384 04dc 6E6F6973 		.ascii	"noiseTh\000"
 6384      65546800 
 6385              	.LASF14:
 6386 04e4 63686172 		.ascii	"char\000"
 6386      00
 6387              	.LASF200:
 6388 04e9 43794578 		.ascii	"CyExitCriticalSection\000"
 6388      69744372 
 6388      69746963 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 171


 6388      616C5365 
 6388      6374696F 
 6389              	.LASF208:
 6390 04ff 43617053 		.ascii	"CapSense_SsCSDGetNumberOfConversions\000"
 6390      656E7365 
 6390      5F537343 
 6390      53444765 
 6390      744E756D 
 6391              	.LASF96:
 6392 0524 6873696F 		.ascii	"hsiomShift\000"
 6392      6D536869 
 6392      667400
 6393              	.LASF10:
 6394 052f 75696E74 		.ascii	"uint16\000"
 6394      313600
 6395              	.LASF120:
 6396 0536 636F6E76 		.ascii	"conversionsNum\000"
 6396      65727369 
 6396      6F6E734E 
 6396      756D00
 6397              	.LASF171:
 6398 0545 43617053 		.ascii	"CapSense_SsAutoTune\000"
 6398      656E7365 
 6398      5F537341 
 6398      75746F54 
 6398      756E6500 
 6399              	.LASF45:
 6400 0559 7265736F 		.ascii	"resolution\000"
 6400      6C757469 
 6400      6F6E00
 6401              	.LASF76:
 6402 0564 73746174 		.ascii	"status\000"
 6402      757300
 6403              	.LASF159:
 6404 056b 43617053 		.ascii	"CapSense_CalibrateWidget\000"
 6404      656E7365 
 6404      5F43616C 
 6404      69627261 
 6404      74655769 
 6405              	.LASF19:
 6406 0584 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 6406      656E7365 
 6406      5F4C4F57 
 6406      5F42534C 
 6406      4E5F5253 
 6407              	.LASF157:
 6408 059f 43617053 		.ascii	"CapSense_SsSetSnsClockDivider\000"
 6408      656E7365 
 6408      5F537353 
 6408      6574536E 
 6408      73436C6F 
 6409              	.LASF44:
 6410 05bd 43617053 		.ascii	"CapSense_SENSE_METHOD_ENUM\000"
 6410      656E7365 
 6410      5F53454E 
 6410      53455F4D 
 6410      4554484F 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 172


 6411              	.LASF68:
 6412 05d8 69646163 		.ascii	"idacComp\000"
 6412      436F6D70 
 6412      00
 6413              	.LASF91:
 6414 05e1 70635074 		.ascii	"pcPtr\000"
 6414      7200
 6415              	.LASF6:
 6416 05e7 6C6F6E67 		.ascii	"long long int\000"
 6416      206C6F6E 
 6416      6720696E 
 6416      7400
 6417              	.LASF109:
 6418 05f5 6E756D43 		.ascii	"numCols\000"
 6418      6F6C7300 
 6419              	.LASF202:
 6420 05fd 43617053 		.ascii	"CapSense_SsCSDInitialize\000"
 6420      656E7365 
 6420      5F537343 
 6420      5344496E 
 6420      69746961 
 6421              	.LASF50:
 6422 0616 6F6E4465 		.ascii	"onDebounce\000"
 6422      626F756E 
 6422      636500
 6423              	.LASF154:
 6424 0621 61646472 		.ascii	"address\000"
 6424      65737300 
 6425              	.LASF160:
 6426 0629 63616C69 		.ascii	"calibrateStatus\000"
 6426      62726174 
 6426      65537461 
 6426      74757300 
 6427              	.LASF83:
 6428 0639 77646774 		.ascii	"wdgtList\000"
 6428      4C697374 
 6428      00
 6429              	.LASF161:
 6430 0642 43617053 		.ascii	"CapSense_CalibrateAllWidgets\000"
 6430      656E7365 
 6430      5F43616C 
 6430      69627261 
 6430      7465416C 
 6431              	.LASF117:
 6432 065f 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 6432      656E7365 
 6432      5F464C41 
 6432      53485F53 
 6432      54525543 
 6433              	.LASF136:
 6434 0675 43617053 		.ascii	"CapSense_Scan\000"
 6434      656E7365 
 6434      5F536361 
 6434      6E00
 6435              	.LASF179:
 6436 0683 43617053 		.ascii	"CapSense_dsRam\000"
 6436      656E7365 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 173


 6436      5F647352 
 6436      616D00
 6437              	.LASF88:
 6438 0692 736E7254 		.ascii	"snrTestRawCount\000"
 6438      65737452 
 6438      6177436F 
 6438      756E7400 
 6439              	.LASF48:
 6440 06a2 6E4E6F69 		.ascii	"nNoiseTh\000"
 6440      73655468 
 6440      00
 6441              	.LASF80:
 6442 06ab 63736430 		.ascii	"csd0Config\000"
 6442      436F6E66 
 6442      696700
 6443              	.LASF17:
 6444 06b6 63796973 		.ascii	"cyisraddress\000"
 6444      72616464 
 6444      72657373 
 6444      00
 6445              	.LASF56:
 6446 06c3 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 6446      656E7365 
 6446      5F52414D 
 6446      5F57445F 
 6446      42415345 
 6447              	.LASF90:
 6448 06df 6873696F 		.ascii	"hsiomPtr\000"
 6448      6D507472 
 6448      00
 6449              	.LASF193:
 6450 06e8 43617053 		.ascii	"CapSense_CSXElectrodeCheck\000"
 6450      656E7365 
 6450      5F435358 
 6450      456C6563 
 6450      74726F64 
 6451              	.LASF11:
 6452 0703 75696E74 		.ascii	"uint32\000"
 6452      333200
 6453              	.LASF103:
 6454 070a 70747232 		.ascii	"ptr2FltrHistory\000"
 6454      466C7472 
 6454      48697374 
 6454      6F727900 
 6455              	.LASF189:
 6456 071a 43617053 		.ascii	"CapSense_curSnsIOPtr\000"
 6456      656E7365 
 6456      5F637572 
 6456      536E7349 
 6456      4F507472 
 6457              	.LASF29:
 6458 072f 69446163 		.ascii	"iDac\000"
 6458      00
 6459              	.LASF158:
 6460 0734 43617053 		.ascii	"CapSense_SsSetClockDividers\000"
 6460      656E7365 
 6460      5F537353 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 174


 6460      6574436C 
 6460      6F636B44 
 6461              	.LASF205:
 6462 0750 43617053 		.ascii	"CapSense_CSXCalibrateWidget\000"
 6462      656E7365 
 6462      5F435358 
 6462      43616C69 
 6462      62726174 
 6463              	.LASF209:
 6464 076c 536D6172 		.ascii	"SmartSense_TunePrescalers\000"
 6464      7453656E 
 6464      73655F54 
 6464      756E6550 
 6464      72657363 
 6465              	.LASF27:
 6466 0786 70747253 		.ascii	"ptrSenseClk\000"
 6466      656E7365 
 6466      436C6B00 
 6467              	.LASF131:
 6468 0792 77646774 		.ascii	"wdgtIndex\000"
 6468      496E6465 
 6468      7800
 6469              	.LASF163:
 6470 079c 736E7349 		.ascii	"snsIndex\000"
 6470      6E646578 
 6470      00
 6471              	.LASF43:
 6472 07a5 43617053 		.ascii	"CapSense_SENSE_METHOD_ISX_E\000"
 6472      656E7365 
 6472      5F53454E 
 6472      53455F4D 
 6472      4554484F 
 6473              	.LASF118:
 6474 07c1 6C6F6E67 		.ascii	"long double\000"
 6474      20646F75 
 6474      626C6500 
 6475              	.LASF20:
 6476 07cd 736E7343 		.ascii	"snsClkConstantR\000"
 6476      6C6B436F 
 6476      6E737461 
 6476      6E745200 
 6477              	.LASF16:
 6478 07dd 72656733 		.ascii	"reg32\000"
 6478      3200
 6479              	.LASF87:
 6480 07e3 736E7254 		.ascii	"snrTestScanCounter\000"
 6480      65737453 
 6480      63616E43 
 6480      6F756E74 
 6480      657200
 6481              	.LASF71:
 6482 07f6 636F6E66 		.ascii	"configId\000"
 6482      69674964 
 6482      00
 6483              	.LASF102:
 6484 07ff 70747232 		.ascii	"ptr2SnsRam\000"
 6484      536E7352 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 175


 6484      616D00
 6485              	.LASF130:
 6486 080a 43617053 		.ascii	"CapSense_SsSetWidgetTxClkSrc\000"
 6486      656E7365 
 6486      5F537353 
 6486      65745769 
 6486      64676574 
 6487              	.LASF176:
 6488 0827 43617053 		.ascii	"CapSense_SsInitialize\000"
 6488      656E7365 
 6488      5F537349 
 6488      6E697469 
 6488      616C697A 
 6489              	.LASF190:
 6490 083d 43617053 		.ascii	"CapSense_calibratedIdac\000"
 6490      656E7365 
 6490      5F63616C 
 6490      69627261 
 6490      74656449 
 6491              	.LASF79:
 6492 0855 736E7353 		.ascii	"snsStatus\000"
 6492      74617475 
 6492      7300
 6493              	.LASF152:
 6494 085f 706F7374 		.ascii	"postScanStatus\000"
 6494      5363616E 
 6494      53746174 
 6494      757300
 6495              	.LASF54:
 6496 086e 736E7343 		.ascii	"snsClkSource\000"
 6496      6C6B536F 
 6496      75726365 
 6496      00
 6497              	.LASF192:
 6498 087b 43617053 		.ascii	"CapSense_SsCSDElectrodeCheck\000"
 6498      656E7365 
 6498      5F537343 
 6498      5344456C 
 6498      65637472 
 6499              	.LASF111:
 6500 0898 78526573 		.ascii	"xResolution\000"
 6500      6F6C7574 
 6500      696F6E00 
 6501              	.LASF153:
 6502 08a4 43617053 		.ascii	"CapSense_SsIsrInitialize\000"
 6502      656E7365 
 6502      5F537349 
 6502      7372496E 
 6502      69746961 
 6503              	.LASF2:
 6504 08bd 73686F72 		.ascii	"short int\000"
 6504      7420696E 
 6504      7400
 6505              	.LASF89:
 6506 08c7 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 6506      656E7365 
 6506      5F52414D 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 176


 6506      5F535452 
 6506      55435400 
 6507              	.LASF207:
 6508 08db 43617053 		.ascii	"CapSense_CSDDisconnectSns\000"
 6508      656E7365 
 6508      5F435344 
 6508      44697363 
 6508      6F6E6E65 
 6509              	.LASF4:
 6510 08f5 6C6F6E67 		.ascii	"long int\000"
 6510      20696E74 
 6510      00
 6511              	.LASF77:
 6512 08fe 77646774 		.ascii	"wdgtEnable\000"
 6512      456E6162 
 6512      6C6500
 6513              	.LASF66:
 6514 0909 64696666 		.ascii	"diff\000"
 6514      00
 6515              	.LASF74:
 6516 090e 74756E65 		.ascii	"tunerCmd\000"
 6516      72436D64 
 6516      00
 6517              	.LASF41:
 6518 0917 43617053 		.ascii	"CapSense_SENSE_METHOD_CSX_E\000"
 6518      656E7365 
 6518      5F53454E 
 6518      53455F4D 
 6518      4554484F 
 6519              	.LASF93:
 6520 0933 70735074 		.ascii	"psPtr\000"
 6520      7200
 6521              	.LASF135:
 6522 0939 43617053 		.ascii	"CapSense_SetupWidget\000"
 6522      656E7365 
 6522      5F536574 
 6522      75705769 
 6522      64676574 
 6523              	.LASF206:
 6524 094e 43617053 		.ascii	"CapSense_CSDCalibrateWidget\000"
 6524      656E7365 
 6524      5F435344 
 6524      43616C69 
 6524      62726174 
 6525              	.LASF191:
 6526 096a 43617053 		.ascii	"CapSense_calibratedRawcount\000"
 6526      656E7365 
 6526      5F63616C 
 6526      69627261 
 6526      74656452 
 6527              	.LASF180:
 6528 0986 43617053 		.ascii	"CapSense_dsFlash\000"
 6528      656E7365 
 6528      5F647346 
 6528      6C617368 
 6528      00
 6529              	.LASF23:
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 177


 6530 0997 66696E67 		.ascii	"fingerCap\000"
 6530      65724361 
 6530      7000
 6531              	.LASF78:
 6532 09a1 77646774 		.ascii	"wdgtStatus\000"
 6532      53746174 
 6532      757300
 6533              	.LASF181:
 6534 09ac 43617053 		.ascii	"CapSense_ioList\000"
 6534      656E7365 
 6534      5F696F4C 
 6534      69737400 
 6535              	.LASF213:
 6536 09bc 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_Sensing.c\000"
 6536      72617465 
 6536      645F536F 
 6536      75726365 
 6536      5C50536F 
 6537              	.LASF59:
 6538 09e6 43617053 		.ascii	"CapSense_RAM_WD_SLIDER_STRUCT\000"
 6538      656E7365 
 6538      5F52414D 
 6538      5F57445F 
 6538      534C4944 
 6539              	.LASF40:
 6540 0a04 43617053 		.ascii	"CapSense_SENSE_METHOD_CSD_E\000"
 6540      656E7365 
 6540      5F53454E 
 6540      53455F4D 
 6540      4554484F 
 6541              	.LASF186:
 6542 0a20 43617053 		.ascii	"CapSense_currentSenseMethod\000"
 6542      656E7365 
 6542      5F637572 
 6542      72656E74 
 6542      53656E73 
 6543              	.LASF168:
 6544 0a3c 70727353 		.ascii	"prsSize\000"
 6544      697A6500 
 6545              	.LASF55:
 6546 0a44 73697A65 		.ascii	"sizetype\000"
 6546      74797065 
 6546      00
 6547              	.LASF97:
 6548 0a4d 64725368 		.ascii	"drShift\000"
 6548      69667400 
 6549              	.LASF5:
 6550 0a55 6C6F6E67 		.ascii	"long unsigned int\000"
 6550      20756E73 
 6550      69676E65 
 6550      6420696E 
 6550      7400
 6551              	.LASF166:
 6552 0a67 72657456 		.ascii	"retVal\000"
 6552      616C00
 6553              	.LASF21:
 6554 0a6e 76526566 		.ascii	"vRef\000"
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 178


 6554      00
 6555              	.LASF52:
 6556 0a73 69646163 		.ascii	"idacMod\000"
 6556      4D6F6400 
 6557              	.LASF204:
 6558 0a7b 43617053 		.ascii	"CapSense_ISR_StartEx\000"
 6558      656E7365 
 6558      5F495352 
 6558      5F537461 
 6558      72744578 
 6559              	.LASF104:
 6560 0a90 70747232 		.ascii	"ptr2DebounceArr\000"
 6560      4465626F 
 6560      756E6365 
 6560      41727200 
 6561              	.LASF201:
 6562 0aa0 43617053 		.ascii	"CapSense_CSDConnectSns\000"
 6562      656E7365 
 6562      5F435344 
 6562      436F6E6E 
 6562      65637453 
 6563              	.LASF112:
 6564 0ab7 7843656E 		.ascii	"xCentroidMultiplier\000"
 6564      74726F69 
 6564      644D756C 
 6564      7469706C 
 6564      69657200 
 6565              	.LASF46:
 6566 0acb 66696E67 		.ascii	"fingerTh\000"
 6566      65725468 
 6566      00
 6567              	.LASF65:
 6568 0ad4 62736C6E 		.ascii	"bslnExt\000"
 6568      45787400 
 6569              	.LASF57:
 6570 0adc 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 6570      656E7365 
 6570      5F52414D 
 6570      5F57445F 
 6570      42555454 
 6571              	.LASF15:
 6572 0afa 63797374 		.ascii	"cystatus\000"
 6572      61747573 
 6572      00
 6573              	.LASF1:
 6574 0b03 756E7369 		.ascii	"unsigned char\000"
 6574      676E6564 
 6574      20636861 
 6574      7200
 6575              	.LASF145:
 6576 0b11 43617053 		.ascii	"CapSense_SetPinState\000"
 6576      656E7365 
 6576      5F536574 
 6576      50696E53 
 6576      74617465 
 6577              	.LASF105:
 6578 0b26 73746174 		.ascii	"staticConfig\000"
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 179


 6578      6963436F 
 6578      6E666967 
 6578      00
 6579              	.LASF108:
 6580 0b33 73656E73 		.ascii	"senseMethod\000"
 6580      654D6574 
 6580      686F6400 
 6581              	.LASF24:
 6582 0b3f 73656E73 		.ascii	"sensorCap\000"
 6582      6F724361 
 6582      7000
 6583              	.LASF144:
 6584 0b49 696F5074 		.ascii	"ioPtr\000"
 6584      7200
 6585              	.LASF101:
 6586 0b4f 70747232 		.ascii	"ptr2WdgtRam\000"
 6586      57646774 
 6586      52616D00 
 6587              	.LASF18:
 6588 0b5b 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 6588      656E7365 
 6588      5F544852 
 6588      4553484F 
 6588      4C445F54 
 6589              	.LASF198:
 6590 0b73 43617053 		.ascii	"CapSense_CSDScan\000"
 6590      656E7365 
 6590      5F435344 
 6590      5363616E 
 6590      00
 6591              	.LASF42:
 6592 0b84 43617053 		.ascii	"CapSense_SENSE_METHOD_BIST_E\000"
 6592      656E7365 
 6592      5F53454E 
 6592      53455F4D 
 6592      4554484F 
 6593              	.LASF110:
 6594 0ba1 6E756D52 		.ascii	"numRows\000"
 6594      6F777300 
 6595              	.LASF140:
 6596 0ba9 73746174 		.ascii	"state\000"
 6596      6500
 6597              	.LASF142:
 6598 0baf 656C7464 		.ascii	"eltdIndex\000"
 6598      496E6465 
 6598      7800
 6599              	.LASF138:
 6600 0bb9 43617053 		.ascii	"CapSense_ScanAllWidgets\000"
 6600      656E7365 
 6600      5F536361 
 6600      6E416C6C 
 6600      57696467 
 6601              	.LASF94:
 6602 0bd1 6873696F 		.ascii	"hsiomMask\000"
 6602      6D4D6173 
 6602      6B00
 6603              	.LASF197:
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 180


 6604 0bdb 43617053 		.ascii	"CapSense_CSXScan\000"
 6604      656E7365 
 6604      5F435358 
 6604      5363616E 
 6604      00
 6605              	.LASF164:
 6606 0bec 63757253 		.ascii	"curSnsIOPtr\000"
 6606      6E73494F 
 6606      50747200 
 6607              	.LASF53:
 6608 0bf8 736E7343 		.ascii	"snsClk\000"
 6608      6C6B00
 6609              	.LASF146:
 6610 0bff 43617053 		.ascii	"CapSense_SsSwitchSensingMode\000"
 6610      656E7365 
 6610      5F537353 
 6610      77697463 
 6610      6853656E 
 6611              	.LASF199:
 6612 0c1c 4379456E 		.ascii	"CyEnterCriticalSection\000"
 6612      74657243 
 6612      72697469 
 6612      63616C53 
 6612      65637469 
 6613              	.LASF185:
 6614 0c33 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 6614      656E7365 
 6614      5F637572 
 6614      52616D53 
 6614      6E735074 
 6615              	.LASF0:
 6616 0c49 7369676E 		.ascii	"signed char\000"
 6616      65642063 
 6616      68617200 
 6617              	.LASF187:
 6618 0c55 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 6618      656E7365 
 6618      5F736361 
 6618      6E467265 
 6618      71496E64 
 6619              	.LASF64:
 6620 0c6c 62736C6E 		.ascii	"bsln\000"
 6620      00
 6621              	.LASF3:
 6622 0c71 73686F72 		.ascii	"short unsigned int\000"
 6622      7420756E 
 6622      7369676E 
 6622      65642069 
 6622      6E7400
 6623              	.LASF30:
 6624 0c84 4155544F 		.ascii	"AUTO_TUNE_CONFIG_TYPE\000"
 6624      5F54554E 
 6624      455F434F 
 6624      4E464947 
 6624      5F545950 
 6625              	.LASF151:
 6626 0c9a 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 181


 6626      656E7365 
 6626      5F537350 
 6626      6F737441 
 6626      6C6C5769 
 6627              	.LASF100:
 6628 0cb8 70747232 		.ascii	"ptr2SnsFlash\000"
 6628      536E7346 
 6628      6C617368 
 6628      00
 6629              	.LASF126:
 6630 0cc5 6C667372 		.ascii	"lfsrDither\000"
 6630      44697468 
 6630      657200
 6631              	.LASF127:
 6632 0cd0 6E657752 		.ascii	"newRegValue\000"
 6632      65675661 
 6632      6C756500 
 6633              	.LASF82:
 6634 0cdc 6D6F6443 		.ascii	"modCsxClk\000"
 6634      7378436C 
 6634      6B00
 6635              	.LASF194:
 6636 0ce6 43617053 		.ascii	"CapSense_SsCSXGetTxClkDivider\000"
 6636      656E7365 
 6636      5F537343 
 6636      53584765 
 6636      74547843 
 6637              	.LASF9:
 6638 0d04 75696E74 		.ascii	"uint8\000"
 6638      3800
 6639              	.LASF13:
 6640 0d0a 646F7562 		.ascii	"double\000"
 6640      6C6500
 6641              	.LASF67:
 6642 0d11 6E656742 		.ascii	"negBslnRstCnt\000"
 6642      736C6E52 
 6642      7374436E 
 6642      7400
 6643              	.LASF31:
 6644 0d1f 70617261 		.ascii	"param0\000"
 6644      6D3000
 6645              	.LASF32:
 6646 0d26 70617261 		.ascii	"param1\000"
 6646      6D3100
 6647              	.LASF33:
 6648 0d2d 70617261 		.ascii	"param2\000"
 6648      6D3200
 6649              	.LASF34:
 6650 0d34 70617261 		.ascii	"param3\000"
 6650      6D3300
 6651              	.LASF35:
 6652 0d3b 70617261 		.ascii	"param4\000"
 6652      6D3400
 6653              	.LASF36:
 6654 0d42 70617261 		.ascii	"param5\000"
 6654      6D3500
 6655              	.LASF37:
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 182


 6656 0d49 70617261 		.ascii	"param6\000"
 6656      6D3600
 6657              	.LASF119:
 6658 0d50 736E7343 		.ascii	"snsClkDivider\000"
 6658      6C6B4469 
 6658      76696465 
 6658      7200
 6659              	.LASF169:
 6660 0d5e 6D6F6443 		.ascii	"modClkDivider\000"
 6660      6C6B4469 
 6660      76696465 
 6660      7200
 6661              	.LASF72:
 6662 0d6c 64657669 		.ascii	"deviceId\000"
 6662      63654964 
 6662      00
 6663              	.LASF134:
 6664 0d75 77696467 		.ascii	"widgetStatus\000"
 6664      65745374 
 6664      61747573 
 6664      00
 6665              	.LASF133:
 6666 0d82 77696467 		.ascii	"widgetId\000"
 6666      65744964 
 6666      00
 6667              	.LASF184:
 6668 0d8b 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 6668      656E7365 
 6668      5F726571 
 6668      75657374 
 6668      5363616E 
 6669              	.LASF175:
 6670 0da9 43617053 		.ascii	"CapSense_SsInitializeSourceSenseClk\000"
 6670      656E7365 
 6670      5F537349 
 6670      6E697469 
 6670      616C697A 
 6671              	.LASF58:
 6672 0dcd 706F7369 		.ascii	"position\000"
 6672      74696F6E 
 6672      00
 6673              	.LASF70:
 6674 0dd6 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 6674      656E7365 
 6674      5F52414D 
 6674      5F534E53 
 6674      5F4C4953 
 6675              	.LASF214:
 6676 0df3 433A5C55 		.ascii	"C:\\Users\\rpbri\\Downloads\\Lab145_19\\Lab145\\Tem"
 6676      73657273 
 6676      5C727062 
 6676      72695C44 
 6676      6F776E6C 
 6677 0e20 706C6174 		.ascii	"plate\\CE210709_CapSense_Linear_Slider_and_Buttons\\"
 6677      655C4345 
 6677      32313037 
 6677      30395F43 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccy0xhok.s 			page 183


 6677      61705365 
 6678 0e52 6E657720 		.ascii	"new hoep.cydsn\000"
 6678      686F6570 
 6678      2E637964 
 6678      736E00
 6679              	.LASF116:
 6680 0e61 77646774 		.ascii	"wdgtArray\000"
 6680      41727261 
 6680      7900
 6681              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
