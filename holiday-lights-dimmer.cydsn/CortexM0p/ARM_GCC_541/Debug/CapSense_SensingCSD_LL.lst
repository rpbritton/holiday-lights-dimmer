ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_SensingCSD_LL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_SsCSDSetModeSnsClockDivider,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_SsCSDSetModeSnsClockDivider, %function
  24              	CapSense_SsCSDSetModeSnsClockDivider:
  25              	.LFB1:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.c"
   1:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \file CapSense_SensingCSD_LL.c
   3:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \version 5.0
   4:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
   5:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   This file defines the data structure global variables and provides
   7:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   implementation for the low-level APIs of the CSD part of
   8:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   the Sensing module. The file contains the APIs used for the CSD block
   9:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   initialization, calibration, and scanning.
  10:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
  11:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \see CapSense v5.0 Datasheet
  12:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
  13:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *//*****************************************************************************
  14:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Copyright (2016-2017), Cypress Semiconductor Corporation.
  15:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ********************************************************************************
  16:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  17:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * protected by and subject to worldwide patent protection (United States and
  18:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * foreign), United States copyright laws and international treaty provisions.
  19:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  20:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * license to copy, use, modify, create derivative works of, and compile the
  21:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  22:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * custom software in support of licensee product to be used only in conjunction
  23:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  24:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Any reproduction, modification, translation, compilation, or representation of
  25:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * this software except as specified above is prohibited without the express
  26:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * written permission of Cypress.
  27:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
  28:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  29:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  30:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  31:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Cypress reserves the right to make changes without further notice to the
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 2


  32:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * materials described herein. Cypress does not assume any liability arising out
  33:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * of the application or use of any product or circuit described herein. Cypress
  34:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * does not authorize its products for use as critical components in life-support
  35:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * systems where a malfunction or failure may reasonably be expected to result in
  36:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  37:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * support systems application implies that the manufacturer assumes all risk of
  38:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  39:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * limited by and subject to the applicable Cypress software license agreement.
  40:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
  41:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #include "CapSense_Structure.h"
  42:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #include "CapSense_Configuration.h"
  43:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #include "CapSense_SensingCSD_LL.h"
  44:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #include "cyapicallbacks.h"
  45:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  46:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
  47:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  48:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /***************************************
  49:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * API Constants
  50:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ***************************************/
  51:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  52:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  53:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  54:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSD_AUTO_ZERO_EN)
  55:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_CSD_AZ_ENABLE_CFG                  (CapSense_CSD_AZ_EN_MASK)
  56:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #else
  57:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_CSD_AZ_ENABLE_CFG                  (0uL)
  58:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_AUTO_ZERO_EN) */
  59:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  60:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
  61:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_HSCMP_SCAN_MASK                    (CapSense_HSCMP_EN_MASK | CapSense_CSD_AZ_E
  62:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                  CapSense_HSCMP_INVERT_MASK)
  63:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #else
  64:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #define CapSense_HSCMP_SCAN_MASK                    (CapSense_HSCMP_EN_MASK | CapSense_CSD_AZ_E
  65:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG) */
  66:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  67:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #define CapSense_HSCMP_INIT_MASK                        (CapSense_HSCMP_EN_MASK | CapSense_CSD_AZ_E
  68:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  69:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #define CapSense_DEFAULT_SW_SHIELD_SEL                  (0x00000000uL)
  70:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #define CapSense_DEFAULT_CSD_SW_DSI_SEL                 (CapSense_SW_DSI_SEL_CMODPAD | CapSense_SW_
  71:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #define CapSense_DEFAULT_CSD_INTR_SET                   (0x00000000uL)
  72:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #define CapSense_DEFAULT_SW_HS_P_SEL                    (0x00000000uL)
  73:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #define CapSense_DEFAULT_SW_HS_N_SEL                    (0x00000000uL)
  74:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #define CapSense_DEFAULT_CSD_SW_FW_TANK_SEL             (0x00000000uL)
  75:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #define CapSense_DEFAULT_CSD_ADC_CTL                    (0x00000000uL)
  76:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #define CapSense_DEFAULT_HSCMP_CFG                      (0x00000000uL)
  77:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  78:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #else
  79:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
  80:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Set IDAC ranges */
  81:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_IDAC_GAIN_8X == CapSense_CSD_IDAC_GAIN)
  82:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_DEFAULT_IDAC_MOD_RANGE         (CapSense_IDAC_MOD_RANGE_MASK)
  83:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_DEFAULT_IDAC_COMP_RANGE        (CapSense_IDAC_COMP_RANGE_MASK)
  84:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
  85:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_DEFAULT_IDAC_MOD_RANGE         (0u)
  86:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_DEFAULT_IDAC_COMP_RANGE        (0u)
  87:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_IDAC_GAIN_8X == CapSense_CSD_IDAC_GAIN) */
  88:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 3


  89:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Defining default IDACs configuration according to settings in customizer. */
  90:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
  91:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_DEFAULT_CSD_IDAC_CONFIG        (CapSense_IDAC_MOD_MODE_VARIABLE |\
  92:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                  CapSense_IDAC_COMP_MODE_FIXED |\
  93:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                  CapSense_DEFAULT_IDAC_MOD_RANGE |\
  94:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                  CapSense_DEFAULT_IDAC_COMP_RANGE)
  95:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
  96:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #define CapSense_DEFAULT_CSD_IDAC_CONFIG        (CapSense_IDAC_MOD_MODE_VARIABLE |\
  97:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                  CapSense_DEFAULT_IDAC_MOD_RANGE)
  98:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
  99:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 100:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 101:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 102:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /***************************************
 103:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Variables
 104:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ***************************************/
 105:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 106:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 107:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 CapSense_configCsd = CapSense_DEFAULT_CSD_CONFIG;
 108:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #else
 109:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 CapSense_configCsd = CapSense_DEFAULT_CSD_CONFIG | CapSense_DEFAULT_MODULATION_MODE;
 110:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static uint32 CapSense_counterResolution = CapSense_CNT_RESOLUTION_12_BITS;
 111:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 112:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 113:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /* Flag to indicate electrodes that were connected previously */
 114:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** static uint8 CapSense_eleCsdDisconnectFlag = 0u;
 115:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if ((CapSense_ENABLE == CapSense_CSDV2) && (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN))
 116:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Number of re-samplings when the bad conversion occurs */
 117:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint8 CapSense_badConversionsNum = CapSense_BAD_CONVERSIONS_NUM;
 118:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 119:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 120:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
 121:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Stores IDAC and raw count that corresponds to a sensor with maximum Cp within a widget */
 122:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint8 CapSense_calibratedIdac = 1u;
 123:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint16 CapSense_calibratedRawcount = 1u;
 124:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
 125:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint8 CapSense_calibratedIdacRow = 1u;
 126:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint16 CapSense_calibratedRawcountRow = 1u;
 127:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /*(CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 128:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) */
 129:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 130:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 131:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 132:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Static Function Prototypes
 133:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
 134:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 135:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /**
 136:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \cond SECTION_C_INTERNAL
 137:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \addtogroup group_c_internal
 138:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \{
 139:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** */
 140:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 141:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 142:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static void CapSense_SsSetShieldDelay(uint32 delay);
 143:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)
 144:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static void CapSense_SsCSDEnableShieldTank(void);
 145:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN) */
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 4


 146:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (0u != CapSense_CSD_TOTAL_SHIELD_COUNT)
 147:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static void CapSense_SsCSDEnableShieldElectrodes(void);
 148:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (0u != CapSense_CSD_TOTAL_SHIELD_COUNT) */
 149:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 150:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 151:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if ((CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) || \
 152:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****      (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN))
 153:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static cystatus CapSense_SsCSDCalibrateCheck(CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt, uint32
 154:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 155:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static void CapSense_SsCSDSetSingleIdacMode(void);
 156:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static void CapSense_SsCSDRestoreIdacMode(void);
 157:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 158:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static cystatus CapSense_SsCSDCalibrateOneSensor(uint32 rawLevel,
 159:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                              uint8 *ptrIdac,
 160:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                              uint8 *iDAC8Max);
 161:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* ((CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) || \
 162:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****            (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN))  */
 163:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 164:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static void CapSense_SsCSDSetFilterDelay(void);
 165:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #else
 166:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_INLINE static void CapSense_SsCSDClockRestart(void);
 167:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 168:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** CY_INLINE static void CapSense_SsCSDCmodPrecharge(void);
 169:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** CY_INLINE static void CapSense_SsCSDTriggerScan(void);
 170:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** static void CapSense_SsCSDConfigIDACs(void);
 171:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** static void CapSense_SsCSDSetModeSnsClockDivider(uint32 snsClkSource, uint32 snsClkDivider);
 172:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 173:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /** \}
 174:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \endcond */
 175:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 176:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 177:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 178:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
 179:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_SsSetShieldDelay
 180:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
 181:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 182:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
 183:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   This is an internal function that sets a shield delay.
 184:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 185:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
 186:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   The function updates the CSD configuration register bits that define the shield
 187:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   signal delay relatively to the sense signal.
 188:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 189:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param delay
 190:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   Specifies the shield delay value:
 191:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    PSoC 4100/4200 value interpretation:
 192:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         0 - no delay
 193:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         1 - 1 cycle of HFCLK
 194:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         2 - 2 cycles of HFCLK
 195:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    Third-generation HW block (except 4100/4200 devices):
 196:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         0 - no delay
 197:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         3 - 10ns delay
 198:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         2 - 50ns delay
 199:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    Fourth-generation HW block:
 200:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         0 - no delay
 201:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         1 - 5ns delay
 202:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         2 - 10ns delay
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 5


 203:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *         3 - 20ns delay
 204:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 205:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
 206:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static void CapSense_SsSetShieldDelay(uint32 delay)
 207:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 208:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Update CSD config register shield delay bits with shield delay value */
 209:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_configCsd &= (uint32)(~CapSense_CONFIG_SHIELD_DELAY_MASK);
 210:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_configCsd |= (delay << CapSense_SHIELD_DELAY_SHIFT);
 211:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 212:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 213:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)
 214:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /*******************************************************************************
 215:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * Function Name: CapSense_SsCSDEnableShieldTank
 216:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ****************************************************************************//**
 217:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 218:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \brief
 219:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   This function configures Csh pin
 220:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 221:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \details
 222:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   The function updates the CSH_HSIOM register to connect Csh to AMUXBUS-B.
 223:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   For Third-generation HW block it additionally sets Strong drive mode for Csh
 224:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   and applies High level to Csh pin when precharge is set to IO buffer.
 225:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 226:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *******************************************************************************/
 227:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static void CapSense_SsCSDEnableShieldTank(void)
 228:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 229:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 newRegValue;
 230:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 231:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Update the CSH_HSIOM register to connect Csh to AMUXBUS-B */
 232:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue = CY_GET_REG32(CapSense_CSH_HSIOM_PTR);
 233:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue &= (uint32)(~(uint32)CapSense_CSH_HSIOM_MASK);
 234:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= (CapSense_CSH_TO_AMUXBUS_B_MASK << CapSense_CSH_HSIOM_SHIFT);
 235:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CSH_HSIOM_PTR, newRegValue);
 236:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 237:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
 238:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                  (CapSense_DISABLE == CapSense_CSDV2))
 239:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Set Strong drive mode for Csh */
 240:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_CSH_PC_PTR);
 241:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 newRegValue &= (uint32)(~(CapSense_CSH_PC_MASK << CapSense_CSH_PC_SHIFT));
 242:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 newRegValue |= (CapSense_CSH_PC_STRONG_MODE << CapSense_CSH_PC_SHIFT);
 243:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_CSH_PC_PTR, newRegValue);
 244:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 245:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Appliy High level to Csh pin for Csh */
 246:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_CSH_DR_PTR);
 247:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 newRegValue &= (uint32)(~(CapSense_DR_MASK << CapSense_CSH_SHIFT));
 248:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 newRegValue |= (uint32)CapSense_CSH_DR_CONFIG;
 249:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_CSH_DR_PTR, newRegValue);
 250:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
 251:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                        (CapSense_DISABLE == CapSense_CSDV2)) */
 252:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 253:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN) */
 254:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 255:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (0u != CapSense_CSD_TOTAL_SHIELD_COUNT)
 256:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /*******************************************************************************
 257:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * Function Name: CapSense_SsCSDEnableShieldElectrodes
 258:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ****************************************************************************//**
 259:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 6


 260:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \brief
 261:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   This internal function initializes Shield Electrodes.
 262:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 263:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \details
 264:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   The function sets the bit in the HSIOM register which enables the shield electrode
 265:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   functionality on the pin. The port and pin configurations are stored in
 266:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   the CapSense_shieldIoList structure.
 267:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 268:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *******************************************************************************/
 269:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static void CapSense_SsCSDEnableShieldElectrodes(void)
 270:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 271:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 newRegValue;
 272:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 shieldIndex;
 273:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 274:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for (shieldIndex = 0u; shieldIndex < CapSense_CSD_TOTAL_SHIELD_COUNT; shieldIndex++)
 275:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 276:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Set drive mode to Analog */
 277:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_shieldIoList[shieldIndex].pcPtr, CY_GET_REG32(CapSense_shield
 278:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                            ~(CapSense_GPIO_PC_MASK <<(CapSense_shieldIoList[shieldIndex].shift)));
 279:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 280:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Set HSIOM register mode to CSD_SHIELD or AMUXBUS B connection */
 281:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_shieldIoList[shieldIndex].hsiomPtr);
 282:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 newRegValue &= ~(CapSense_HSIOM_SEL_MASK << (CapSense_shieldIoList[shieldIndex].hsi
 283:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 284:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Set HSIOM register mode to CSD_SHIELD */
 285:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 newRegValue |= (CapSense_HSIOM_SEL_CSD_SHIELD << (CapSense_shieldIoList[shieldIndex
 286:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 287:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_shieldIoList[shieldIndex].hsiomPtr, newRegValue);
 288:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 289:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 290:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 291:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 292:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /*******************************************************************************
 293:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * Function Name: CapSense_SsCSDDisableShieldElectrodes
 294:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ****************************************************************************//**
 295:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 296:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \brief
 297:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   This internal function disables Shield Electrodes.
 298:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 299:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \details
 300:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   The function resets the bit in the HSIOM register which disables the shield
 301:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   electrode functionality on the pin. The port and pin configurations are
 302:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   stored in  the CapSense_shieldIoList structure.
 303:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
 304:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *******************************************************************************/
 305:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         void CapSense_SsCSDDisableShieldElectrodes(void)
 306:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 307:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 newRegValue;
 308:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 shieldIndex;
 309:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 310:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for (shieldIndex = 0u; shieldIndex < CapSense_CSD_TOTAL_SHIELD_COUNT; shieldIndex++)
 311:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 312:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Reset HSIOM register (to GPIO state) */
 313:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_shieldIoList[shieldIndex].hsiomPtr, CY_GET_REG32(CapSense_shi
 314:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                              (uint32)~(uint32)(CapSense_HSIOM_SEL_MASK << CapSense_shieldIoList[shi
 315:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 316:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Update port configuration register (drive mode to ground)  */
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 7


 317:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_shieldIoList[shieldIndex].pcPtr);
 318:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 newRegValue &= ~(CapSense_GPIO_PC_MASK << CapSense_shieldIoList[shieldIndex].shift)
 319:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 newRegValue |= (CapSense_SNS_GROUND_CONNECT << CapSense_shieldIoList[shieldIndex].s
 320:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_shieldIoList[shieldIndex].pcPtr, newRegValue);
 321:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 322:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Set logic 0 to port data register */
 323:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_shieldIoList[shieldIndex].drPtr, CY_GET_REG32(CapSense_shield
 324:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                            (uint32)~(uint32)((uint32)1u << CapSense_shieldIoList[shieldIndex].drShi
 325:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 326:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 327:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (0u != CapSense_CSD_TOTAL_SHIELD_COUNT) */
 328:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 329:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 330:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 331:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 332:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDSetModeSnsClockDivider
 333:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
 334:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 335:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
 336:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   Sets sense source and Sense Clock Divider
 337:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 338:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
 339:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   For Fourth-generation HW block: Updates CapSense_SENSE_PERIOD register with
 340:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   sense source and Sense Clock Divider.
 341:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   For Third-generation HW block: Updates CapSense_configCsd variable with
 342:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   sense source and sets sense clock divider.
 343:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 344:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param
 345:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   snsClkSource The sense source for the sense clock.
 346:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param
 347:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   snsClkDivider The divider value for the sense clock.
 348:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 349:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
 350:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** static void CapSense_SsCSDSetModeSnsClockDivider(uint32 snsClkSource, uint32 snsClkDivider)
 351:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
  27              		.loc 1 351 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 352:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 353:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Update reg value with divider and configuration */
 354:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, snsClkSource | (snsClkDivider - 1u));
  33              		.loc 1 354 0
  34 0000 0139     		subs	r1, r1, #1
  35              	.LVL1:
  36 0002 0843     		orrs	r0, r1
  37              	.LVL2:
  38 0004 014B     		ldr	r3, .L2
  39 0006 1860     		str	r0, [r3]
 355:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 356:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set configuration */
 357:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_configCsd &= ~(CapSense_CONFIG_PRS_SELECT_MASK | CapSense_CSD_PRS_12_BIT);
 358:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_configCsd |= snsClkSource;
 359:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 360:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set sense clock divider */
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 8


 361:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsSetSnsClockDivider(snsClkDivider);
 362:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 363:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
  40              		.loc 1 363 0
  41              		@ sp needed
  42 0008 7047     		bx	lr
  43              	.L3:
  44 000a C046     		.align	2
  45              	.L2:
  46 000c 00020B40 		.word	1074463232
  47              		.cfi_endproc
  48              	.LFE1:
  49              		.size	CapSense_SsCSDSetModeSnsClockDivider, .-CapSense_SsCSDSetModeSnsClockDivider
  50              		.global	__aeabi_uidiv
  51              		.section	.text.CapSense_SsCSDSetFilterDelay,"ax",%progbits
  52              		.align	2
  53              		.code	16
  54              		.thumb_func
  55              		.type	CapSense_SsCSDSetFilterDelay, %function
  56              	CapSense_SsCSDSetFilterDelay:
  57              	.LFB2:
 364:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 365:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 366:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 367:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
 368:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_SsCSDSetFilterDelay
 369:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
 370:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 371:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
 372:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   Sets the filter delay for Fourth-generation HW block.
 373:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 374:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
 375:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   This function updates Fourth-generation HW block configuration
 376:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   variable CapSense_configCsd
 377:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   with the filter delay which depends on the sample clock frequency.
 378:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   This variable is written into register during enabling
 379:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   Fourth-generation HW block .
 380:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 381:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
 382:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static void CapSense_SsCSDSetFilterDelay(void)
 383:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
  58              		.loc 1 383 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62 0000 10B5     		push	{r4, lr}
  63              		.cfi_def_cfa_offset 8
  64              		.cfi_offset 4, -8
  65              		.cfi_offset 14, -4
 384:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
 385:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 sampleClkFreqHz;
 386:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
 387:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 388:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_configCsd &= ~CapSense_CONFIG_FILTER_DELAY_MASK;
  66              		.loc 1 388 0
  67 0002 0F4B     		ldr	r3, .L8
  68 0004 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 9


  69 0006 7022     		movs	r2, #112
  70 0008 9343     		bics	r3, r2
  71 000a 1C00     		movs	r4, r3
 389:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 390:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
 391:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             sampleClkFreqHz = CYDEV_BCLK__HFCLK__HZ / (uint32)CapSense_dsRam.modCsdClk;
  72              		.loc 1 391 0
  73 000c 0D4B     		ldr	r3, .L8+4
  74 000e 997F     		ldrb	r1, [r3, #30]
  75 0010 0D48     		ldr	r0, .L8+8
  76 0012 FFF7FEFF 		bl	__aeabi_uidiv
  77              	.LVL3:
 392:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if(sampleClkFreqHz <= CapSense_MOD_CSD_CLK_12MHZ)
  78              		.loc 1 392 0
  79 0016 0D4B     		ldr	r3, .L8+12
  80 0018 9842     		cmp	r0, r3
  81 001a 04D8     		bhi	.L5
 393:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 394:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_configCsd |= CapSense_CONFIG_FILTER_DELAY_12MHZ;
  82              		.loc 1 394 0
  83 001c 2023     		movs	r3, #32
  84 001e 2343     		orrs	r3, r4
  85 0020 074A     		ldr	r2, .L8
  86 0022 1360     		str	r3, [r2]
  87 0024 0BE0     		b	.L4
  88              	.L5:
 395:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 396:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             else if(sampleClkFreqHz <= CapSense_MOD_CSD_CLK_24MHZ)
  89              		.loc 1 396 0
  90 0026 084B     		ldr	r3, .L8+8
  91 0028 9842     		cmp	r0, r3
  92 002a 04D8     		bhi	.L7
 397:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 398:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_configCsd |= CapSense_CONFIG_FILTER_DELAY_24MHZ;
  93              		.loc 1 398 0
  94 002c 3023     		movs	r3, #48
  95 002e 2343     		orrs	r3, r4
  96 0030 034A     		ldr	r2, .L8
  97 0032 1360     		str	r3, [r2]
  98 0034 03E0     		b	.L4
  99              	.L7:
 399:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 400:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             else
 401:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 402:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_configCsd |= CapSense_CONFIG_FILTER_DELAY_48MHZ;
 100              		.loc 1 402 0
 101 0036 4023     		movs	r3, #64
 102 0038 2343     		orrs	r3, r4
 103 003a 014A     		ldr	r2, .L8
 104 003c 1360     		str	r3, [r2]
 105              	.L4:
 403:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 404:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 405:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_configCsd |= CapSense_CONFIG_FILTER_DELAY_12MHZ;
 406:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
 407:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 106              		.loc 1 407 0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 10


 107              		@ sp needed
 108 003e 10BD     		pop	{r4, pc}
 109              	.L9:
 110              		.align	2
 111              	.L8:
 112 0040 00000000 		.word	.LANCHOR0
 113 0044 00000000 		.word	CapSense_dsRam
 114 0048 00366E01 		.word	24000000
 115 004c 001BB700 		.word	12000000
 116              		.cfi_endproc
 117              	.LFE2:
 118              		.size	CapSense_SsCSDSetFilterDelay, .-CapSense_SsCSDSetFilterDelay
 119              		.section	.text.CapSense_SsCSDConfigIDACs,"ax",%progbits
 120              		.align	2
 121              		.code	16
 122              		.thumb_func
 123              		.type	CapSense_SsCSDConfigIDACs, %function
 124              	CapSense_SsCSDConfigIDACs:
 125              	.LFB3:
 408:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
 409:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 410:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 411:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 412:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDConfigIDACs
 413:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
 414:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 415:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
 416:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   Configures the mode for IDAC registers
 417:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 418:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
 419:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   This function configures the IDAC modes depend on Compensation IDAC
 420:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   enabled or disabled.
 421:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 422:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
 423:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** static void CapSense_SsCSDConfigIDACs(void)
 424:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
 126              		.loc 1 424 0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 425:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 426:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_SET_REG32(CapSense_IDAC_MOD_PTR, CapSense_IDAC_MOD_DEFAULT_CFG);
 131              		.loc 1 426 0
 132 0000 034A     		ldr	r2, .L11
 133 0002 044B     		ldr	r3, .L11+4
 134 0004 1A60     		str	r2, [r3]
 427:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
 428:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              (CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN))
 429:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_IDACB_PTR, CapSense_IDAC_COMP_DEFAULT_CFG);
 135              		.loc 1 429 0
 136 0006 C122     		movs	r2, #193
 137 0008 5204     		lsls	r2, r2, #17
 138 000a 034B     		ldr	r3, .L11+8
 139 000c 1A60     		str	r2, [r3]
 430:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
 431:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                    (CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN)) */
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 11


 432:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 433:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 434:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_IDAC_PTR, CapSense_DEFAULT_CSD_IDAC_CONFIG);
 435:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 436:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_IDAC_PTR, CY_GET_REG32(CapSense_IDAC_PTR) &
 437:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                 ~(CapSense_IDAC_MOD_MODE_MASK |
 438:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                   CapSense_IDAC_MOD_MASK));
 439:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_IDAC_PTR, CY_GET_REG32(CapSense_IDAC_PTR) |
 440:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                  CapSense_DEFAULT_CSD_IDAC_CONFIG);
 441:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 442:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 443:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 140              		.loc 1 443 0
 141              		@ sp needed
 142 000e 7047     		bx	lr
 143              	.L12:
 144              		.align	2
 145              	.L11:
 146 0010 00008301 		.word	25362432
 147 0014 C0010B40 		.word	1074463168
 148 0018 C4010B40 		.word	1074463172
 149              		.cfi_endproc
 150              	.LFE3:
 151              		.size	CapSense_SsCSDConfigIDACs, .-CapSense_SsCSDConfigIDACs
 152              		.section	.text.CapSense_SsCSDSetSingleIdacMode,"ax",%progbits
 153              		.align	2
 154              		.code	16
 155              		.thumb_func
 156              		.type	CapSense_SsCSDSetSingleIdacMode, %function
 157              	CapSense_SsCSDSetSingleIdacMode:
 158              	.LFB19:
 444:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 445:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 446:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 447:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDInitialize
 448:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
 449:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 450:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
 451:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   This API initializes the CSD module.
 452:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 453:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
 454:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   The function performs the following steps for Fourth-generation HW block:
 455:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   1) Sets GPIO output to "0" for all sensor pins;
 456:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   2) Connects CMOD to AMUXBUS-A and to CSDBUS-A;
 457:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   3) Connects CMOD to (sense path) to CSDCOMP;
 458:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   4) Connects Csh_tank to AMUXBUS-B and to CSDBUS-B;
 459:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   5) Connects VREF to REFGEN;
 460:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   6) Configures REFGEN and sets the reference voltage;
 461:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   7) Connects VREF to CSDCOMP and HSCOMP;
 462:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   8) Configures IDAC and connect to CSDBUS-A (to drive CMOD);
 463:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   9) Configures ModClk;
 464:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   10) Configure SnsClk source;
 465:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   11) Sets other CSD configurations (Csd Auto Zero time,
 466:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *       Sample Init period, interrupts,
 467:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *       CMOD and Csh_tank/shield initialization switch resistance).
 468:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 469:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   The function performs the following steps for Third-generation HW block:
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 12


 470:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   1) Sets all the sensors to the inactive state;
 471:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   2) Enables Shield Electrodes;
 472:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   3) Configures the CSD block and IDACs;
 473:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   4) Connects Cmod to AMUXBUS-A;
 474:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   5) Enables the clocks;
 475:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   6) Sets the shield delay;
 476:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   7) Enables the CSD block; connects Vref Buffer to the AMUX bus.
 477:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 478:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
 479:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDInitialize(void)
 480:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
 481:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 newRegValue;
 482:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 483:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Set all the sensors to inactive state */
 484:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsClearCSDSensors();
 485:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 486:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 487:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_BistDischargeExtCapacitors();
 488:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 489:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     
 490:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 491:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect shields to AMUX-B bus (config HSIOM regs) */
 492:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (0u != CapSense_CSD_TOTAL_SHIELD_COUNT)
 493:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsCSDEnableShieldElectrodes();
 494:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (0u != CapSense_CSD_TOTAL_SHIELD_COUNT) */
 495:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 496:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)
 497:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Configure Csh */
 498:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsCSDEnableShieldTank();
 499:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN) */
 500:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 501:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 502:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 503:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 504:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Initialize the unused CSD registers to defaut state */
 505:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SENSE_DUTY_PTR,       CapSense_DEFAULT_SENSE_DUTY_SEL);
 506:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 507:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure VREF */
 508:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 509:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue |= CapSense_DEFAULT_SW_REFGEN_SEL;
 510:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 511:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 512:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_INTR_SET_PTR,         CapSense_DEFAULT_CSD_INTR_SET);
 513:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR,   CapSense_DEFAULT_CSD_SW_FW_TANK_SEL);
 514:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_DSI_SEL_PTR,       CapSense_DEFAULT_CSD_SW_DSI_SEL);
 515:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_ADC_CTL_PTR,          CapSense_DEFAULT_CSD_ADC_CTL);
 516:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_AMBUF_PTR,            CapSense_AMBUF_PWR_MODE_OFF);
 517:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR,    CapSense_DEFAULT_SW_SHIELD_SEL);
 518:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR,      CapSense_DEFAULT_SW_HS_P_SEL);
 519:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR,      CapSense_DEFAULT_SW_HS_N_SEL);
 520:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_HSCMP_PTR,            CapSense_DEFAULT_HSCMP_CFG);
 521:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 522:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect CMOD to AMUXBUS-A */
 523:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_CMOD_HSIOM_PTR);
 524:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CMOD_HSIOM_MASK);
 525:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue |= (CapSense_HSIOM_SEL_AMUXA << CapSense_CMOD_HSIOM_SHIFT);
 526:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_CMOD_HSIOM_PTR, newRegValue);
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 13


 527:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 528:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect AMUXBUS-A to CSDBUS-A */
 529:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_SW_BYP_SEL_PTR);
 530:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue |= CapSense_SW_BYP_SEL_SW_BYA_MASK;
 531:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_BYP_SEL_PTR, newRegValue);
 532:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 533:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect CMOD to (sense path) to CSDCOMP */
 534:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CSD__CMOD_PAD == CapSense_CMOD_CONNECTION)
 535:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_CMP_P_SEL_PTR, CapSense_SW_CMP_P_SEL_SW_SFPM_STATIC_CLOSE);
 536:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #elif (CapSense_CSD__CSHIELD_PAD == CapSense_CMOD_CONNECTION)
 537:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_CMP_P_SEL_PTR, CapSense_SW_CMP_P_SEL_SW_SFPS_STATIC_CLOSE);
 538:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 539:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_CMP_P_SEL_PTR, CapSense_SW_CMP_P_SEL_SW_SFPT_STATIC_CLOSE);
 540:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD__CMOD_PAD == CapSense_CMOD_CONNECTION) */
 541:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 542:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure shield driving path */
 543:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 544:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect AMUXBUS-B to CSDBUS-B (and AMUXBUS-A to CSDBUS-A ) */
 545:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_BYP_SEL_PTR, CapSense_SW_BYP_SEL_SW_BYA_MASK | CapSense_SW_BYP
 546:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 547:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect AMUXBUS-B to HSCMP positive input */
 548:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR, 0x00000000uL);
 549:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 550:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 551:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure VREF */
 552:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && (CapSense_ENABLE == CapSense_CSD_DEDI
 553:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect VREF to REFGEN. Connect IDACB to CSDBUSA */
 554:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 555:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= CapSense_SW_REFGEN_SEL_SW_SGR_MASK | CapSense_SW_REFGEN_SEL_SW_IAIB_MASK
 556:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 557:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 558:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect VREF to REFGEN (IAIB switch is open) */
 559:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 560:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= CapSense_SW_REFGEN_SEL_SW_SGR_MASK;
 561:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 562:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && (CapSense_ENABLE == CapSense_CS
 563:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 564:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_2000_MV > CapSense_CYDEV_VDDA_MV)
 565:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 566:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect VREFLOW (from AMBUF and RefGen is in bypass mode) to CSDCOMP when Vdda < 2 V */
 567:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_CMP_N_SEL_PTR, CapSense_SW_CMP_N_SEL_SW_SCRH_STATIC_CLOSE);
 568:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 569:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure REFGEN. Set reference voltage when Vdda < 2 V */
 570:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_REFGEN_PTR, CapSense_REFGEN_LV);
 571:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 572:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect Vrefhi to AMUBUF positive input when Vdaa < 2V
 573:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****          *  Connect AMUBUF to SCDCMP negative input when Vdaa < 2V
 574:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****          */
 575:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 576:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
 577:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR, CapSense_SW_AMUXBUF_SEL_SW_IRH_STATIC_CLO
 578:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                       CapSense_SW_AMUXBUF_SEL_SW_IC
 579:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #else
 580:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR, CapSense_SW_AMUXBUF_SEL_SW_DEFAULT);
 581:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 582:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_AMBUF_PTR, CapSense_AMBUF_PWR_MODE_NORM);
 583:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 14


 584:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_AMBUF_PTR, CapSense_AMBUF_PWR_MODE_OFF);
 585:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 586:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 587:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect VREFHI to HSCOMP */
 588:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR, CapSense_SW_HS_N_SEL_SW_HCRH_STATIC_CLOSE);
 589:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 590:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 591:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect VREFHI (from RefGen) to CSDCOMP when Vdda >= 2 V */
 592:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_CMP_N_SEL_PTR, CapSense_SW_CMP_N_SEL_SW_SCRH_STATIC_CLOSE);
 593:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 594:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure REFGEN. Set reference voltage when Vdda >= 2 V */
 595:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_REFGEN_PTR, CapSense_REFGEN_HV);
 596:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 597:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 598:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Turn on CSD_AMBUF high power level when Vdaa >= 2V */
 599:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_AMBUF_PTR, CapSense_AMBUF_PWR_MODE_HI);
 600:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 601:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_IDAC_SINKING != CapSense_CSD_IDAC_CONFIG)
 602:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR, CapSense_SW_AMUXBUF_SEL_SW_IRH_STATIC_CLO
 603:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                       CapSense_SW_AMUXBUF_SEL_SW_IC
 604:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #else
 605:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR, CapSense_SW_AMUXBUF_SEL_SW_DEFAULT);
 606:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG) */
 607:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 608:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR, CapSense_SW_AMUXBUF_SEL_SW_DEFAULT);
 609:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 610:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 611:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect VREFHI to HSCOMP */
 612:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR, CapSense_SW_HS_N_SEL_SW_HCRH_STATIC_CLOSE);
 613:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_2000_MV > CapSense_CYDEV_VDDA_MV) */
 614:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 615:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Configure IDACs mode */
 616:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsCSDConfigIDACs();
 617:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 618:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure ModClk */
 619:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsSetModClkClockDivider((uint32)CapSense_dsRam.modCsdClk);
 620:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 621:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Set other CSD configurations */
 622:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 623:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsSetShieldDelay(CapSense_CSD_SHIELD_DELAY);
 624:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 625:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 626:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Configure HW block filter delay */
 627:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsCSDSetFilterDelay();
 628:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 629:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_DISABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 630:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable power to sub-blocks */
 631:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd |
 632:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                   CapSense_CONFIG_SENSE_EN_MASK |
 633:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                   CapSense_CONFIG_ENABLE_MASK);
 634:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) */
 635:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 636:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set Csd Auto Zero time (set AZ_TIME bitmask) */
 637:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SEQ_TIME_PTR, CapSense_CSD_AUTO_ZERO_TIME);
 638:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 639:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Select CMOD and Csh_tank/shield initialization switch resistance */
 640:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_RES_PTR, 0x00000000);
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 15


 641:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 642:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set the number of dummy fine initialization cycles */
 643:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SEQ_INIT_CNT_PTR, CapSense_CSD_FINE_INIT_TIME);
 644:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 645:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 646:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_DISABLE == CapSense_CSDV2)
 647:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 648:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configure IDACs mode */
 649:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConfigIDACs();
 650:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 651:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect Cmod to AMUXBUS-A using HSIOM registers */
 652:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_CMOD_HSIOM_PTR);
 653:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CMOD_HSIOM_MASK);
 654:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue |= (CapSense_HSIOM_SEL_AMUXA << CapSense_CMOD_HSIOM_SHIFT);
 655:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_CMOD_HSIOM_PTR, newRegValue);
 656:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 657:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 658:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsSetShieldDelay(CapSense_CSD_SHIELD_DELAY);
 659:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 660:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 661:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable CSD block. Connect Vref Buffer to AMUX bus to make sure that Cmod is charged befo
 662:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 663:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
 664:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 665:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CONFIG_
 666:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) */
 667:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_DISABLE == CapSense_CSDV2) */
 668:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 669:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if ((CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) &&\
 670:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****          (CapSense_CLK_SOURCE_DIRECT == CapSense_CSD_SNS_CLK_SOURCE))
 671:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****          /* Set clock dividers and clock source mode */
 672:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConfigClock();
 673:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) &&\
 674:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                (CapSense_CLK_SOURCE_DIRECT == CapSense_CSD_SNS_CLK_SOURCE)) */
 675:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 676:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 677:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 678:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 679:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDElectrodeCheck
 680:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
 681:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 682:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
 683:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   Checks if electrodes were previously connected using
 684:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****  * CapSense_CSDSetupWidgetExt() API and if yes disconnects them.
 685:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 686:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
 687:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   This function checks if CapSense_eleCsdDisconnectFlag is set.
 688:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   If it set, the function disconnects the previously connected electrode.
 689:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   The previous IO is contained in CapSense_curSnsIOPtr and
 690:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   CapSense_curFlashSnsPtr contains the previous data for Ganged
 691:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   sensors.
 692:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 693:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
 694:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDElectrodeCheck(void)
 695:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
 696:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 697:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 tempVal;
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 16


 698:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 699:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 700:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     if (CapSense_ENABLE == CapSense_eleCsdDisconnectFlag)
 701:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 702:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Disconnect if electrodes were previous connected by CSDSetupWidgetExt() API */
 703:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 704:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Check ganged sns flag  */
 705:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (CapSense_GANGED_SNS_MASK == (CapSense_curFlashWdgtPtr->staticConfig & CapSense_GANG
 706:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 707:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Get number of ganged pins */
 708:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tempVal = CapSense_curFlashSnsPtr->numPins;
 709:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 710:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Get IO pointer  */
 711:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_curSnsIOPtr = &CapSense_ioList[CapSense_curFlashSnsPtr->firstPinId];
 712:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 713:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Disconnect all ganged sensors */
 714:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 do
 715:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 716:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CapSense_CSDDisconnectSns(CapSense_curSnsIOPtr);
 717:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CapSense_curSnsIOPtr++;
 718:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     tempVal--;
 719:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 } while (0u != tempVal);
 720:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 721:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             else
 722:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 723:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Disconnect ganged sensor */
 724:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSDDisconnectSns(CapSense_curSnsIOPtr);
 725:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 726:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 727:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Disable sensor */
 728:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDDisconnectSns(CapSense_curSnsIOPtr);
 729:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
 730:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 731:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_eleCsdDisconnectFlag = 0u;
 732:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 733:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 734:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 735:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 736:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 737:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDSetUpIdacs
 738:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
 739:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 740:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
 741:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This internal function changes the IDACs values.
 742:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 743:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
 744:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  If Compensation IDAC is enabled, it updates two IDACs.
 745:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The Modulator IDAC is common for all the sensors of the widget.
 746:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The Compensation IDAC is updated for the sensor of the widget which
 747:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  is available in the RAM_SNS_STRUCT structure.
 748:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  If the Compensation IDAC is disabled, the function updates the Modulator IDAC
 749:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  value only in the RAM_WD_BASE_STRUCT structure.
 750:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 751:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param
 752:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  ptrWdgt The pointer to the RAM_WD_BASE_STRUCT structure.
 753:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 754:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 17


 755:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDSetUpIdacs(CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt)
 756:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
 757:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 758:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint8 interruptState;
 759:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 760:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 761:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 idacARegValue;
 762:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
 763:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****          (CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN))
 764:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 idacBRegValue;
 765:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
 766:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                (CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN)) */
 767:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 768:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     interruptState = CyEnterCriticalSection();
 769:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 770:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Get IDACA Value */
 771:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     idacARegValue = CY_GET_REG32(CapSense_IDAC_MOD_PTR);
 772:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 773:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Set IDACA Value mask */
 774:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     idacARegValue &= ~(CapSense_IDAC_MOD_VAL_MASK);
 775:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 776:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Set IDACA value */
 777:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
 778:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (CapSense_dsFlash.wdgtArray[(CapSense_widgetIndex)].numCols <= CapSense_sensorIndex)
 779:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 780:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             idacARegValue |= (uint32)ptrWdgt->rowIdacMod[CapSense_scanFreqIndex];
 781:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 782:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         else
 783:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 784:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             idacARegValue |= (uint32)ptrWdgt->idacMod[CapSense_scanFreqIndex];
 785:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 786:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 787:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         idacARegValue |= (uint32)ptrWdgt->idacMod[CapSense_scanFreqIndex];
 788:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN | CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 789:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 790:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Update IDACA register with new value */
 791:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_SET_REG32(CapSense_IDAC_MOD_PTR, idacARegValue);
 792:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CyExitCriticalSection(interruptState);
 793:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 794:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
 795:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****          (CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN))
 796:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         interruptState = CyEnterCriticalSection();
 797:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Get IDACB Value */
 798:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         idacBRegValue = CY_GET_REG32(CapSense_IDAC_COMP_PTR);
 799:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 800:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set IDACB Value mask */
 801:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         idacBRegValue &= ~(CapSense_IDAC_COMP_VAL_MASK);
 802:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 803:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set IDACB value */
 804:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         idacBRegValue |= (uint32)CapSense_curRamSnsPtr->idacComp[CapSense_scanFreqIndex];
 805:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 806:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Update IDACA register with new value */
 807:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_IDAC_COMP_PTR, idacBRegValue);
 808:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
 809:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
 810:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                (CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN)) */
 811:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 18


 812:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #else
 813:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 814:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 newRegValue;
 815:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint8 const *ptrIdacMod = ptrWdgt->idacMod;
 816:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 817:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_CSD_MATRIX_WIDGET_EN  | CapSense_CSD_TOUCHPAD_WIDGET_EN)
 818:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (CapSense_dsFlash.wdgtArray[(CapSense_widgetIndex)].numCols <= CapSense_sensorIndex)
 819:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 820:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             ptrIdacMod = &ptrWdgt->rowIdacMod[0u];
 821:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 822:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN  | CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 823:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 824:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     interruptState = CyEnterCriticalSection();
 825:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 826:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Get Idac Value */
 827:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newRegValue = CY_GET_REG32(CapSense_IDAC_PTR);
 828:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 829:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Set Idac Value mask */
 830:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 831:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue &= ~(CapSense_IDAC_MOD_MASK | CapSense_IDAC_COMP_MASK);
 832:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 833:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue &= ~(CapSense_IDAC_MOD_MASK);
 834:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 835:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 836:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Set Idac value */
 837:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 838:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue |= (ptrIdacMod[CapSense_scanFreqIndex] |
 839:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                        (uint32)((uint32)CapSense_curRamSnsPtr->idacComp[CapSense_scanFreqIndex] <<
 840:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                        CapSense_IDAC_COMP_DATA_OFFSET));
 841:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 842:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue |= ptrIdacMod[CapSense_scanFreqIndex];
 843:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 844:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_SET_REG32(CapSense_IDAC_PTR, newRegValue);
 845:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 846:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CyExitCriticalSection(interruptState);
 847:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 848:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 849:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 850:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 851:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 852:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 853:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
 854:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_SsCSDGetNumberOfConversions
 855:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
 856:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 857:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
 858:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  This function gets Number of conversions.
 859:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 860:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
 861:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  This function gets Number of conversions using foll.owing equation:
 862:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   conversionsNum = (2^resolution - 1) / snsClkDivider.
 863:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 864:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param
 865:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  snsClkDivider The divider value for the sense clock.
 866:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  resolution The widget resolution.
 867:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  snsClkSrc The current Sense Clock Source.
 868:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 19


 869:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \return Returns the Number of conversions.
 870:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
 871:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
 872:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 CapSense_SsCSDGetNumberOfConversions(uint32 snsClkDivider, uint32 resolution, uint32 sns
 873:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 874:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 conversionsNum;
 875:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if ((CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) && (CapSense_ENABLE != CapSense_C
 876:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 sampleClkFreqHz;
 877:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* ((CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) && (CapSense_ENABLE != CapS
 878:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 879:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Calculate scanning resolution value in register */
 880:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         conversionsNum = (uint32)((1uL << resolution) - 1uL);
 881:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 882:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if(CapSense_ENABLE != CapSense_CSDV2_REF9P6UA_EN)
 883:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Apply correction to oveflow for 16 bit resolution */
 884:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (CapSense_RES16BIT == resolution)
 885:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 886:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 conversionsNum -= ((snsClkDivider + 1u) >> 1u);
 887:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 888:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
 889:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     sampleClkFreqHz = CYDEV_BCLK__HFCLK__HZ / (uint32)CapSense_dsRam.modCsdClk;
 890:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 891:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if (sampleClkFreqHz <= CapSense_MOD_CSD_CLK_12MHZ)
 892:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
 893:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         conversionsNum -= CapSense_CONFIG_FILTER_DELAY_2_CYCLES;
 894:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
 895:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     else if (sampleClkFreqHz <= CapSense_MOD_CSD_CLK_24MHZ)
 896:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
 897:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         conversionsNum -= CapSense_CONFIG_FILTER_DELAY_3_CYCLES;
 898:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
 899:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     else
 900:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
 901:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         conversionsNum -= CapSense_CONFIG_FILTER_DELAY_4_CYCLES;
 902:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
 903:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #else
 904:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     conversionsNum -= CapSense_CONFIG_FILTER_DELAY_2_CYCLES;
 905:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif /* (INSTANCE_NAME`_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
 906:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 907:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE != CapSense_CSDV2_REF9P6UA_EN) */
 908:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 909:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (0u < snsClkDivider)
 910:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 911:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             conversionsNum /= snsClkDivider;
 912:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 913:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 914:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
 915:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
 916:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
 917:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         switch (snsClkSrc)
 918:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 919:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             case CapSense_CLK_SOURCE_PRS8:
 920:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             case CapSense_CLK_SOURCE_PRS12:
 921:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Divide by 2 for PRS8/PRS12 mode */
 922:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 conversionsNum >>= 1u;
 923:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 break;
 924:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 925:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             default:
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 20


 926:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 break;
 927:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 928:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* ((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
 929:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
 930:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)) */
 931:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 932:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     return((conversionsNum > 0uL) ? (conversionsNum) : 1uL);
 933:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 934:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 935:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 936:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 937:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
 938:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDConfigClock
 939:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
 940:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 941:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
 942:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function configure sense clock for different modes.
 943:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 944:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
 945:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Function sets the clock divider and configures the mode based on configuration.
 946:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
 947:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
 948:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDConfigClock(void)
 949:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
 950:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 snsClkDivider;
 951:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 snsClkSrc;
 952:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 newRegValue;
 953:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 954:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 955:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2WdgtRam;
 956:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 957:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Get sense divider based on configuration */
 958:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
 959:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         snsClkDivider = (uint32)CapSense_dsRam.snsCsdClk;
 960:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 961:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
 962:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get SnsClck divider for rows or columns */
 963:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_sensorIndex)
 964:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 965:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->rowSnsClk);
 966:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 967:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             else
 968:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 969:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->snsClk);
 970:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 971:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 972:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             snsClkDivider = (uint32)(ptrWdgt->snsClk);
 973:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 974:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
 975:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 976:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Get sense clk source calculated in CapSense_SsCSDInitialize() before */
 977:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
 978:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Get SnsClc Source for rows or columns */
 979:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_sensorIndex)
 980:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 981:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
 982:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 21


 983:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         else
 984:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 985:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
 986:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 987:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 988:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
 989:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 990:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 991:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 992:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue = (snsClkSrc << CYFLD_CSD_LFSR_SIZE__OFFSET);
 993:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 994:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Configuring PRS SEL_BIT */
 995:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if ((CapSense_CLK_SOURCE_PRS8 == snsClkSrc) ||
 996:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             (CapSense_CLK_SOURCE_PRS12 == snsClkSrc))
 997:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 998:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= CapSense_SENSE_PERIOD_SEL_LFSR_MSB_MASK;
 999:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1000:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1001:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue = snsClkSrc;
1002:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1003:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1004:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
1005:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
1006:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
1007:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         switch (snsClkSrc)
1008:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1009:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         case CapSense_CLK_SOURCE_PRS8:
1010:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         case CapSense_CLK_SOURCE_PRS12:
1011:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Divide by 2 for PRS8/PRS12 mode */
1012:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             snsClkDivider >>= 1;
1013:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (snsClkDivider == 0u)
1014:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1015:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 snsClkDivider = 1u;
1016:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
1017:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             break;
1018:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1019:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         default:
1020:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             break;
1021:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1022:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* ((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
1023:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
1024:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)) */
1025:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsCSDSetModeSnsClockDivider(newRegValue, snsClkDivider);
1026:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1027:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1028:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1029:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1030:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDCalculateScanDuration
1031:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1032:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1033:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1034:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   Calculates Scan Duration which is defined by scan resolution
1035:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1036:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1037:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   For Fourth-generation HW block: The function calculates the number of conversions and updates
1038:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   SEQ_NORM_CNT register. The number of conversions depends on resolution and
1039:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   snsClk divider.
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 22


1040:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   For Third-generation HW block: The function recalculate the resolution using following equation
1041:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   2^resolution - 1. The calculated value is contained in
1042:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   CapSense_counterResolution global variable and used in
1043:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   CapSense_SsCSDStartSample() function to trigger the scan process.
1044:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1045:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param wdgtIndex
1046:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  ptrWdgt The pointer to the RAM_WD_BASE_STRUCT structure.
1047:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1048:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1049:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDCalculateScanDuration(CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt)
1050:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1051:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
1052:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 conversionsNum;
1053:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 snsClkDivider;
1054:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1055:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Get Number Of Conversions */
1056:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
1057:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         snsClkDivider = CapSense_dsRam.snsCsdClk;
1058:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1059:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1060:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get SnsClck divider for rows or columns */
1061:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_sensorIndex)
1062:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1063:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->rowSnsClk);
1064:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
1065:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             else
1066:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1067:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->snsClk);
1068:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
1069:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
1070:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             snsClkDivider = (uint32)(ptrWdgt->snsClk);
1071:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1072:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
1073:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1074:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdgt->resolutio
1075:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1076:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set Number Of Conversions based on scanning resolution */
1077:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_SEQ_NORM_CNT_CONV_CNT_MA
1078:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1079:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set up scanning resolution  */
1080:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_counterResolution = (uint32)((0x00000001Lu << ptrWdgt->resolution) - 1u) << CapSen
1081:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1082:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1083:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1084:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1085:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1086:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_CSDSetupWidget
1087:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1088:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1089:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1090:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Performs hardware and firmware initialization required for scanning sensors
1091:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  in a specific widget using the CSD sensing method. This function requires using
1092:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  the CapSense_CSDScan() function to start scanning.
1093:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1094:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1095:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function initializes the specific widget common parameters to perform
1096:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  the CSD scanning. The initialization includes setting up a Modulator and
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 23


1097:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Sense clock frequency and scanning resolution.
1098:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1099:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function does not connect any specific sensors to the scanning hardware,
1100:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  neither does it start a scanning process. The CapSense_CSDScan()
1101:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  API must be called after initializing the widget to start scanning.
1102:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1103:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1104:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_IsBusy() returns a non-busy status.
1105:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1106:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function is called by the CapSense_SetupWidget() API if the
1107:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  given widget uses the CSD sensing method.
1108:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1109:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1110:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1111:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1112:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1113:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param  widgetId
1114:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
1115:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  initialization required for scanning sensors in the specific widget.
1116:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  A macro for the widget ID can be found in the CapSense Configuration header
1117:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  file defined as CapSense_<WidgetName>_WDGT_ID.
1118:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1119:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1120:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_CSDSetupWidget(uint32 widgetId)
1121:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1122:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1123:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1124:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                     CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRa
1125:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1126:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Save widget Id to have assess to it after scanning  */
1127:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_widgetIndex = (uint8)widgetId;
1128:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1129:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
1130:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1131:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1132:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Reset the frequency scan channel if enabled */
1133:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
1134:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
1135:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1136:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Disconnect previous electrode if it has been connected */
1137:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsCSDElectrodeCheck();
1138:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1139:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Initialize IO Sns electrode structure pointer to current widget */
1140:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
1141:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2SnsFlash;
1142:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1143:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Update status register in Data structure */
1144:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_dsRam.status &= ~CapSense_STATUS_WDGT0_MASK;
1145:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_dsRam.status |= CapSense_widgetIndex;
1146:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1147:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Set up scanning resolution (Number ofconversion for CSDv2) */
1148:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsCSDCalculateScanDuration(ptrWdgt);
1149:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1150:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if ((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) ||\
1151:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****          (CapSense_CLK_SOURCE_DIRECT != CapSense_CSD_SNS_CLK_SOURCE))
1152:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConfigClock();
1153:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* ((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) ||\
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 24


1154:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                (CapSense_CLK_SOURCE_DIRECT != CapSense_CSD_SNS_CLK_SOURCE)) */
1155:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1156:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1157:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1158:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1159:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_CSDSetupWidgetExt
1160:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1161:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1162:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1163:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Performs extended initialization for the CSD widget and also performs
1164:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  initialization required for a specific sensor in the widget. This function
1165:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  requires using the CapSense_CSDScanExt() function to initiate a scan.
1166:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1167:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1168:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function does the same as CapSense_CSDSetupWidget() and also
1169:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  does the following tasks:
1170:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    1. Connects the first sensor of the widget.
1171:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    2. Configures the IDAC value.
1172:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    3. Initializes an interrupt callback function to initialize a scan of the
1173:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  next sensors in a widget.
1174:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1175:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Once this function is called to initialize a widget and a sensor, the
1176:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDScanExt() function is called to scan the sensor.
1177:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1178:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1179:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_IsBusy() returns a non-busy status.
1180:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1181:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1182:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1183:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1184:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1185:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param widgetId
1186:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
1187:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  initialization required for scanning the specific sensor in the specific
1188:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  widget.
1189:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  A macro for the widget ID can be found in the CapSense Configuration header
1190:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  file defined as CapSense_<WidgetName>_WDGT_ID.
1191:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1192:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param sensorId
1193:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
1194:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  and firmware initialization required for scanning a specific sensor in a
1195:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  specific widget.
1196:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  A macro for the sensor ID within a specified widget can be found in the
1197:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense Configuration header file defined as
1198:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID
1199:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1200:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1201:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_CSDSetupWidgetExt(uint32 widgetId, uint32 sensorId)
1202:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1203:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1204:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                     CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRa
1205:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1206:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Save widget and sensor Ids to have access to it after scanning  */
1207:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_sensorIndex = (uint8)sensorId;
1208:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1209:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Update global pointer to CapSense_RAM_SNS_STRUCT to current sensor  */
1210:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_curRamSnsPtr = (CapSense_RAM_SNS_STRUCT *)
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 25


1211:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsRam
1212:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               + CapSense_sensorIndex;
1213:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1214:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_CSDSetupWidget(widgetId);
1215:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1216:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****      /* Setup Idac Value */
1217:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsCSDSetUpIdacs(ptrWdgt);
1218:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1219:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1220:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* initialize access pointers for current pointer to widget configuration in Flash */
1221:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_curFlashWdgtPtr = &CapSense_dsFlash.wdgtArray[widgetId];
1222:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
1223:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1224:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1225:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConnectSensorExt(widgetId, sensorId);
1226:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1227:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable sensor */
1228:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_curSnsIOPtr += CapSense_sensorIndex;
1229:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_CSDConnectSns(CapSense_curSnsIOPtr);
1230:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
1231:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1232:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1233:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Save sns pointer */
1234:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_curFlashSnsPtr = (CapSense_FLASH_SNS_STRUCT const *)
1235:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                            CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2Sns
1236:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                            CapSense_sensorIndex;
1237:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
1238:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1239:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_eleCsdDisconnectFlag = CapSense_DISCONNECT_IO_FLAG;
1240:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1241:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Setup ISR handler to single-sensor scan function */
1242:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_ISR_StartEx(&CapSense_CSDPostSingleScan);
1243:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1244:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1245:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1246:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDStartSample
1247:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1248:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1249:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1250:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   Starts the CSD conversion.
1251:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1252:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1253:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   This function assumes that the CSD block is already set up using
1254:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   the CapSense_CSDSetupWidget API and the sensor port-pin is connected to the CSD
1255:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   block using CapSense_CSDConnectSns.
1256:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   For Third-generation HW block the function performs the following tasks:
1257:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   1. Disconnects the Vref buffer from AMUX;
1258:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   2. Precharges Cmod;
1259:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   3. Makes the PreSettling delay to have a stable Vref voltage;
1260:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   4. Sets the resolution to the Counter register to start scanning.
1261:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1262:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1263:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDStartSample(void)
1264:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1265:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE != CapSense_CSDV2)
1266:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint8 interruptState;
1267:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 26


1268:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1269:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #ifdef CapSense_START_SAMPLE_CALLBACK
1270:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_StartSampleCallback(CapSense_widgetIndex, CapSense_sensorIndex);
1271:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* CapSense_START_SAMPLE_CALLBACK */
1272:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1273:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
1274:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Fourth-generation HW block section */
1275:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1276:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Disable CSD interrupt to prevent it during coarse initialization */
1277:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyIntDisable(CapSense_ISR_NUMBER);
1278:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1279:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable power to sub-blocks */
1280:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_HSCMP_PTR, CapSense_HSCMP_INIT_MASK);
1281:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1282:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
1283:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd |
1284:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_CONFIG_SENSE_EN_MASK |
1285:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_CONFIG_ENABLE_MASK);
1286:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if(CapSense_CSD_ANALOG_STARTUP_DELAY_US > 0uL)
1287:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CyDelayUs(CapSense_CSD_ANALOG_STARTUP_DELAY_US);
1288:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_CSD_ANALOG_STARTUP_DELAY_US > 0uL) */
1289:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) */
1290:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1291:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Precharging Cmod and Csh */
1292:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDCmodPrecharge();
1293:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1294:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Trigger Scan */
1295:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDTriggerScan();
1296:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1297:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1298:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Third-generation HW block section */
1299:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         interruptState = CyEnterCriticalSection();
1300:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1301:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable CSD block. Disconnect Vref Buffer from AMUX */
1302:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
1303:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
1304:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CMOD_PRECHARGE_CONFIG_C
1305:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
1306:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CONFIG_
1307:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
1308:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                    (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)) */
1309:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1310:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Restart the clocks. Scan one cycle to reset the flip-flop for Direct clock mode */
1311:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDClockRestart();
1312:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1313:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Precharging Cmod to Vref */
1314:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDCmodPrecharge();
1315:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1316:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CLK_SOURCE_DIRECT != CapSense_CSD_SNS_CLK_SOURCE)
1317:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set PreSettling delay to skip IDAC glitch before scanning */
1318:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CyDelayCycles(CapSense_GLITCH_ELIMINATION_CYCLES);
1319:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_SNS_CLK_SOURCE != CapSense_CLK_SOURCE_DIRECT) */
1320:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1321:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Trigger Scan */
1322:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDTriggerScan();
1323:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1324:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 27


1325:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1326:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1327:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1328:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1329:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1330:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_CSDScanExt
1331:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1332:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1333:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1334:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Starts the CSD conversion on the preconfigured sensor. This function requires
1335:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  using the CapSense_CSDSetupWidgetExt() function to set up the a
1336:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  widget.
1337:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1338:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1339:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function performs single scanning of one sensor in the widget configured
1340:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  by the CapSense_CSDSetupWidgetExt() function. It does the following
1341:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  tasks:
1342:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    1. Sets the busy flag in the CapSense_dsRam structure.
1343:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    2. Performs the clock-phase alignment of the sense and modulator clocks.
1344:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    3. Performs the Cmod pre-charging.
1345:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    4. Starts single scanning.
1346:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1347:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1348:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1349:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1350:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1351:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_IsBusy() returns a non-busy status.
1352:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1353:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The sensor must be preconfigured by using the
1354:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDSetupWidgetExt() API prior to calling this function.
1355:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The sensor remains ready for a next scan if a previous scan was triggered
1356:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  by using the CapSense_CSDScanExt() function. In this case, calling
1357:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDSetupWidgetExt() is not required every time before the
1358:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDScanExt() function. If a previous scan was triggered in
1359:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  any other way - CapSense_Scan(), CapSense_ScanAllWidgets() or
1360:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_RunTuner() - (see the CapSense_RunTuner() function
1361:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  description for more details), the sensor must be preconfigured again by
1362:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  using the CapSense_CSDSetupWidgetExt() API prior to calling the
1363:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDScanExt() function.
1364:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1365:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  If disconnection of the sensors is required after calling
1366:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDScanExt(), the CapSense_CSDDisconnectSns()
1367:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  function can be used.
1368:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1369:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1370:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_CSDScanExt(void)
1371:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1372:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Set Start of sensor scan flag */
1373:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_dsRam.status |= (CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
1374:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1375:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1376:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Reset the frequency scan channel if enabled */
1377:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
1378:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
1379:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1380:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE != CapSense_BLOCK_OFF_AFTER_SCAN_EN) &&\
1381:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         (CapSense_ENABLE == CapSense_CSDV2)
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 28


1382:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if(CapSense_CSD_ANALOG_STARTUP_DELAY_US > 0uL)
1383:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CyDelayUs(CapSense_CSD_ANALOG_STARTUP_DELAY_US);
1384:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_ANALOG_STARTUP_DELAY_US > 0uL) */
1385:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE != CapSense_BLOCK_OFF_AFTER_SCAN_EN) &&\
1386:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****               (CapSense_ENABLE == CapSense_CSDV2)*/
1387:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1388:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_SsCSDStartSample();
1389:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1390:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1391:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1392:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1393:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_CSDScan
1394:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1395:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1396:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1397:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function initiates a scan for the sensors of the widget initialized by the
1398:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDSetupWidget() function.
1399:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1400:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1401:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function performs scanning of all the sensors in the widget configured by
1402:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  the CapSense_CSDSetupWidget() function. It does the following tasks:
1403:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    1. Connects the first sensor of the widget.
1404:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    2. Configures the IDAC value.
1405:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    3. Initializes the interrupt callback function to initialize a scan of
1406:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *       the next sensors in a widget.
1407:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *    4. Starts scanning for the first sensor in the widget.
1408:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1409:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function is called by the CapSense_Scan() API if the given
1410:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  widget uses the CSD sensing method.
1411:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1412:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1413:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1414:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1415:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1416:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1417:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_IsBusy() returns a non-busy status. The widget must be
1418:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  preconfigured by the CapSense_CSDSetupWidget() function if any other
1419:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  widget was previously scanned or any other type of the scan functions was used.
1420:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1421:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1422:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_CSDScan(void)
1423:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1424:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1425:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                     CapSense_dsFlash.wdgtArray[CapSense_widgetIndex
1426:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1427:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****      /*
1428:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****       * Update CapSense_sensorIndex with the first sensor in
1429:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****       * widget to use it in ISR handler to configure the next sensor
1430:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****       */
1431:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_sensorIndex = 0u;
1432:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1433:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Update global pointer to CapSense_RAM_SNS_STRUCT to current sensor  */
1434:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_curRamSnsPtr = (CapSense_RAM_SNS_STRUCT *)
1435:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2
1436:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               + CapSense_sensorIndex;
1437:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1438:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 29


1439:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Reset the frequency scan channel if enabled */
1440:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
1441:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
1442:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1443:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Setup Idac Value */
1444:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****    CapSense_SsCSDSetUpIdacs(ptrWdgt);
1445:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1446:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1447:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Check ganged sns flag  */
1448:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].staticCon
1449:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_GANGED_SNS_MASK))
1450:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1451:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Setup ISR handler to multiple-sensor scan function with ganged sensors */
1452:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_ISR_StartEx(&CapSense_CSDPostMultiScanGanged);
1453:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1454:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         else
1455:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1456:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set up ISR handler to multiple-sensor scan function without ganged sensors */
1457:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_ISR_StartEx(&CapSense_CSDPostMultiScan);
1458:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1459:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1460:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsCSDConnectSensorExt((uint32)CapSense_widgetIndex, (uint32)CapSense_sensorIndex);
1461:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1462:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* initialize ptr to sensor IO structure to appropriate address */
1463:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
1464:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                         CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2SnsFla
1465:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                         + CapSense_sensorIndex;
1466:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1467:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable sensor */
1468:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_CSDConnectSns(CapSense_curSnsIOPtr);
1469:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1470:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set-up ISR handler to multiple-sensor scan function without ganged sensors */
1471:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_ISR_StartEx(&CapSense_CSDPostMultiScan);
1472:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
1473:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1474:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Start scanning */
1475:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_CSDScanExt();
1476:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1477:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1478:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1479:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1480:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDConnectSensorExt
1481:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1482:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1483:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1484:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Connects a ganged sensor port-pin to the sensing HW block via the AMUX bus.
1485:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1486:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1487:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   The function gets the IO configuration registers addresses, their shifts and
1488:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   masks from the FLASH_IO_STRUCT object. Basing on this data, it updates the HSIOM and
1489:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   PC registers.
1490:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1491:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param widgetId
1492:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies ID of the widget.
1493:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1494:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param sensorId
1495:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies ID of the sensor in the widget.
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 30


1496:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1497:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1498:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDConnectSensorExt(uint32 widgetId, uint32 sensorId)
1499:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1500:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1501:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 tempVal;
1502:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
1503:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1504:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* initialize ptr to sensor IO structure to appropriate address */
1505:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
1506:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
1507:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       + sensorId;
1508:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1509:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1510:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Check ganged sns flag  */
1511:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (CapSense_GANGED_SNS_MASK ==
1512:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****            (CapSense_dsFlash.wdgtArray[widgetId].staticConfig &
1513:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_GANGED_SNS_MASK))
1514:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1515:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get sns pointer */
1516:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_curFlashSnsPtr = (CapSense_FLASH_SNS_STRUCT const *)
1517:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash +
1518:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                sensorId;
1519:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1520:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get number of ganged pins */
1521:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             tempVal = CapSense_curFlashSnsPtr->numPins;
1522:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1523:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get IO pointer  */
1524:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_curSnsIOPtr = &CapSense_ioList[CapSense_curFlashSnsPtr->firstPinId];
1525:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1526:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect all ganged sensors  */
1527:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             do
1528:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1529:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSDConnectSns(CapSense_curSnsIOPtr);
1530:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_curSnsIOPtr++;
1531:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tempVal--;
1532:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             } while (0u != tempVal);
1533:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1534:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         else
1535:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1536:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect sensor */
1537:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDConnectSns(CapSense_curSnsIOPtr);
1538:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1539:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1540:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect sensor */
1541:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_CSDConnectSns(CapSense_curSnsIOPtr);
1542:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
1543:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1544:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1545:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1546:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1547:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDDisconnectSnsExt
1548:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1549:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1550:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1551:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Disconnects a ganged sensor port-pin from the sensing HW block and AMUX bus.
1552:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Sets the default state of the un-scanned sensor.
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 31


1553:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1554:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1555:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   The function gets the IO configuration registers addresses, their shifts and
1556:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   masks from the FLASH_IO_STRUCT object. Basing on this data and Inactive sensor
1557:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   connection parameter, it updates the HSIOM, PC and DR registers.
1558:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   The HSIOM register is updated only when the Inactive sensor connection parameter
1559:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *   is set to Shield.
1560:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1561:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param widgetId
1562:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies ID of the widget.
1563:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1564:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param sensorId
1565:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies ID of the sensor in the widget.
1566:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1567:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1568:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_SsCSDDisconnectSnsExt(uint32 widgetId, uint32 sensorId)
1569:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1570:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1571:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 tempVal;
1572:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
1573:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1574:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* initialize ptr to sensor IO structure to appropriate address        */
1575:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
1576:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
1577:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       + sensorId;
1578:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1579:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
1580:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Check ganged sns flag  */
1581:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if ((CapSense_dsFlash.wdgtArray[widgetId].staticConfig &
1582:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_GANGED_SNS_MASK) == CapSense_GANGED_SNS_MASK)
1583:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1584:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get sns pointer */
1585:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_curFlashSnsPtr = (CapSense_FLASH_SNS_STRUCT const *)
1586:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash +
1587:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                sensorId;
1588:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1589:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get number of ganged pins */
1590:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             tempVal = CapSense_curFlashSnsPtr->numPins;
1591:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1592:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Get IO pointer  */
1593:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_curSnsIOPtr = &CapSense_ioList[CapSense_curFlashSnsPtr->firstPinId];
1594:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1595:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Disconnect all ganged sensors */
1596:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             do
1597:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1598:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_CSDDisconnectSns(CapSense_curSnsIOPtr);
1599:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_curSnsIOPtr++;
1600:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tempVal--;
1601:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             } while (0u != tempVal);
1602:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1603:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         else
1604:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1605:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Disconnect ganged sensor */
1606:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDDisconnectSns(CapSense_curSnsIOPtr);
1607:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1608:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1609:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Disconnect ganged sensor */
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 32


1610:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_CSDDisconnectSns(CapSense_curSnsIOPtr);
1611:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
1612:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1613:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1614:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1615:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1616:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_CSDConnectSns
1617:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1618:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1619:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1620:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Connects a port pin used by the sensor to the AMUX bus of the sensing HW block.
1621:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1622:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1623:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Connects a port pin used by the sensor to the AMUX bus of the sensing HW block
1624:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  while a sensor is being scanned. The function ignores the fact if
1625:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  the sensor is a ganged sensor and connects only a specified pin.
1626:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1627:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Scanning should be completed before calling this API.
1628:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1629:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1630:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1631:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget,
1632:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  automatically set the required pin states and perform the sensor connection.
1633:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  They do not take into account changes in the design made by the
1634:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDConnectSns() function.
1635:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1636:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param  snsAddrPtr
1637:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1638:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  which to be connected to the sensing HW block.
1639:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1640:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1641:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_CSDConnectSns(CapSense_FLASH_IO_STRUCT const *snsAddrPtr)
1642:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1643:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 newRegisterValue;
1644:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint8  interruptState;
1645:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 pinModeShift;
1646:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 pinHSIOMShift;
1647:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1648:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Get offsets for sensor */
1649:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     pinModeShift = (uint32)snsAddrPtr->shift;
1650:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     pinHSIOMShift = (uint32)snsAddrPtr->hsiomShift;
1651:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1652:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     interruptState = CyEnterCriticalSection();
1653:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1654:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Use temporary variable to update registers without multiple writings to them */
1655:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newRegisterValue = CY_GET_REG32(snsAddrPtr->hsiomPtr);
1656:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newRegisterValue &= ~(CapSense_HSIOM_SEL_MASK << pinHSIOMShift);
1657:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newRegisterValue |= (uint32)((uint32)CapSense_HSIOM_SEL_CSD_SENSE << pinHSIOMShift);
1658:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1659:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Update port configuration register (drive mode) for sensor */
1660:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->pcPtr, CY_GET_REG32(snsAddrPtr->pcPtr) & (uint32)~((uint32)CapSense_GP
1661:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1662:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Update HSIOM register for sensor */
1663:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->hsiomPtr, newRegisterValue);
1664:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1665:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CyExitCriticalSection(interruptState);
1666:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 33


1667:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1668:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1669:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
1670:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_CSDDisconnectSns
1671:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
1672:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1673:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
1674:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Disconnects a sensor port pin from the sensing HW block and the AMUX bus. Sets
1675:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  the default state of the un-scanned sensor.
1676:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1677:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
1678:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function works identically to CapSense_CSDConnectSns() except
1679:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  it disconnects the specified port-pin used by the sensor.
1680:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1681:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1682:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1683:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  use cases. Functions that perform a setup and scan of sensor/widget
1684:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  automatically set the required pin states and perform the sensor connection.
1685:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  They ignore changes in the design made by the
1686:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  CapSense_CSDDisconnectSns() function.
1687:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1688:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \param  snsAddrPtr
1689:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1690:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  which should be disconnected from the sensing HW block.
1691:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
1692:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
1693:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** void CapSense_CSDDisconnectSns(CapSense_FLASH_IO_STRUCT const *snsAddrPtr)
1694:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
1695:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 pinHSIOMShift;
1696:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 newRegisterValue;
1697:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 pinModeShift;
1698:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1699:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if ((CapSense_DISABLE == CapSense_CSD_SHIELD_EN) || \
1700:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         (CapSense_SNS_CONNECTION_SHIELD != CapSense_CSD_INACTIVE_SNS_CONNECTION))
1701:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint8  interruptState;
1702:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* ((CapSense_DISABLE == CapSense_CSD_SHIELD_EN) && \
1703:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 (CapSense_SNS_CONNECTION_SHIELD != CapSense_CSD_INACTIVE_SNS_CONNECTION))) */
1704:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1705:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     pinHSIOMShift = (uint32)snsAddrPtr->hsiomShift;
1706:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     pinModeShift = (uint32)snsAddrPtr->shift;
1707:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1708:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if ((CapSense_DISABLE == CapSense_CSD_SHIELD_EN) ||  \
1709:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         (CapSense_SNS_CONNECTION_SHIELD != CapSense_CSD_INACTIVE_SNS_CONNECTION))
1710:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Update HSIOM register to disconnect sensor */
1711:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->hsiomPtr, CY_GET_REG32(snsAddrPtr->hsiomPtr) & ~(CapSense_HSIOM_SE
1712:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1713:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         interruptState = CyEnterCriticalSection();
1714:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1715:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Update port configuration register (drive mode) for sensor */
1716:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegisterValue = CY_GET_REG32(snsAddrPtr->pcPtr);
1717:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegisterValue &= ~(CapSense_GPIO_PC_MASK << pinModeShift);
1718:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegisterValue |= CapSense_CSD_INACTIVE_SNS_CONNECTION << pinModeShift;
1719:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->pcPtr, newRegisterValue);
1720:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1721:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1723:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set logic 0 to port data register */
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 34


1724:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->drPtr, CY_GET_REG32(snsAddrPtr->drPtr) & (uint32)~(uint32)((uint32
1725:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
1726:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Update port configuration register (drive mode to HiZ Analog) for sensor */
1727:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->pcPtr, CY_GET_REG32(snsAddrPtr->pcPtr) & (uint32)~((uint32)CapSens
1728:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1729:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Connect to Shield */
1730:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegisterValue = CY_GET_REG32(snsAddrPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << pinHSI
1731:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegisterValue |= (CapSense_HSIOM_SEL_CSD_SHIELD << pinHSIOMShift);
1732:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->hsiomPtr, newRegisterValue);
1733:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* ((CapSense_DISABLE == CapSense_CSD_SHIELD_EN) && \
1734:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 (CapSense_SNS_CONNECTION_SHIELD != CapSense_CSD_INACTIVE_SNS_CONNECTION)) */
1735:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
1736:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1737:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if ((CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) || \
1738:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****      (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN))
1739:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1740:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /*******************************************************************************
1741:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * Function Name: CapSense_SsCSDSetSingleIdacMode
1742:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ****************************************************************************//**
1743:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
1744:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \brief
1745:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  This function set single IDAC mode.
1746:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
1747:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \details
1748:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   For Third-generation HW block: The function enables Modulator IDAC only in variable mod
1749:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   For Fourth-generation HW block: The function enables IDACA LEG1 in CSD mode, IDACA LEG2
1750:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
1751:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *******************************************************************************/
1752:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static void CapSense_SsCSDSetSingleIdacMode(void)
1753:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 159              		.loc 1 1753 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
1754:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 newRegValue;
1755:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1756:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE == CapSense_CSDV2)
1757:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Enable IDACA LEG1 in CSD mode, IDACA LEG2 in GP mode */
1758:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_IDAC_MOD_PTR) &
 164              		.loc 1 1758 0
 165 0000 074B     		ldr	r3, .L14
 166 0002 1A68     		ldr	r2, [r3]
 167 0004 7F21     		movs	r1, #127
 168 0006 0A40     		ands	r2, r1
 169              	.LVL4:
1759:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                               CapSense_IDAC_MOD_VAL_MASK;
1760:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 newRegValue |= CapSense_IDAC_MOD_CALIBRATION_CFG;
 170              		.loc 1 1760 0
 171 0008 0648     		ldr	r0, .L14+4
 172 000a 0243     		orrs	r2, r0
 173              	.LVL5:
1761:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_IDAC_MOD_PTR, newRegValue);
 174              		.loc 1 1761 0
 175 000c 1A60     		str	r2, [r3]
1762:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
1763:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     (CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN)
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 35


1764:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newRegValue = CY_GET_REG32(CapSense_IDAC_COMP_PTR) & CapSense_IDAC_COMP_VAL_MAS
 176              		.loc 1 1764 0
 177 000e 064A     		ldr	r2, .L14+8
 178              	.LVL6:
 179 0010 1368     		ldr	r3, [r2]
 180              	.LVL7:
 181 0012 0B40     		ands	r3, r1
 182              	.LVL8:
1765:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     newRegValue |= CapSense_IDAC_COMP_CALIBRATION_CFG;
 183              		.loc 1 1765 0
 184 0014 8021     		movs	r1, #128
 185 0016 0904     		lsls	r1, r1, #16
 186 0018 0B43     		orrs	r3, r1
 187              	.LVL9:
1766:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_IDAC_COMP_PTR, newRegValue);
 188              		.loc 1 1766 0
 189 001a 1360     		str	r3, [r2]
1767:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
1768:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                           (CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN */
1769:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #else
1770:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Enable Modulator IDAC only in variable mode */
1771:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_IDAC_PTR) &
1772:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                               ~(CapSense_IDAC_MOD_MODE_MASK | CapSense_IDAC_COMP_MODE_MASK);
1773:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 newRegValue |= CapSense_IDAC_MOD_MODE_VARIABLE;
1774:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_IDAC_PTR, newRegValue);
1775:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1776:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 190              		.loc 1 1776 0
 191              		@ sp needed
 192 001c 7047     		bx	lr
 193              	.L15:
 194 001e C046     		.align	2
 195              	.L14:
 196 0020 C0010B40 		.word	1074463168
 197 0024 00008301 		.word	25362432
 198 0028 C4010B40 		.word	1074463172
 199              		.cfi_endproc
 200              	.LFE19:
 201              		.size	CapSense_SsCSDSetSingleIdacMode, .-CapSense_SsCSDSetSingleIdacMode
 202              		.section	.text.CapSense_SsCSDRestoreIdacMode,"ax",%progbits
 203              		.align	2
 204              		.code	16
 205              		.thumb_func
 206              		.type	CapSense_SsCSDRestoreIdacMode, %function
 207              	CapSense_SsCSDRestoreIdacMode:
 208              	.LFB20:
1777:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
1778:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* ((CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) || \
1779:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****            (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN)) */
1780:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1781:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if ((CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) || \
1782:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****      (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN))
1783:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1784:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /*******************************************************************************
1785:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * Function Name: CapSense_SsCSDRestoreIdacMode
1786:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ****************************************************************************//**
1787:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 36


1788:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \brief
1789:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *  This function restores IDAC configuration.
1790:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
1791:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         * \details
1792:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *   The function restores Compensation IDAC if it is enabled.
1793:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *
1794:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         *******************************************************************************/
1795:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         static void CapSense_SsCSDRestoreIdacMode(void)
1796:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 209              		.loc 1 1796 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		@ link register save eliminated.
1797:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Restore IDAC configuration */
1798:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE == CapSense_CSDV2)
1799:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 uint32 newRegValue;
1800:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1801:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 214              		.loc 1 1801 0
 215 0000 064A     		ldr	r2, .L17
 216 0002 1368     		ldr	r3, [r2]
 217              	.LVL10:
1802:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 newRegValue |= CapSense_DEFAULT_SW_REFGEN_SEL;
 218              		.loc 1 1802 0
 219 0004 0649     		ldr	r1, .L17+4
 220 0006 0B43     		orrs	r3, r1
 221              	.LVL11:
1803:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 222              		.loc 1 1803 0
 223 0008 1360     		str	r3, [r2]
1804:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_IDAC_MOD_PTR, CapSense_IDAC_MOD_DEFAULT_CFG);
 224              		.loc 1 1804 0
 225 000a 064A     		ldr	r2, .L17+8
 226 000c 064B     		ldr	r3, .L17+12
 227              	.LVL12:
 228 000e 1A60     		str	r2, [r3]
 229              	.LVL13:
1805:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
1806:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     (CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN)
1807:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_IDAC_COMP_PTR, CapSense_IDAC_COMP_DEFAULT_CFG);
 230              		.loc 1 1807 0
 231 0010 C122     		movs	r2, #193
 232 0012 5204     		lsls	r2, r2, #17
 233 0014 054B     		ldr	r3, .L17+16
 234 0016 1A60     		str	r2, [r3]
1808:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
1809:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                           (CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN */
1810:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #else
1811:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1812:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_IDAC_PTR, CapSense_DEFAULT_CSD_IDAC_CONFIG);
1813:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #else
1814:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_IDAC_PTR, CY_GET_REG32(CapSense_IDAC_PTR) &
1815:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                                         ~(CapSense_IDAC_MOD_MODE_MA
1816:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_IDAC_PTR, CY_GET_REG32(CapSense_IDAC_PTR) | CapSense_DEFA
1817:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
1818:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 37


1819:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 235              		.loc 1 1819 0
 236              		@ sp needed
 237 0018 7047     		bx	lr
 238              	.L18:
 239 001a C046     		.align	2
 240              	.L17:
 241 001c A8020B40 		.word	1074463400
 242 0020 01000010 		.word	268435457
 243 0024 00008301 		.word	25362432
 244 0028 C0010B40 		.word	1074463168
 245 002c C4010B40 		.word	1074463172
 246              		.cfi_endproc
 247              	.LFE20:
 248              		.size	CapSense_SsCSDRestoreIdacMode, .-CapSense_SsCSDRestoreIdacMode
 249              		.section	.text.CapSense_SsCSDCalibrateCheck,"ax",%progbits
 250              		.align	2
 251              		.code	16
 252              		.thumb_func
 253              		.type	CapSense_SsCSDCalibrateCheck, %function
 254              	CapSense_SsCSDCalibrateCheck:
 255              	.LFB21:
1820:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
1821:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1822:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
1823:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_SsCSDCalibrateCheck
1824:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
1825:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1826:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
1827:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  This internal function checks if the calibration is performed successfully.
1828:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1829:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
1830:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   The function verifies calibration error based on maximum raw count level.
1831:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1832:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param rawLevel The raw data level which should be reached during the
1833:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   calibration procedure.
1834:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param rawData  Calibrated raw counts.
1835:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1836:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \return Returns the status of the operation:
1837:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   - Zero     - All the sensors in the widget are calibrated successfully.
1838:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   - Non-Zero - Calibration failed for any sensor in the widget.
1839:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1840:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
1841:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static cystatus CapSense_SsCSDCalibrateCheck(CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt, uint32
1842:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 256              		.loc 1 1842 0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              	.LVL14:
 261 0000 70B5     		push	{r4, r5, r6, lr}
 262              		.cfi_def_cfa_offset 16
 263              		.cfi_offset 4, -16
 264              		.cfi_offset 5, -12
 265              		.cfi_offset 6, -8
 266              		.cfi_offset 14, -4
 267 0002 0E00     		movs	r6, r1
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 38


 268 0004 1500     		movs	r5, r2
 269              	.LVL15:
1843:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         cystatus calibrateStatus;
1844:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 rawCountsError;
1845:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 minRawLevel = 0u;
1846:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 maxRawLevel = (0x00000001Lu << ptrWdgt->resolution) - 1u;
 270              		.loc 1 1846 0
 271 0006 0388     		ldrh	r3, [r0]
 272 0008 0124     		movs	r4, #1
 273 000a 9C40     		lsls	r4, r4, r3
 274 000c 013C     		subs	r4, r4, #1
 275              	.LVL16:
1847:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1848:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Calculate the error in rawcounts for given resolution (round to floor) */
1849:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         rawCountsError = ((maxRawLevel * CapSense_IDAC_MOD_MAX_CALIB_ERROR) /
 276              		.loc 1 1849 0
 277 000e A300     		lsls	r3, r4, #2
 278 0010 1B19     		adds	r3, r3, r4
 279 0012 5800     		lsls	r0, r3, #1
 280              	.LVL17:
 281 0014 6421     		movs	r1, #100
 282              	.LVL18:
 283 0016 FFF7FEFF 		bl	__aeabi_uidiv
 284              	.LVL19:
 285 001a 0130     		adds	r0, r0, #1
 286              	.LVL20:
1850:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                           CapSense_PERCENTAGE_100) + 1u;
1851:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1852:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Get minimum and maximum range values */
1853:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if ((rawLevel + rawCountsError) <= maxRawLevel)
 287              		.loc 1 1853 0
 288 001c 8319     		adds	r3, r0, r6
 289 001e 9C42     		cmp	r4, r3
 290 0020 00D2     		bcs	.L20
1846:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 291              		.loc 1 1846 0
 292 0022 2300     		movs	r3, r4
 293              	.L20:
 294              	.LVL21:
1854:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1855:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             maxRawLevel = rawLevel + rawCountsError;
1856:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1857:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (rawLevel >= rawCountsError)
 295              		.loc 1 1857 0
 296 0024 B042     		cmp	r0, r6
 297 0026 01D8     		bhi	.L23
1858:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1859:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             minRawLevel = rawLevel - rawCountsError;
 298              		.loc 1 1859 0
 299 0028 301A     		subs	r0, r6, r0
 300              	.LVL22:
 301 002a 00E0     		b	.L21
 302              	.LVL23:
 303              	.L23:
1845:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 maxRawLevel = (0x00000001Lu << ptrWdgt->resolution) - 1u;
 304              		.loc 1 1845 0
 305 002c 0020     		movs	r0, #0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 39


 306              	.LVL24:
 307              	.L21:
1860:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1861:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1862:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Check if calibration is in valid range */
1863:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if ((rawData < minRawLevel) || (rawData > maxRawLevel))
 308              		.loc 1 1863 0
 309 002e A842     		cmp	r0, r5
 310 0030 03D8     		bhi	.L24
 311              		.loc 1 1863 0 is_stmt 0 discriminator 1
 312 0032 AB42     		cmp	r3, r5
 313 0034 03D2     		bcs	.L25
1864:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1865:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             calibrateStatus = CYRET_BAD_DATA;
 314              		.loc 1 1865 0 is_stmt 1
 315 0036 0620     		movs	r0, #6
 316              	.LVL25:
 317 0038 02E0     		b	.L22
 318              	.LVL26:
 319              	.L24:
 320 003a 0620     		movs	r0, #6
 321              	.LVL27:
 322 003c 00E0     		b	.L22
 323              	.LVL28:
 324              	.L25:
1866:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1867:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         else
1868:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1869:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             calibrateStatus = CYRET_SUCCESS;
 325              		.loc 1 1869 0
 326 003e 0020     		movs	r0, #0
 327              	.LVL29:
 328              	.L22:
1870:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1871:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1872:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         return (calibrateStatus);
1873:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 329              		.loc 1 1873 0
 330              		@ sp needed
 331              	.LVL30:
 332              	.LVL31:
 333 0040 70BD     		pop	{r4, r5, r6, pc}
 334              		.cfi_endproc
 335              	.LFE21:
 336              		.size	CapSense_SsCSDCalibrateCheck, .-CapSense_SsCSDCalibrateCheck
 337 0042 C046     		.section	.text.CapSense_SsCSDInitialize,"ax",%progbits
 338              		.align	2
 339              		.global	CapSense_SsCSDInitialize
 340              		.code	16
 341              		.thumb_func
 342              		.type	CapSense_SsCSDInitialize, %function
 343              	CapSense_SsCSDInitialize:
 344              	.LFB4:
 480:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 newRegValue;
 345              		.loc 1 480 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 40


 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349 0000 70B5     		push	{r4, r5, r6, lr}
 350              		.cfi_def_cfa_offset 16
 351              		.cfi_offset 4, -16
 352              		.cfi_offset 5, -12
 353              		.cfi_offset 6, -8
 354              		.cfi_offset 14, -4
 484:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 355              		.loc 1 484 0
 356 0002 FFF7FEFF 		bl	CapSense_SsClearCSDSensors
 357              	.LVL32:
 487:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 358              		.loc 1 487 0
 359 0006 FFF7FEFF 		bl	CapSense_BistDischargeExtCapacitors
 360              	.LVL33:
 505:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 361              		.loc 1 505 0
 362 000a C022     		movs	r2, #192
 363 000c 1203     		lsls	r2, r2, #12
 364 000e 274B     		ldr	r3, .L27
 365 0010 1A60     		str	r2, [r3]
 508:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue |= CapSense_DEFAULT_SW_REFGEN_SEL;
 366              		.loc 1 508 0
 367 0012 274B     		ldr	r3, .L27+4
 368 0014 1968     		ldr	r1, [r3]
 369              	.LVL34:
 509:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 370              		.loc 1 509 0
 371 0016 274E     		ldr	r6, .L27+8
 372 0018 3143     		orrs	r1, r6
 373              	.LVL35:
 511:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_INTR_SET_PTR,         CapSense_DEFAULT_CSD_INTR_SET);
 374              		.loc 1 511 0
 375 001a 1960     		str	r1, [r3]
 512:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR,   CapSense_DEFAULT_CSD_SW_FW_TANK_SEL);
 376              		.loc 1 512 0
 377 001c 0024     		movs	r4, #0
 378 001e 264A     		ldr	r2, .L27+12
 379 0020 1460     		str	r4, [r2]
 513:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_DSI_SEL_PTR,       CapSense_DEFAULT_CSD_SW_DSI_SEL);
 380              		.loc 1 513 0
 381 0022 264A     		ldr	r2, .L27+16
 382 0024 1460     		str	r4, [r2]
 514:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_ADC_CTL_PTR,          CapSense_DEFAULT_CSD_ADC_CTL);
 383              		.loc 1 514 0
 384 0026 264A     		ldr	r2, .L27+20
 385 0028 1460     		str	r4, [r2]
 515:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_AMBUF_PTR,            CapSense_AMBUF_PWR_MODE_OFF);
 386              		.loc 1 515 0
 387 002a 264A     		ldr	r2, .L27+24
 388 002c 1460     		str	r4, [r2]
 516:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR,    CapSense_DEFAULT_SW_SHIELD_SEL);
 389              		.loc 1 516 0
 390 002e 264A     		ldr	r2, .L27+28
 391 0030 1460     		str	r4, [r2]
 517:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR,      CapSense_DEFAULT_SW_HS_P_SEL);
 392              		.loc 1 517 0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 41


 393 0032 264A     		ldr	r2, .L27+32
 394 0034 1460     		str	r4, [r2]
 518:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR,      CapSense_DEFAULT_SW_HS_N_SEL);
 395              		.loc 1 518 0
 396 0036 264A     		ldr	r2, .L27+36
 397 0038 1460     		str	r4, [r2]
 519:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_HSCMP_PTR,            CapSense_DEFAULT_HSCMP_CFG);
 398              		.loc 1 519 0
 399 003a 264D     		ldr	r5, .L27+40
 400 003c 2C60     		str	r4, [r5]
 520:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 401              		.loc 1 520 0
 402 003e 264A     		ldr	r2, .L27+44
 403 0040 1460     		str	r4, [r2]
 523:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CMOD_HSIOM_MASK);
 404              		.loc 1 523 0
 405 0042 264A     		ldr	r2, .L27+48
 406 0044 1168     		ldr	r1, [r2]
 407              	.LVL36:
 524:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue |= (CapSense_HSIOM_SEL_AMUXA << CapSense_CMOD_HSIOM_SHIFT);
 408              		.loc 1 524 0
 409 0046 F020     		movs	r0, #240
 410 0048 8143     		bics	r1, r0
 411              	.LVL37:
 525:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_CMOD_HSIOM_PTR, newRegValue);
 412              		.loc 1 525 0
 413 004a 9038     		subs	r0, r0, #144
 414 004c 0143     		orrs	r1, r0
 415              	.LVL38:
 526:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 416              		.loc 1 526 0
 417 004e 1160     		str	r1, [r2]
 529:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue |= CapSense_SW_BYP_SEL_SW_BYA_MASK;
 418              		.loc 1 529 0
 419 0050 234A     		ldr	r2, .L27+52
 420 0052 1168     		ldr	r1, [r2]
 421              	.LVL39:
 530:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_BYP_SEL_PTR, newRegValue);
 422              		.loc 1 530 0
 423 0054 8020     		movs	r0, #128
 424 0056 4001     		lsls	r0, r0, #5
 425 0058 0143     		orrs	r1, r0
 426              	.LVL40:
 531:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 427              		.loc 1 531 0
 428 005a 1160     		str	r1, [r2]
 537:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 429              		.loc 1 537 0
 430 005c 8021     		movs	r1, #128
 431              	.LVL41:
 432 005e 4900     		lsls	r1, r1, #1
 433 0060 204A     		ldr	r2, .L27+56
 434              	.LVL42:
 435 0062 1160     		str	r1, [r2]
 436              	.LVL43:
 554:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             newRegValue |= CapSense_SW_REFGEN_SEL_SW_SGR_MASK | CapSense_SW_REFGEN_SEL_SW_IAIB_MASK
 437              		.loc 1 554 0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 42


 438 0064 1A68     		ldr	r2, [r3]
 439              	.LVL44:
 555:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 440              		.loc 1 555 0
 441 0066 3243     		orrs	r2, r6
 442              	.LVL45:
 556:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 443              		.loc 1 556 0
 444 0068 1A60     		str	r2, [r3]
 592:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 445              		.loc 1 592 0
 446 006a 8023     		movs	r3, #128
 447 006c 5B04     		lsls	r3, r3, #17
 448 006e 1E4A     		ldr	r2, .L27+60
 449              	.LVL46:
 450 0070 1360     		str	r3, [r2]
 451              	.LVL47:
 595:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 452              		.loc 1 595 0
 453 0072 1E49     		ldr	r1, .L27+64
 454 0074 1E4A     		ldr	r2, .L27+68
 455 0076 1160     		str	r1, [r2]
 608:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 456              		.loc 1 608 0
 457 0078 1E4A     		ldr	r2, .L27+72
 458 007a 1460     		str	r4, [r2]
 612:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_2000_MV > CapSense_CYDEV_VDDA_MV) */
 459              		.loc 1 612 0
 460 007c 2B60     		str	r3, [r5]
 616:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 461              		.loc 1 616 0
 462 007e FFF7FEFF 		bl	CapSense_SsCSDConfigIDACs
 463              	.LVL48:
 619:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 464              		.loc 1 619 0
 465 0082 1D4B     		ldr	r3, .L27+76
 466 0084 987F     		ldrb	r0, [r3, #30]
 467 0086 FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 468              	.LVL49:
 627:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 469              		.loc 1 627 0
 470 008a FFF7FEFF 		bl	CapSense_SsCSDSetFilterDelay
 471              	.LVL50:
 631:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                   CapSense_CONFIG_SENSE_EN_MASK |
 472              		.loc 1 631 0
 473 008e 1B4B     		ldr	r3, .L27+80
 474 0090 1B68     		ldr	r3, [r3]
 475 0092 1B4A     		ldr	r2, .L27+84
 476 0094 1343     		orrs	r3, r2
 477 0096 1B4A     		ldr	r2, .L27+88
 478 0098 1360     		str	r3, [r2]
 637:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 479              		.loc 1 637 0
 480 009a 0122     		movs	r2, #1
 481 009c 1A4B     		ldr	r3, .L27+92
 482 009e 1A60     		str	r2, [r3]
 640:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 43


 483              		.loc 1 640 0
 484 00a0 1A4B     		ldr	r3, .L27+96
 485 00a2 1C60     		str	r4, [r3]
 643:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 486              		.loc 1 643 0
 487 00a4 0932     		adds	r2, r2, #9
 488 00a6 1A4B     		ldr	r3, .L27+100
 489 00a8 1A60     		str	r2, [r3]
 675:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 490              		.loc 1 675 0
 491              		@ sp needed
 492 00aa 70BD     		pop	{r4, r5, r6, pc}
 493              	.L28:
 494              		.align	2
 495              	.L27:
 496 00ac 04020B40 		.word	1074463236
 497 00b0 A8020B40 		.word	1074463400
 498 00b4 01000010 		.word	268435457
 499 00b8 F4000B40 		.word	1074462964
 500 00bc B4020B40 		.word	1074463412
 501 00c0 C0020B40 		.word	1074463424
 502 00c4 20030B40 		.word	1074463520
 503 00c8 84010B40 		.word	1074463108
 504 00cc 88020B40 		.word	1074463368
 505 00d0 80020B40 		.word	1074463360
 506 00d4 84020B40 		.word	1074463364
 507 00d8 80010B40 		.word	1074463104
 508 00dc 00040240 		.word	1073873920
 509 00e0 94020B40 		.word	1074463380
 510 00e4 A0020B40 		.word	1074463392
 511 00e8 A4020B40 		.word	1074463396
 512 00ec 41120000 		.word	4673
 513 00f0 88010B40 		.word	1074463112
 514 00f4 90020B40 		.word	1074463376
 515 00f8 00000000 		.word	CapSense_dsRam
 516 00fc 00000000 		.word	.LANCHOR0
 517 0100 00100080 		.word	-2147479552
 518 0104 00000B40 		.word	1074462720
 519 0108 00030B40 		.word	1074463488
 520 010c F0010B40 		.word	1074463216
 521 0110 10030B40 		.word	1074463504
 522              		.cfi_endproc
 523              	.LFE4:
 524              		.size	CapSense_SsCSDInitialize, .-CapSense_SsCSDInitialize
 525              		.section	.text.CapSense_SsCSDSetUpIdacs,"ax",%progbits
 526              		.align	2
 527              		.global	CapSense_SsCSDSetUpIdacs
 528              		.code	16
 529              		.thumb_func
 530              		.type	CapSense_SsCSDSetUpIdacs, %function
 531              	CapSense_SsCSDSetUpIdacs:
 532              	.LFB6:
 756:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 533              		.loc 1 756 0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 44


 537              	.LVL51:
 538 0000 70B5     		push	{r4, r5, r6, lr}
 539              		.cfi_def_cfa_offset 16
 540              		.cfi_offset 4, -16
 541              		.cfi_offset 5, -12
 542              		.cfi_offset 6, -8
 543              		.cfi_offset 14, -4
 544 0002 0500     		movs	r5, r0
 768:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 545              		.loc 1 768 0
 546 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 547              	.LVL52:
 771:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 548              		.loc 1 771 0
 549 0008 0C49     		ldr	r1, .L30
 550 000a 0B68     		ldr	r3, [r1]
 551              	.LVL53:
 774:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 552              		.loc 1 774 0
 553 000c 7F26     		movs	r6, #127
 554 000e B343     		bics	r3, r6
 555              	.LVL54:
 787:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN | CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 556              		.loc 1 787 0
 557 0010 0B4A     		ldr	r2, .L30+4
 558 0012 1478     		ldrb	r4, [r2]
 559 0014 2D19     		adds	r5, r5, r4
 560              	.LVL55:
 561 0016 6A7A     		ldrb	r2, [r5, #9]
 562 0018 1343     		orrs	r3, r2
 563              	.LVL56:
 791:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CyExitCriticalSection(interruptState);
 564              		.loc 1 791 0
 565 001a 0B60     		str	r3, [r1]
 792:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 566              		.loc 1 792 0
 567 001c FFF7FEFF 		bl	CyExitCriticalSection
 568              	.LVL57:
 796:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Get IDACB Value */
 569              		.loc 1 796 0
 570 0020 FFF7FEFF 		bl	CyEnterCriticalSection
 571              	.LVL58:
 798:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 572              		.loc 1 798 0
 573 0024 0749     		ldr	r1, .L30+8
 574 0026 0B68     		ldr	r3, [r1]
 575              	.LVL59:
 801:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 576              		.loc 1 801 0
 577 0028 B343     		bics	r3, r6
 578              	.LVL60:
 804:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 579              		.loc 1 804 0
 580 002a 074A     		ldr	r2, .L30+12
 581 002c 1268     		ldr	r2, [r2]
 582 002e 1419     		adds	r4, r2, r4
 583 0030 627A     		ldrb	r2, [r4, #9]
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 45


 584 0032 1343     		orrs	r3, r2
 585              	.LVL61:
 807:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
 586              		.loc 1 807 0
 587 0034 0B60     		str	r3, [r1]
 808:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
 588              		.loc 1 808 0
 589 0036 FFF7FEFF 		bl	CyExitCriticalSection
 590              	.LVL62:
 849:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 591              		.loc 1 849 0
 592              		@ sp needed
 593 003a 70BD     		pop	{r4, r5, r6, pc}
 594              	.L31:
 595              		.align	2
 596              	.L30:
 597 003c C0010B40 		.word	1074463168
 598 0040 00000000 		.word	CapSense_scanFreqIndex
 599 0044 C4010B40 		.word	1074463172
 600 0048 00000000 		.word	CapSense_curRamSnsPtr
 601              		.cfi_endproc
 602              	.LFE6:
 603              		.size	CapSense_SsCSDSetUpIdacs, .-CapSense_SsCSDSetUpIdacs
 604              		.section	.text.CapSense_SsCSDGetNumberOfConversions,"ax",%progbits
 605              		.align	2
 606              		.global	CapSense_SsCSDGetNumberOfConversions
 607              		.code	16
 608              		.thumb_func
 609              		.type	CapSense_SsCSDGetNumberOfConversions, %function
 610              	CapSense_SsCSDGetNumberOfConversions:
 611              	.LFB7:
 873:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 conversionsNum;
 612              		.loc 1 873 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 0
 615              		@ frame_needed = 0, uses_anonymous_args = 0
 616              	.LVL63:
 617 0000 10B5     		push	{r4, lr}
 618              		.cfi_def_cfa_offset 8
 619              		.cfi_offset 4, -8
 620              		.cfi_offset 14, -4
 621 0002 0300     		movs	r3, r0
 622 0004 1400     		movs	r4, r2
 880:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 623              		.loc 1 880 0
 624 0006 0120     		movs	r0, #1
 625              	.LVL64:
 626 0008 8840     		lsls	r0, r0, r1
 627 000a 0138     		subs	r0, r0, #1
 628              	.LVL65:
 909:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 629              		.loc 1 909 0
 630 000c 002B     		cmp	r3, #0
 631 000e 02D0     		beq	.L33
 911:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 632              		.loc 1 911 0
 633 0010 1900     		movs	r1, r3
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 46


 634              	.LVL66:
 635 0012 FFF7FEFF 		bl	__aeabi_uidiv
 636              	.LVL67:
 637              	.L33:
 917:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 638              		.loc 1 917 0
 639 0016 053C     		subs	r4, r4, #5
 640              	.LVL68:
 641 0018 012C     		cmp	r4, #1
 642 001a 00D8     		bhi	.L34
 922:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 break;
 643              		.loc 1 922 0
 644 001c 4008     		lsrs	r0, r0, #1
 645              	.LVL69:
 646              	.L34:
 932:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 647              		.loc 1 932 0
 648 001e 0028     		cmp	r0, #0
 649 0020 00D1     		bne	.L36
 650 0022 0130     		adds	r0, r0, #1
 651              	.LVL70:
 652              	.L36:
 933:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 653              		.loc 1 933 0 discriminator 4
 654              		@ sp needed
 655              	.LVL71:
 656 0024 10BD     		pop	{r4, pc}
 657              		.cfi_endproc
 658              	.LFE7:
 659              		.size	CapSense_SsCSDGetNumberOfConversions, .-CapSense_SsCSDGetNumberOfConversions
 660 0026 C046     		.section	.text.CapSense_SsCSDConfigClock,"ax",%progbits
 661              		.align	2
 662              		.global	CapSense_SsCSDConfigClock
 663              		.code	16
 664              		.thumb_func
 665              		.type	CapSense_SsCSDConfigClock, %function
 666              	CapSense_SsCSDConfigClock:
 667              	.LFB8:
 949:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 snsClkDivider;
 668              		.loc 1 949 0
 669              		.cfi_startproc
 670              		@ args = 0, pretend = 0, frame = 0
 671              		@ frame_needed = 0, uses_anonymous_args = 0
 672 0000 10B5     		push	{r4, lr}
 673              		.cfi_def_cfa_offset 8
 674              		.cfi_offset 4, -8
 675              		.cfi_offset 14, -4
 955:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 676              		.loc 1 955 0
 677 0002 0D4B     		ldr	r3, .L43
 678 0004 1B78     		ldrb	r3, [r3]
 954:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2WdgtRam;
 679              		.loc 1 954 0
 680 0006 2C22     		movs	r2, #44
 681 0008 5343     		muls	r3, r2
 682 000a 0C4A     		ldr	r2, .L43+4
 683 000c D318     		adds	r3, r2, r3
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 47


 684 000e 5B68     		ldr	r3, [r3, #4]
 685              	.LVL72:
 972:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 686              		.loc 1 972 0
 687 0010 5989     		ldrh	r1, [r3, #10]
 688              	.LVL73:
 988:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 689              		.loc 1 988 0
 690 0012 1B7B     		ldrb	r3, [r3, #12]
 691              	.LVL74:
 992:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 692              		.loc 1 992 0
 693 0014 1804     		lsls	r0, r3, #16
 694              	.LVL75:
 995:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             (CapSense_CLK_SOURCE_PRS12 == snsClkSrc))
 695              		.loc 1 995 0
 696 0016 5A1F     		subs	r2, r3, #5
 697 0018 012A     		cmp	r2, #1
 698 001a 02D8     		bhi	.L39
 998:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 699              		.loc 1 998 0
 700 001c 8022     		movs	r2, #128
 701 001e 9204     		lsls	r2, r2, #18
 702 0020 1043     		orrs	r0, r2
 703              	.LVL76:
 704              	.L39:
1007:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 705              		.loc 1 1007 0
 706 0022 053B     		subs	r3, r3, #5
 707              	.LVL77:
 708 0024 DBB2     		uxtb	r3, r3
 709              	.LVL78:
 710 0026 012B     		cmp	r3, #1
 711 0028 02D8     		bhi	.L40
1012:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (snsClkDivider == 0u)
 712              		.loc 1 1012 0
 713 002a 4908     		lsrs	r1, r1, #1
 714              	.LVL79:
1013:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 715              		.loc 1 1013 0
 716 002c 00D1     		bne	.L40
1015:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 717              		.loc 1 1015 0
 718 002e 0131     		adds	r1, r1, #1
 719              	.LVL80:
 720              	.L40:
1025:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 721              		.loc 1 1025 0
 722 0030 FFF7FEFF 		bl	CapSense_SsCSDSetModeSnsClockDivider
 723              	.LVL81:
1026:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 724              		.loc 1 1026 0
 725              		@ sp needed
 726 0034 10BD     		pop	{r4, pc}
 727              	.L44:
 728 0036 C046     		.align	2
 729              	.L43:
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 48


 730 0038 00000000 		.word	CapSense_widgetIndex
 731 003c 00000000 		.word	CapSense_dsFlash
 732              		.cfi_endproc
 733              	.LFE8:
 734              		.size	CapSense_SsCSDConfigClock, .-CapSense_SsCSDConfigClock
 735              		.section	.text.CapSense_SsCSDCalculateScanDuration,"ax",%progbits
 736              		.align	2
 737              		.global	CapSense_SsCSDCalculateScanDuration
 738              		.code	16
 739              		.thumb_func
 740              		.type	CapSense_SsCSDCalculateScanDuration, %function
 741              	CapSense_SsCSDCalculateScanDuration:
 742              	.LFB9:
1050:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 743              		.loc 1 1050 0
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 0
 746              		@ frame_needed = 0, uses_anonymous_args = 0
 747              	.LVL82:
 748 0000 10B5     		push	{r4, lr}
 749              		.cfi_def_cfa_offset 8
 750              		.cfi_offset 4, -8
 751              		.cfi_offset 14, -4
 752 0002 0300     		movs	r3, r0
1070:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 753              		.loc 1 1070 0
 754 0004 4089     		ldrh	r0, [r0, #10]
 755              	.LVL83:
1074:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 756              		.loc 1 1074 0
 757 0006 1988     		ldrh	r1, [r3]
 758 0008 1A7B     		ldrb	r2, [r3, #12]
 759 000a FFF7FEFF 		bl	CapSense_SsCSDGetNumberOfConversions
 760              	.LVL84:
1077:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 761              		.loc 1 1077 0
 762 000e 0004     		lsls	r0, r0, #16
 763              	.LVL85:
 764 0010 000C     		lsrs	r0, r0, #16
 765 0012 014B     		ldr	r3, .L46
 766 0014 1860     		str	r0, [r3]
1082:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 767              		.loc 1 1082 0
 768              		@ sp needed
 769 0016 10BD     		pop	{r4, pc}
 770              	.L47:
 771              		.align	2
 772              	.L46:
 773 0018 14030B40 		.word	1074463508
 774              		.cfi_endproc
 775              	.LFE9:
 776              		.size	CapSense_SsCSDCalculateScanDuration, .-CapSense_SsCSDCalculateScanDuration
 777              		.section	.text.CapSense_SsCSDStartSample,"ax",%progbits
 778              		.align	2
 779              		.global	CapSense_SsCSDStartSample
 780              		.code	16
 781              		.thumb_func
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 49


 782              		.type	CapSense_SsCSDStartSample, %function
 783              	CapSense_SsCSDStartSample:
 784              	.LFB12:
1264:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE != CapSense_CSDV2)
 785              		.loc 1 1264 0
 786              		.cfi_startproc
 787              		@ args = 0, pretend = 0, frame = 0
 788              		@ frame_needed = 0, uses_anonymous_args = 0
 789 0000 10B5     		push	{r4, lr}
 790              		.cfi_def_cfa_offset 8
 791              		.cfi_offset 4, -8
 792              		.cfi_offset 14, -4
1277:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 793              		.loc 1 1277 0
 794 0002 0A20     		movs	r0, #10
 795 0004 FFF7FEFF 		bl	CyIntDisable
 796              	.LVL86:
1280:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 797              		.loc 1 1280 0
 798 0008 0122     		movs	r2, #1
 799 000a 2D4B     		ldr	r3, .L56
 800 000c 1A60     		str	r2, [r3]
 801              	.LBB6:
 802              	.LBB7:
1874:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1875:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
1876:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_SsCSDCalibrateOneSensor
1877:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
1878:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1879:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
1880:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Computes the Modulator IDAC value for one sensor that provides raw signal at
1881:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  the specified level.
1882:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1883:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
1884:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   The function performs the following tasks:
1885:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   1. initializes The Compensation IDAC to zero
1886:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   2. Enables the calibrated sensor
1887:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   3. Performs eight iteration steps to get the target = rawLevel
1888:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *      setting and resetting the IDAC value bits beginning from the
1889:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *      MSB bit to an MSB bit.
1890:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   4. Disables the calibrated sensor
1891:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   5. Checks if the IDAC is in the correct range
1892:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   6. Updates the maximum IDAC value in the widget
1893:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   7. Stores the temporary ModIDAC8 value (in the single-IDAC mode).
1894:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1895:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  The CSD block should be initialized with the CapSense_SsCSDInitialize()
1896:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  API before using this function.
1897:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1898:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param  rawLevel
1899:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *   The raw data level which should be reached during the calibration procedure.
1900:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param  ptrIdac  The pointer to IDAC.
1901:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param  iDAC8Max The pointer to the maximum IDAC value in the widget.
1902:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
1903:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \return Returns the status of the operation:
1904:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  - Zero     - All the sensors in the widget are calibrated successfully.
1905:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  - Non-Zero - Calibration failed for any sensor in the widget.
1906:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 50


1907:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
1908:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     static cystatus CapSense_SsCSDCalibrateOneSensor(uint32 rawLevel,
1909:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                            uint8 *ptrIdac,
1910:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                            uint8 *iDAC8Max)
1911:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
1912:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         cystatus calibrateStatus;
1913:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 calMask = ((uint32)CapSense_CAL_MIDDLE_BIT << 1uL);
1914:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 watchdogCounter;
1915:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1916:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint16 rawData0 = 0u;
1917:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1918:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint16 rawData1 = 0u;
1919:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint16 rawData2 = 0u;
1920:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
1921:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1922:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Declare and initialize ptr to widget and sensor structures to appropriate address */
1923:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1924:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                         CapSense_dsFlash.wdgtArray[CapSense_widgetI
1925:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1926:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ptrIdac[0u] = 0u;
1927:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1928:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             ptrIdac[CapSense_FREQ_CHANNEL_1] = 0u;
1929:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             ptrIdac[CapSense_FREQ_CHANNEL_2] = 0u;
1930:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
1931:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1932:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Setup the calibrated sensor of the widget (Set IDAC = calMask and connect the sensor) */
1933:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_CSDSetupWidgetExt((uint32)CapSense_widgetIndex, (uint32)CapSense_sensorIndex);
1934:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1935:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1936:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set single IDAC mode */
1937:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsCSDSetSingleIdacMode();
1938:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
1939:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1940:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /*
1941:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****          * Perform the iteration steps to get target = rawLevel.
1942:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****          * The number of iteration steps is defined by calMask and depend on IDAC resolution.
1943:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****          */
1944:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         do
1945:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
1946:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Decrease IDAC until rawData reaches rawLevel */
1947:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (rawData0 < rawLevel)
1948:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1949:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Reset bit for null channel (decrease IDAC -> will increase rawData) */
1950:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 ptrIdac[0u] &= (uint8)(~calMask);
1951:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
1952:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1953:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (rawData1 < rawLevel)
1954:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1955:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrIdac[CapSense_FREQ_CHANNEL_1] &= (uint8)(~calMask);
1956:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1957:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (rawData2 < rawLevel)
1958:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
1959:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrIdac[CapSense_FREQ_CHANNEL_2] &= (uint8)(~calMask);
1960:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
1961:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
1962:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1963:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /*
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 51


1964:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             * Shift calMask to set or reset next bit.
1965:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             * Perform scan even if callibration mask is equal to zero.
1966:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             * It gives raw counts for the last changed IDAC.
1967:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             */
1968:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             calMask >>= 1u;
1969:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1970:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set bit for null channel */
1971:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             ptrIdac[0u] |= (uint8)calMask;
1972:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1973:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 ptrIdac[CapSense_FREQ_CHANNEL_1] |= (uint8)calMask;
1974:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 ptrIdac[CapSense_FREQ_CHANNEL_2] |= (uint8)calMask;
1975:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
1976:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1977:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Update IDAC */
1978:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsCSDSetUpIdacs(ptrWdgt);
1979:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1980:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Scan sensor */
1981:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDScanExt();
1982:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1983:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Initialize Watchdog Counter with time interval which is enough to charge 100 nF capa
1984:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             watchdogCounter = CapSense_CSD_CALIBR_WATCHDOG_CYCLES_NUM;
1985:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             while (((CapSense_dsRam.status & CapSense_SW_STS_BUSY) != 0u) &&
1986:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                    (0u != watchdogCounter))
1987:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
1988:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Wait until scan complete and decrement Watchdog Counter to prevent unending loop
1989:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 watchdogCounter--;
1990:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
1991:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
1992:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Read rawData */
1993:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             rawData0 = CapSense_curRamSnsPtr->raw[0u];
1994:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if(CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1995:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 rawData1 = CapSense_curRamSnsPtr->raw[CapSense_FREQ_CHANNEL_1];
1996:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 rawData2 = CapSense_curRamSnsPtr->raw[CapSense_FREQ_CHANNEL_2];
1997:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
1998:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
1999:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         while (calMask > 0u);
2000:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2001:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
2002:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsCSDDisconnectSnsExt((uint32)CapSense_widgetIndex, (uint32)CapSense_sensorInd
2003:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
2004:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* initialize pointer to sensor IO structure */
2005:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
2006:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                             CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2Sn
2007:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                             + CapSense_sensorIndex;
2008:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2009:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Disable sensor */
2010:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_CSDDisconnectSns(CapSense_curSnsIOPtr);
2011:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
2012:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2013:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set flag about disconnecting the electrode */
2014:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_eleCsdDisconnectFlag = 0u;
2015:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2016:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2017:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Restore IDAC configuration to default state */
2018:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsCSDRestoreIdacMode();
2019:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
2020:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 52


2021:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Check if IDAC is in correct range */
2022:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         calibrateStatus = CapSense_SsCSDCalibrateCheck(ptrWdgt, rawLevel, (uint32)rawData0);
2023:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
2024:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             calibrateStatus |= CapSense_SsCSDCalibrateCheck(ptrWdgt, rawLevel, (uint32)rawData1);
2025:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             calibrateStatus |= CapSense_SsCSDCalibrateCheck(ptrWdgt, rawLevel, (uint32)rawData2);
2026:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
2027:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2028:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /*
2029:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****          * Update maximum IDAC value in widget. iDAC8Max variable will contain
2030:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****          * maximum IDAC value after all the sensors in a widget have been scanned.
2031:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****          */
2032:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (*iDAC8Max < ptrIdac[0u])
2033:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2034:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             *iDAC8Max = ptrIdac[0u];
2035:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
2036:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Stores IDAC and raw count that corresponds to a sensor with maximum Cp within a 
2037:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_calibratedIdac = *iDAC8Max;
2038:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_calibratedRawcount = rawData0;
2039:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) */
2040:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2041:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
2042:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (iDAC8Max[CapSense_FREQ_CHANNEL_1] < ptrIdac[CapSense_FREQ_CHANNEL_1])
2043:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2044:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 iDAC8Max[CapSense_FREQ_CHANNEL_1] = ptrIdac[CapSense_FREQ_CHANNEL_1];
2045:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2046:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if (iDAC8Max[CapSense_FREQ_CHANNEL_2] < ptrIdac[CapSense_FREQ_CHANNEL_2])
2047:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2048:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 iDAC8Max[CapSense_FREQ_CHANNEL_2] = ptrIdac[CapSense_FREQ_CHANNEL_2];
2049:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2050:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
2051:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2052:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2053:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /*
2054:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              * Store temporary ModIDAC8 value (in single-IDAC mode) in idacComp variable.
2055:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              * We need this value to calculate idacMod value the in the dual-IDAC mode.
2056:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              */
2057:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_curRamSnsPtr->idacComp[0u] = ptrIdac[0u];
2058:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
2059:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_1] = ptrIdac[CapSense_FREQ_CH
2060:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_2] = ptrIdac[CapSense_FREQ_CH
2061:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
2062:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
2063:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2064:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         return (calibrateStatus);
2065:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
2066:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2067:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2068:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
2069:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_CSDCalibrateWidget
2070:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
2071:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2072:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
2073:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Executes the IDAC calibration for all the sensors in the widget specified in
2074:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  the input.
2075:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2076:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
2077:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Performs a successive approximation search algorithm to find appropriate
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 53


2078:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  IDAC values for sensors in the specified widget that provides the raw
2079:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  count to the level specified by the target parameter.
2080:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2081:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Calibration is always performed in the single IDAC mode and if the dual
2082:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  IDAC mode (Enable compensation IDAC is enabled) is configured, the IDAC
2083:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  values are re-calculated to match the raw count target. If a widget
2084:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  consists of two or more elements (buttons, slider segments, etc.), then
2085:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  calibration is performed by the element with the highest sensor
2086:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  capacitance.
2087:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2088:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Calibration fails if the achieved raw count is outside of the +/-10%
2089:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  range of the target.
2090:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2091:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  This function is available when the CSD Enable IDAC auto-calibration
2092:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  parameter is enabled or the  SmartSense auto-tuning mode is configured.
2093:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2094:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param widgetId
2095:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Specifies the ID number of the CSD widget to calibrate its raw count.
2096:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  A macro for the widget ID can be found in the
2097:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  CapSense Configuration header file defined as
2098:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  CapSense_<WidgetName>_WDGT_ID.
2099:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2100:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \param target
2101:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Specifies the calibration target in percentages of the maximum raw count.
2102:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2103:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \return
2104:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  Returns the status of the specified widget calibration:
2105:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    - CYRET_SUCCESS - The operation is successfully completed.
2106:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    - CYRET_BAD_PARAM - The input parameter is invalid.
2107:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *    - CYRET_BAD_DATA - The calibration failed and the Component may not operate as expected.
2108:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2109:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
2110:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     cystatus CapSense_CSDCalibrateWidget(uint32 widgetId, uint32 target)
2111:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
2112:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 rawLevel;
2113:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
2114:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2115:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
2116:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2117:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 uint8 maxIdac = 1u;
2118:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 uint16 maxRaw = 1u;
2119:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /*(CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2120:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) */
2121:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2122:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Declare and initialize ptr to widget and sensor structures to appropriate address */
2123:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
2124:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2125:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2126:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (1u == CapSense_NUM_SCAN_FREQS)
2127:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint8 iDAC8Max[CapSense_NUM_SCAN_FREQS] = {1u};
2128:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
2129:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint8 iDAC8Max[CapSense_NUM_SCAN_FREQS] = {1u, 1u, 1u};
2130:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (1u == CapSense_NUM_SCAN_FREQS) */
2131:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2132:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint8 *ptrIdac;
2133:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2134:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Calibrate maximum level for given resolution */
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 54


2135:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         rawLevel = (0x00000001Lu << ptrWdgt->resolution) - 1u;
2136:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2137:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Calculate percentage of maximum value */
2138:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         rawLevel = (rawLevel * target) / CapSense_PERCENTAGE_100;
2139:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2140:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Update CapSense_widgetIndex */
2141:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_widgetIndex = (uint8)widgetId;
2142:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2143:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Setup ISR handler to single-sensor scan function */
2144:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_ISR_StartEx(&CapSense_CSDPostSingleScan);
2145:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2146:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Init pointer to Modulator IDAC */
2147:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         ptrIdac = &ptrWdgt->idacMod[0u];
2148:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2149:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
2150:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_calibratedIdac = 1u;
2151:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_calibratedRawcount = 1u;
2152:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) */
2153:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2154:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Go through all the sensors (or columns of touchpad) of widget to calibrate them */
2155:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         for (CapSense_sensorIndex = 0u;
2156:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              CapSense_sensorIndex < CapSense_dsFlash.wdgtArray[widgetId].numCols;
2157:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              CapSense_sensorIndex++)
2158:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2159:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Calibrate current sensor in widget */
2160:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             calibrateStatus |= CapSense_SsCSDCalibrateOneSensor(rawLevel, ptrIdac, iDAC8Max);
2161:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2162:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2163:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Normalize idacMod and idacComp values */
2164:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2165:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Calculate Modulator value: idacMod = (iDAC8Max + 1)/2 */
2166:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             ptrIdac[0u] = (iDAC8Max[0u] + 1u) >> 1u;
2167:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
2168:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 ptrIdac[CapSense_FREQ_CHANNEL_1] =  (iDAC8Max[CapSense_FREQ_CHANNEL_1] + 1u) >> 1u;
2169:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 ptrIdac[CapSense_FREQ_CHANNEL_2] = (iDAC8Max[CapSense_FREQ_CHANNEL_2] + 1u) >> 1u;
2170:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
2171:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2172:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Go through all columns of touchpad (or all the sensors in button) to normalize them 
2173:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             for (CapSense_sensorIndex = 0u;
2174:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                  CapSense_sensorIndex < CapSense_dsFlash.wdgtArray[widgetId].numCols;
2175:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                  CapSense_sensorIndex++)
2176:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2177:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_curRamSnsPtr = (CapSense_RAM_SNS_STRUCT *)
2178:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsRam + CapSense_sensorIndex;
2179:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Calculate Compensation IDAC value: idacComp(i) = (iDAC8(i) - idacMod) * Target *
2180:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 if (CapSense_curRamSnsPtr->idacComp[0u] >= ptrIdac[0u])
2181:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2182:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CapSense_curRamSnsPtr->idacComp[0u] -= ptrIdac[0u];
2183:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #if ((CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN) ||\
2184:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          (CapSense_DISABLE == CapSense_CSDV2))
2185:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         CapSense_curRamSnsPtr->idacComp[0u] =
2186:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             (uint8)((((target * CapSense_curRamSnsPtr->idacComp[0u]) + CapSense_PER
2187:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             CapSense_PERCENTAGE_100);
2188:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #endif /* ((CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN) ||\
2189:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                (CapSense_DISABLE == CapSense_CSDV2)) */
2190:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2191:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 else
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 55


2192:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2193:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CapSense_curRamSnsPtr->idacComp[0u] = 0u;
2194:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2195:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
2196:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     /* Do same for first frequency channel */
2197:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if (CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_1] >= ptrIdac[CapSens
2198:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2199:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_1] -= ptrIdac[CapSens
2200:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         #if ((CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN) ||\
2201:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                              (CapSense_DISABLE == CapSense_CSDV2))
2202:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_1] =
2203:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 (uint8)((((target * CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_C
2204:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 CapSense_PERCENTAGE_100) - 1u) / CapSense_PERCENTAGE_100);
2205:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         #endif /* ((CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN) ||\
2206:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                    (CapSense_DISABLE == CapSense_CSDV2)) */
2207:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2208:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     else
2209:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2210:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                        CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_1] = 0u;
2211:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2212:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     /* Do same for second frequency channel */
2213:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     if (CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_2] >= ptrIdac[CapSens
2214:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2215:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_2] -= ptrIdac[CapSens
2216:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         #if ((CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN) ||\
2217:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                              (CapSense_DISABLE == CapSense_CSDV2))
2218:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_2] =
2219:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 (uint8)((((target * CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_C
2220:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 CapSense_PERCENTAGE_100) - 1u) / CapSense_PERCENTAGE_100);
2221:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         #endif /* ((CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN) ||\
2222:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                    (CapSense_DISABLE == CapSense_CSDV2)) */
2223:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2224:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     else
2225:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2226:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_2] = 0u;
2227:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2228:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
2229:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2230:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
2231:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Normalize widget for single-IDAC mode*/
2232:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             ptrIdac[0u] = iDAC8Max[0u];
2233:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
2234:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 ptrIdac[CapSense_FREQ_CHANNEL_1] = iDAC8Max[CapSense_FREQ_CHANNEL_1];
2235:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 ptrIdac[CapSense_FREQ_CHANNEL_2] = iDAC8Max[CapSense_FREQ_CHANNEL_2];
2236:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
2237:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
2238:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2239:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2240:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[widget
2241:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[w
2242:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2243:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Init pointer to Modulator IDAC for columns */
2244:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 ptrIdac = &ptrWdgt->rowIdacMod[0u];
2245:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2246:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Reset the maximum value for columns */
2247:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 iDAC8Max[0u] = 1u;
2248:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 56


2249:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     iDAC8Max[CapSense_FREQ_CHANNEL_1] = 1u;
2250:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     iDAC8Max[CapSense_FREQ_CHANNEL_2] = 1u;
2251:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
2252:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2253:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
2254:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     maxIdac = CapSense_calibratedIdac;
2255:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     maxRaw = CapSense_calibratedRawcount;
2256:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CapSense_calibratedIdac = 1u;
2257:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CapSense_calibratedRawcount = 1u;
2258:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) */
2259:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2260:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Go through all columns of touchpad to calibrate them */
2261:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 for (CapSense_sensorIndex = CapSense_dsFlash.wdgtArray[widgetId].numCols;
2262:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                      CapSense_sensorIndex < (uint8)CapSense_dsFlash.wdgtArray[widgetId].totalNumSns
2263:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                      CapSense_sensorIndex++)
2264:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
2265:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     /* Calibrate current sensor in widget */
2266:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     calibrateStatus |= CapSense_SsCSDCalibrateOneSensor(rawLevel, ptrIdac, iDAC8Max
2267:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
2268:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2269:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
2270:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CapSense_calibratedIdacRow = CapSense_calibratedIdac;
2271:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CapSense_calibratedRawcountRow = CapSense_calibratedRawcount;
2272:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CapSense_calibratedIdac = maxIdac;
2273:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     CapSense_calibratedRawcount = maxRaw;
2274:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) */
2275:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2276:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Normalize idacMod and idacComp values */
2277:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2278:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     /* Calculate Modulator value: idacMod = (iDAC8Max + 1)/2 */
2279:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrIdac[0u] = (iDAC8Max[0u] + 1u) >> 1u;
2280:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
2281:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrIdac[CapSense_FREQ_CHANNEL_1] =  (iDAC8Max[CapSense_FREQ_CHANNEL_1] + 1u
2282:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrIdac[CapSense_FREQ_CHANNEL_2] = (iDAC8Max[CapSense_FREQ_CHANNEL_2] + 1u)
2283:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
2284:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2285:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     /* Go through all columns of touchpad to normalize them */
2286:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     for (CapSense_sensorIndex = CapSense_dsFlash.wdgtArray[widgetId].numCols;
2287:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          CapSense_sensorIndex < (uint8)CapSense_dsFlash.wdgtArray[widgetId].totalNu
2288:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          CapSense_sensorIndex++)
2289:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     {
2290:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         CapSense_curRamSnsPtr = (CapSense_RAM_SNS_STRUCT *)
2291:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                  CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsRam + CapSense_sensorI
2292:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2293:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         /* Calculate Compensation IDAC value: idacComp(i) = (iDAC8(i) - idacMod) * 
2294:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         if (CapSense_curRamSnsPtr->idacComp[0u] >= ptrIdac[0u])
2295:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         {
2296:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             CapSense_curRamSnsPtr->idacComp[0u] -= ptrIdac[0u];
2297:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             #if ((CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN) ||\
2298:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                  (CapSense_DISABLE == CapSense_CSDV2))
2299:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 CapSense_curRamSnsPtr->idacComp[0u] =
2300:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     (uint8)((((target * CapSense_curRamSnsPtr->idacComp[0u]) +
2301:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                         CapSense_PERCENTAGE_100) - 1u) / CapSense_PERCENTAGE_100);
2302:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             #endif /* ((CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN) ||\
2303:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                        (CapSense_DISABLE == CapSense_CSDV2)) */
2304:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         }
2305:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 57


2306:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             /* Do same for first frequency channel */
2307:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             if (CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_1] >= ptrIdac
2308:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             {
2309:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_1] -= ptrIdac
2310:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 #if ((CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN) ||\
2311:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                      (CapSense_DISABLE == CapSense_CSDV2))
2312:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_1] =
2313:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                         (uint8)((((target * CapSense_curRamSnsPtr->idacComp[CapSens
2314:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                         CapSense_PERCENTAGE_100) - 1u) / CapSense_PERCENTAGE_100);
2315:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 #endif /* ((CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN)
2316:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                            (CapSense_DISABLE == CapSense_CSDV2)) */
2317:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             }
2318:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             /* Do same for second frequency channel */
2319:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             if (CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_2] >= ptrIdac
2320:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             {
2321:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_2] -= ptrIdac
2322:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 #if ((CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN) ||\
2323:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                      (CapSense_DISABLE == CapSense_CSDV2))
2324:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_2] =
2325:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                         (uint8)((((target * CapSense_curRamSnsPtr->idacComp[CapSens
2326:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                         CapSense_PERCENTAGE_100) - 1u) / CapSense_PERCENTAGE_100);
2327:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                 #endif /* ((CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN)
2328:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                            (CapSense_DISABLE == CapSense_CSDV2)) */
2329:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             }
2330:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
2331:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     }
2332:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #else
2333:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     /* Normalize widget for single-IDAC mode*/
2334:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     ptrIdac[0u] = iDAC8Max[0u];
2335:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
2336:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrIdac[CapSense_FREQ_CHANNEL_1] = iDAC8Max[CapSense_FREQ_CHANNEL_1];
2337:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         ptrIdac[CapSense_FREQ_CHANNEL_2] = iDAC8Max[CapSense_FREQ_CHANNEL_2];
2338:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
2339:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
2340:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2341:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2342:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2343:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_sensorIndex = 0u;
2344:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2345:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         return calibrateStatus;
2346:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
2347:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* ((CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) || \
2348:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN)) */
2349:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2350:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2351:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
2352:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /*******************************************************************************
2353:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * Function Name: CapSense_SsCSDClockRestart
2354:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     ****************************************************************************//**
2355:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2356:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \brief
2357:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  This function restarts the clocks.
2358:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2359:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     * \details
2360:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  The function performs following:
2361:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  1) Stops, sets dividers and starts ModClk clock;
2362:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  2) Stops and starts SnsClk clock;
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 58


2363:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *  3) Scan one cycle to reset the flip-flop for Direct clock mode.
2364:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *
2365:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     *******************************************************************************/
2366:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CY_INLINE static void CapSense_SsCSDClockRestart(void)
2367:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
2368:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Stop clocks, set dividers, and start clock to align clock phase */
2369:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_SsSetModClkClockDivider((uint32)CapSense_dsRam.modCsdClk);
2370:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2371:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
2372:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Stop sense clock clock   */
2373:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
2374:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          ((uint32)CapSense_SnsClk__DIV_ID <<
2375:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          CapSense_SNSCLK_CMD_DIV_SHIFT)|
2376:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          ((uint32)CapSense_SNSCLK_CMD_DISABLE_MASK));
2377:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2378:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Check whether previous sense clock start command has finished. */
2379:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             while(0u != (CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) & CapSense_SNSCLK_CMD_ENABLE_MASK))
2380:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2381:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Wait until previous sense clock start command has finished. */
2382:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2383:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2384:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Start sense clock aligned to previously started modulator clock. */
2385:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
2386:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT
2387:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                           ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_SNSCLK_CMD_PA_DIV_SHIFT) 
2388:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                           CapSense_SNSCLK_CMD_ENABLE_MASK));
2389:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
2390:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Clear bit to disable SnsClk clock. */
2391:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
2392:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) &
2393:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          (uint32)(~(uint32)CapSense_SnsClk__ENABLE_MASK));
2394:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2395:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set bit to enable SnsClk clock. */
2396:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
2397:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) |
2398:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                         CapSense_SnsClk__ENABLE_MASK);
2399:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
2400:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2401:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CLK_SOURCE_DIRECT == CapSense_CSD_SNS_CLK_SOURCE)
2402:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Scan one cycle to reset the flip-flop for Direct clock mode */
2403:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CyIntDisable(CapSense_ISR_NUMBER);
2404:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_COUNTER_PTR, CapSense_ONE_CYCLE);
2405:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2406:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             while(0u != (CY_GET_REG32(CapSense_COUNTER_PTR) & CapSense_RESOLUTION_16_BITS))
2407:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
2408:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Wait until scanning is complete */
2409:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
2410:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
2411:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CyIntClearPending(CapSense_ISR_NUMBER);
2412:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CLK_SOURCE_DIRECT == CapSense_CSD_SNS_CLK_SOURCE) */
2413:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
2414:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* (CapSense_DISABLE == CapSense_CSDV2) */
2415:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2416:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2417:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
2418:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDCmodPrecharge
2419:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 59


2420:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2421:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
2422:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function initializes the Cmod charging to Vref.
2423:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2424:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
2425:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  For Third-generation HW block:
2426:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The function initializes the Cmod charging to Vref.
2427:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Then it waits the even when Cmod is completely charged
2428:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  to Vref to have stable raw counts. Software Watchdog Counter is implemented to
2429:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  prevent the project hanging.
2430:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2431:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  For Fourth-generation HW block:
2432:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Coarse initialization for CMOD and Cch.
2433:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The coarse initialization is performed by HSCOMP.
2434:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The HSCOMP monitors the Cmod voltage via Cmod sense path
2435:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  and charges the Cmod using HCAV switch via CSDBUS-A, AMUXBUS-A
2436:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  and static connection of Cmod to AMUXBUS-A.
2437:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2438:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
2439:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** CY_INLINE static void CapSense_SsCSDCmodPrecharge(void)
2440:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
2441:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
2442:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2443:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Fourth-generation HW block section */
2444:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2445:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 watchdogCounter;
2446:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
2447:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
2448:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             uint32 tmpRegValue;
2449:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif
2450:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2451:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_CSDCMP_PTR, CapSense_CSD_CSDCMP_INIT);
 803              		.loc 1 2451 0
 804 000e 0023     		movs	r3, #0
 805 0010 2C49     		ldr	r1, .L56+4
 806 0012 0B60     		str	r3, [r1]
2452:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_FW_MOD_SEL_PTR,  CapSense_CSD_SW_FW_MOD_SEL_INIT);
 807              		.loc 1 2452 0
 808 0014 2C49     		ldr	r1, .L56+8
 809 0016 0B60     		str	r3, [r1]
2453:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR, CapSense_CSD_SW_FW_TANK_SEL_INIT);
 810              		.loc 1 2453 0
 811 0018 2C49     		ldr	r1, .L56+12
 812 001a 0B60     		str	r3, [r1]
2454:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR,  CapSense_CSD_SW_SHIELD_SEL_INIT);
 813              		.loc 1 2454 0
 814 001c 0620     		movs	r0, #6
 815 001e 2C49     		ldr	r1, .L56+16
 816 0020 0860     		str	r0, [r1]
2455:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
2456:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /*
2457:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              * Connect CMOD to (sense path) to HSCOMP: HMPM or HMPS or HMPT switches depend on Cmod
2458:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              * Connect AMUXBUS-B to HSCMP positive input
2459:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              */
2460:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR, CapSense_SW_HS_P_SEL_COARSE);
2461:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2462:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if(0u != CapSense_CSD_SHIELD_TANK_EN)
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 60


2463:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Connect CTANK to AMUXBUS-A */
2464:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpRegValue = CY_GET_REG32(CapSense_CSH_HSIOM_PTR);
2465:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpRegValue &= (uint32)(~(uint32)CapSense_CSH_HSIOM_MASK);
2466:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 tmpRegValue |= (CapSense_HSIOM_SEL_AMUXA << CapSense_CSH_HSIOM_SHIFT);
2467:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_CSH_HSIOM_PTR, tmpRegValue);
2468:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (0u != CapSense_CSD_SHIELD_TANK_EN) */
2469:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
2470:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect CMOD to (sense path) to HSCOMP: HMPM or HMPS or HMPT switches depend on Cmod
2471:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR, CapSense_SW_HS_P_SEL_COARSE);
 817              		.loc 1 2471 0
 818 0022 FA30     		adds	r0, r0, #250
 819 0024 2B49     		ldr	r1, .L56+20
 820 0026 0860     		str	r0, [r1]
2472:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
2473:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2474:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_RES_PTR, CapSense_CSD_SW_RES_INIT);
 821              		.loc 1 2474 0
 822 0028 2B49     		ldr	r1, .L56+24
 823 002a 0A60     		str	r2, [r1]
2475:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2476:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Clear all interrupt pending requests */
2477:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_ALL_MASK);
 824              		.loc 1 2477 0
 825 002c 8321     		movs	r1, #131
 826 002e 4900     		lsls	r1, r1, #1
 827 0030 2A4A     		ldr	r2, .L56+28
 828 0032 1160     		str	r1, [r2]
2478:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2479:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_INTR_MASK_PTR, CapSense_CLEAR_MASK);
 829              		.loc 1 2479 0
 830 0034 2A4A     		ldr	r2, .L56+32
 831 0036 1360     		str	r3, [r2]
2480:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2481:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Start SEQUENCER for coarse initialization for Cmod */
2482:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_SEQ_MODE_MASK |
 832              		.loc 1 2482 0
 833 0038 0322     		movs	r2, #3
 834 003a 2A4B     		ldr	r3, .L56+36
 835 003c 1A60     		str	r2, [r3]
 836              	.LVL87:
2483:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                          CapSense_SEQ_START_START_MASK);
2484:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2485:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Init Watchdog Counter to prevent a hang */
2486:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         watchdogCounter = CapSense_CSD_PRECHARGE_WATCHDOG_CYCLES_NUM;
 837              		.loc 1 2486 0
 838 003e E123     		movs	r3, #225
 839 0040 DB01     		lsls	r3, r3, #7
 840 0042 00E0     		b	.L49
 841              	.LVL88:
 842              	.L51:
2487:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2488:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Wait for INTR.INIT goes high */
2489:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         while((0u == (CY_GET_REG32(CapSense_INTR_PTR) & CapSense_INTR_INIT_MASK)) && (0u != watchdo
2490:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2491:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             watchdogCounter--;
 843              		.loc 1 2491 0
 844 0044 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 61


 845              	.LVL89:
 846              	.L49:
2489:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 847              		.loc 1 2489 0
 848 0046 254A     		ldr	r2, .L56+28
 849 0048 1268     		ldr	r2, [r2]
 850 004a 5207     		lsls	r2, r2, #29
 851 004c 01D4     		bmi	.L50
 852 004e 002B     		cmp	r3, #0
 853 0050 F8D1     		bne	.L51
 854              	.L50:
2492:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2493:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2494:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         if (0u == watchdogCounter)
 855              		.loc 1 2494 0
 856 0052 002B     		cmp	r3, #0
 857 0054 02D1     		bne	.L52
2495:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2496:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Set sequencer to idle state if coarse initialization fails */
2497:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_ABORT_MASK);
 858              		.loc 1 2497 0
 859 0056 0822     		movs	r2, #8
 860 0058 224B     		ldr	r3, .L56+36
 861              	.LVL90:
 862 005a 1A60     		str	r2, [r3]
 863              	.L52:
 864              	.LBE7:
 865              	.LBE6:
 866              	.LBB8:
 867              	.LBB9:
2498:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2499:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2500:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
2501:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2502:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 tmpRegValue;
2503:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 newRegValue;
2504:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 watchdogCounter;
2505:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2506:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Save the current IDAC configuration */
2507:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         tmpRegValue = CY_GET_REG32(CapSense_IDAC_PTR);
2508:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2509:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Wait until Cmod discharges below Vref */
2510:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyDelayCycles(CapSense_CMOD_DISCHARGE_CYCLES);
2511:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2512:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegValue = CapSense_CSD_IDAC_PRECHARGE_CONFIG | (tmpRegValue & ~CapSense_IDAC_MOD_CFG_MA
2513:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2514:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set the IDAC configuration for fast Cmod precharge to Vref */
2515:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_IDAC_PTR, newRegValue);
2516:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2517:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
2518:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CY_GET_REG32(CapSense_CONFIG_PTR) & ~CapSense_CONFIG_
2519:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG) */
2520:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2521:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Init Watchdog Counter to prevent a hang */
2522:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         watchdogCounter = CapSense_CSD_PRECHARGE_WATCHDOG_CYCLES_NUM;
2523:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2524:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Wait until Cmod reaches to Vref */
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 62


2525:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         while((0u == (CY_GET_REG32(CapSense_STATUS_PTR) & CapSense_STATUS_SAMPLE)) && (0u != watchd
2526:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2527:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             watchdogCounter--;
2528:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2529:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2530:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
2531:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_CONFIG_PTR, CY_GET_REG32(CapSense_CONFIG_PTR) | CapSense_CONFIG_P
2532:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG) */
2533:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2534:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Restore the current IDAC configuration */
2535:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_IDAC_PTR, tmpRegValue);
2536:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2537:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable the sense modulator output */
2538:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CONFIG_CSD_
2539:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2540:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyIntEnable(CapSense_ISR_NUMBER);
2541:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2542:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2543:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
2544:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2545:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2546:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** /*******************************************************************************
2547:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * Function Name: CapSense_SsCSDTriggerScan
2548:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** ****************************************************************************//**
2549:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2550:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \brief
2551:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  This function triggers the scanning.
2552:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2553:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** * \details
2554:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  For Third-generation HW block:
2555:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Writes resolution to start the scanning.
2556:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2557:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  For Fourth-generation HW block:
2558:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Trigger the fine initialization (scan some dummy cycles) and start sampling.
2559:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  Fine initialization for CMOD and Start scan.
2560:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  For the fine initialization and sampling, Cmod is static connected to AMUXBUS-A
2561:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  and in every conversion (one cycle of SnsClk), the sensor capacitance is charged
2562:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  from Cmod and discharged to ground using the switches in GPIO cell.
2563:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  The CSDCOMP monitors voltage on Cmod using the sense path and charges Cmod back
2564:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *  to Vref using IDACs by connecting IDAC to CSDBUS-A and then the AMUXBUS-A.
2565:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *
2566:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** *******************************************************************************/
2567:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** CY_INLINE static void CapSense_SsCSDTriggerScan(void)
2568:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** {
2569:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
2570:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2571:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Fourth-generation HW block section */
2572:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2573:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 watchdogCounter;
2574:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2575:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Clear previous interrupts */
2576:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_ALL_MASK);
 868              		.loc 1 2576 0
 869 005c 8322     		movs	r2, #131
 870 005e 5200     		lsls	r2, r2, #1
 871 0060 1E4B     		ldr	r3, .L56+28
 872 0062 1A60     		str	r2, [r3]
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 63


2577:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2578:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Clear pending interrupts  */
2579:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyIntClearPending(CapSense_ISR_NUMBER);
 873              		.loc 1 2579 0
 874 0064 0A20     		movs	r0, #10
 875 0066 FFF7FEFF 		bl	CyIntClearPending
 876              	.LVL91:
2580:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2581:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable CSD interrupt */
2582:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CyIntEnable(CapSense_ISR_NUMBER);
 877              		.loc 1 2582 0
 878 006a 0A20     		movs	r0, #10
 879 006c FFF7FEFF 		bl	CyIntEnable
 880              	.LVL92:
2583:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2584:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2585:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR, CapSense_CSD_SW_HS_P_SEL_SCAN);
 881              		.loc 1 2585 0
 882 0070 0023     		movs	r3, #0
 883 0072 184A     		ldr	r2, .L56+20
 884 0074 1360     		str	r3, [r2]
2586:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2587:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Set scanning configuration for switches */
2588:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_FW_MOD_SEL_PTR, CapSense_CSD_SW_FW_MOD_SEL_SCAN);
 885              		.loc 1 2588 0
 886 0076 144A     		ldr	r2, .L56+8
 887 0078 1360     		str	r3, [r2]
2589:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR,CapSense_CSD_SW_FW_TANK_SEL_SCAN);
 888              		.loc 1 2589 0
 889 007a 144A     		ldr	r2, .L56+12
 890 007c 1360     		str	r3, [r2]
2590:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2591:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR,  CapSense_CSD_SW_SHIELD_SEL_SCAN);
 891              		.loc 1 2591 0
 892 007e 144A     		ldr	r2, .L56+16
 893 0080 1360     		str	r3, [r2]
2592:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2593:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && (CapSense_ENABLE == CapSense_CSD_SHIELD_
2594:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Connect CTANK to AMUXBUS-B */
2595:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_SsCSDEnableShieldTank();
2596:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && (CapSense_ENABLE == CapSense_CSD_
2597:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2598:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SW_RES_PTR, CapSense_CSD_SW_RES_SCAN);
 894              		.loc 1 2598 0
 895 0082 5021     		movs	r1, #80
 896 0084 144A     		ldr	r2, .L56+24
 897 0086 1160     		str	r1, [r2]
2599:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_CSDCMP_PTR, CapSense_CSD_CSDCMP_SCAN);
 898              		.loc 1 2599 0
 899 0088 4F39     		subs	r1, r1, #79
 900 008a 0E4A     		ldr	r2, .L56+4
 901 008c 1160     		str	r1, [r2]
2600:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2601:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_DISABLE == CapSense_CSD_SHIELD_EN)
2602:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Disable HSCOMP during the sampling phase when shield is disabled */
2603:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_HSCMP_PTR, 0u);
 902              		.loc 1 2603 0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 64


 903 008e 0C4A     		ldr	r2, .L56
 904 0090 1360     		str	r3, [r2]
2604:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
2605:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_HSCMP_PTR, CapSense_HSCMP_SCAN_MASK);
2606:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_DISABLE == CapSense_CSD_SHIELD_EN) */
2607:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2608:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_CLK_SOURCE_DIRECT != CapSense_CSD_SNS_CLK_SOURCE)
2609:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             /* Force the LFSR to it's initial state (all ones) */
2610:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, CY_GET_REG32(CapSense_SENSE_PERIOD_PTR) |
 905              		.loc 1 2610 0
 906 0092 154A     		ldr	r2, .L56+40
 907 0094 1368     		ldr	r3, [r2]
 908 0096 8021     		movs	r1, #128
 909 0098 4904     		lsls	r1, r1, #17
 910 009a 0B43     		orrs	r3, r1
 911 009c 1360     		str	r3, [r2]
2611:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                            CapSense_SENSE_PERIOD_LFSR_CLEAR_MASK);
2612:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CLK_SOURCE_DIRECT != CapSense_CSD_SNS_CLK_SOURCE) */
2613:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2614:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Enable SAMPLE interrupt */
2615:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_INTR_MASK_PTR, CapSense_INTR_MASK_SAMPLE_MASK);
 912              		.loc 1 2615 0
 913 009e 0222     		movs	r2, #2
 914 00a0 0F4B     		ldr	r3, .L56+32
 915 00a2 1A60     		str	r2, [r3]
 916              	.LVL93:
2616:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2617:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Init Watchdog Counter to prevent a hang */
2618:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         watchdogCounter = CapSense_CSD_PRECHARGE_WATCHDOG_CYCLES_NUM;
 917              		.loc 1 2618 0
 918 00a4 E123     		movs	r3, #225
 919 00a6 DB01     		lsls	r3, r3, #7
 920 00a8 00E0     		b	.L53
 921              	.LVL94:
 922              	.L55:
2619:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2620:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Wait for IDLE state of the HW sequencer */
2621:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         while((0u != (CapSense_STAT_SEQ_REG & CapSense_STAT_SEQ_SEQ_STATE_MASK)) && (0u != watchdog
2622:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
2623:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             watchdogCounter--;
 923              		.loc 1 2623 0
 924 00aa 013B     		subs	r3, r3, #1
 925              	.LVL95:
 926              	.L53:
2621:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 927              		.loc 1 2621 0
 928 00ac 0F4A     		ldr	r2, .L56+44
 929 00ae 1268     		ldr	r2, [r2]
 930 00b0 5207     		lsls	r2, r2, #29
 931 00b2 01D0     		beq	.L54
 932 00b4 002B     		cmp	r3, #0
 933 00b6 F8D1     		bne	.L55
 934              	.L54:
2624:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
2625:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
2626:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         /* Start SEQUENCER for fine initialization scan for Cmod and then for normal scan */
2627:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_AZ0_SKIP_MASK |
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 65


 935              		.loc 1 2627 0
 936 00b8 0D4A     		ldr	r2, .L56+48
 937 00ba 0A4B     		ldr	r3, .L56+36
 938              	.LVL96:
 939 00bc 1A60     		str	r2, [r3]
 940              	.LBE9:
 941              	.LBE8:
1326:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 942              		.loc 1 1326 0
 943              		@ sp needed
 944 00be 10BD     		pop	{r4, pc}
 945              	.L57:
 946              		.align	2
 947              	.L56:
 948 00c0 80010B40 		.word	1074463104
 949 00c4 8C010B40 		.word	1074463116
 950 00c8 B0020B40 		.word	1074463408
 951 00cc B4020B40 		.word	1074463412
 952 00d0 88020B40 		.word	1074463368
 953 00d4 80020B40 		.word	1074463360
 954 00d8 F0010B40 		.word	1074463216
 955 00dc F0000B40 		.word	1074462960
 956 00e0 F8000B40 		.word	1074462968
 957 00e4 40030B40 		.word	1074463552
 958 00e8 00020B40 		.word	1074463232
 959 00ec 00000B40 		.word	1074462720
 960 00f0 01030000 		.word	769
 961              		.cfi_endproc
 962              	.LFE12:
 963              		.size	CapSense_SsCSDStartSample, .-CapSense_SsCSDStartSample
 964              		.section	.text.CapSense_CSDScanExt,"ax",%progbits
 965              		.align	2
 966              		.global	CapSense_CSDScanExt
 967              		.code	16
 968              		.thumb_func
 969              		.type	CapSense_CSDScanExt, %function
 970              	CapSense_CSDScanExt:
 971              	.LFB13:
1371:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     /* Set Start of sensor scan flag */
 972              		.loc 1 1371 0
 973              		.cfi_startproc
 974              		@ args = 0, pretend = 0, frame = 0
 975              		@ frame_needed = 0, uses_anonymous_args = 0
 976 0000 10B5     		push	{r4, lr}
 977              		.cfi_def_cfa_offset 8
 978              		.cfi_offset 4, -8
 979              		.cfi_offset 14, -4
1373:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 980              		.loc 1 1373 0
 981 0002 054A     		ldr	r2, .L59
 982 0004 D368     		ldr	r3, [r2, #12]
 983 0006 0549     		ldr	r1, .L59+4
 984 0008 0B43     		orrs	r3, r1
 985 000a D360     		str	r3, [r2, #12]
1383:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_ANALOG_STARTUP_DELAY_US > 0uL) */
 986              		.loc 1 1383 0
 987 000c 1720     		movs	r0, #23
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 66


 988 000e FFF7FEFF 		bl	CyDelayUs
 989              	.LVL97:
1388:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 990              		.loc 1 1388 0
 991 0012 FFF7FEFF 		bl	CapSense_SsCSDStartSample
 992              	.LVL98:
1389:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 993              		.loc 1 1389 0
 994              		@ sp needed
 995 0016 10BD     		pop	{r4, pc}
 996              	.L60:
 997              		.align	2
 998              	.L59:
 999 0018 00000000 		.word	CapSense_dsRam
 1000 001c 80000100 		.word	65664
 1001              		.cfi_endproc
 1002              	.LFE13:
 1003              		.size	CapSense_CSDScanExt, .-CapSense_CSDScanExt
 1004              		.section	.text.CapSense_CSDConnectSns,"ax",%progbits
 1005              		.align	2
 1006              		.global	CapSense_CSDConnectSns
 1007              		.code	16
 1008              		.thumb_func
 1009              		.type	CapSense_CSDConnectSns, %function
 1010              	CapSense_CSDConnectSns:
 1011              	.LFB17:
1642:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 newRegisterValue;
 1012              		.loc 1 1642 0
 1013              		.cfi_startproc
 1014              		@ args = 0, pretend = 0, frame = 0
 1015              		@ frame_needed = 0, uses_anonymous_args = 0
 1016              	.LVL99:
 1017 0000 70B5     		push	{r4, r5, r6, lr}
 1018              		.cfi_def_cfa_offset 16
 1019              		.cfi_offset 4, -16
 1020              		.cfi_offset 5, -12
 1021              		.cfi_offset 6, -8
 1022              		.cfi_offset 14, -4
 1023 0002 0400     		movs	r4, r0
1649:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     pinHSIOMShift = (uint32)snsAddrPtr->hsiomShift;
 1024              		.loc 1 1649 0
 1025 0004 857E     		ldrb	r5, [r0, #26]
 1026              	.LVL100:
1650:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1027              		.loc 1 1650 0
 1028 0006 067E     		ldrb	r6, [r0, #24]
 1029              	.LVL101:
1652:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1030              		.loc 1 1652 0
 1031 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1032              	.LVL102:
1655:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newRegisterValue &= ~(CapSense_HSIOM_SEL_MASK << pinHSIOMShift);
 1033              		.loc 1 1655 0
 1034 000c 2368     		ldr	r3, [r4]
 1035 000e 1B68     		ldr	r3, [r3]
 1036              	.LVL103:
1656:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     newRegisterValue |= (uint32)((uint32)CapSense_HSIOM_SEL_CSD_SENSE << pinHSIOMShift);
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 67


 1037              		.loc 1 1656 0
 1038 0010 0F22     		movs	r2, #15
 1039 0012 B240     		lsls	r2, r2, r6
 1040 0014 9343     		bics	r3, r2
 1041              	.LVL104:
 1042 0016 1A00     		movs	r2, r3
 1043              	.LVL105:
1657:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1044              		.loc 1 1657 0
 1045 0018 0423     		movs	r3, #4
 1046 001a B340     		lsls	r3, r3, r6
 1047 001c 1343     		orrs	r3, r2
 1048              	.LVL106:
1660:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1049              		.loc 1 1660 0
 1050 001e 6668     		ldr	r6, [r4, #4]
 1051              	.LVL107:
 1052 0020 3268     		ldr	r2, [r6]
 1053 0022 0721     		movs	r1, #7
 1054 0024 A940     		lsls	r1, r1, r5
 1055 0026 8A43     		bics	r2, r1
 1056 0028 3260     		str	r2, [r6]
1663:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1057              		.loc 1 1663 0
 1058 002a 2268     		ldr	r2, [r4]
 1059 002c 1360     		str	r3, [r2]
1665:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 1060              		.loc 1 1665 0
 1061 002e FFF7FEFF 		bl	CyExitCriticalSection
 1062              	.LVL108:
1666:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1063              		.loc 1 1666 0
 1064              		@ sp needed
 1065              	.LVL109:
 1066              	.LVL110:
 1067 0032 70BD     		pop	{r4, r5, r6, pc}
 1068              		.cfi_endproc
 1069              	.LFE17:
 1070              		.size	CapSense_CSDConnectSns, .-CapSense_CSDConnectSns
 1071              		.section	.text.CapSense_CSDScan,"ax",%progbits
 1072              		.align	2
 1073              		.global	CapSense_CSDScan
 1074              		.code	16
 1075              		.thumb_func
 1076              		.type	CapSense_CSDScan, %function
 1077              	CapSense_CSDScan:
 1078              	.LFB14:
1423:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1079              		.loc 1 1423 0
 1080              		.cfi_startproc
 1081              		@ args = 0, pretend = 0, frame = 0
 1082              		@ frame_needed = 0, uses_anonymous_args = 0
 1083 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1084              		.cfi_def_cfa_offset 24
 1085              		.cfi_offset 3, -24
 1086              		.cfi_offset 4, -20
 1087              		.cfi_offset 5, -16
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 68


 1088              		.cfi_offset 6, -12
 1089              		.cfi_offset 7, -8
 1090              		.cfi_offset 14, -4
1425:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1091              		.loc 1 1425 0
 1092 0002 154F     		ldr	r7, .L63
 1093 0004 3B78     		ldrb	r3, [r7]
1424:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                     CapSense_dsFlash.wdgtArray[CapSense_widgetIndex
 1094              		.loc 1 1424 0
 1095 0006 154D     		ldr	r5, .L63+4
 1096 0008 2C26     		movs	r6, #44
 1097 000a 7343     		muls	r3, r6
 1098 000c EB18     		adds	r3, r5, r3
 1099 000e 5868     		ldr	r0, [r3, #4]
 1100              	.LVL111:
1431:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1101              		.loc 1 1431 0
 1102 0010 134C     		ldr	r4, .L63+8
 1103 0012 0023     		movs	r3, #0
 1104 0014 2370     		strb	r3, [r4]
1434:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2
 1105              		.loc 1 1434 0
 1106 0016 3B78     		ldrb	r3, [r7]
1435:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               + CapSense_sensorIndex;
 1107              		.loc 1 1435 0
 1108 0018 7343     		muls	r3, r6
 1109 001a EB18     		adds	r3, r5, r3
 1110 001c 9968     		ldr	r1, [r3, #8]
1436:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1111              		.loc 1 1436 0
 1112 001e 2378     		ldrb	r3, [r4]
 1113 0020 DBB2     		uxtb	r3, r3
 1114 0022 9A00     		lsls	r2, r3, #2
 1115 0024 D318     		adds	r3, r2, r3
 1116 0026 5A00     		lsls	r2, r3, #1
 1117 0028 8A18     		adds	r2, r1, r2
1434:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2
 1118              		.loc 1 1434 0
 1119 002a 0E4B     		ldr	r3, .L63+12
 1120 002c 1A60     		str	r2, [r3]
1444:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1121              		.loc 1 1444 0
 1122 002e FFF7FEFF 		bl	CapSense_SsCSDSetUpIdacs
 1123              	.LVL112:
1463:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                         CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2SnsFla
 1124              		.loc 1 1463 0
 1125 0032 3B78     		ldrb	r3, [r7]
1464:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                         + CapSense_sensorIndex;
 1126              		.loc 1 1464 0
 1127 0034 5E43     		muls	r6, r3
 1128 0036 7059     		ldr	r0, [r6, r5]
1465:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1129              		.loc 1 1465 0
 1130 0038 2278     		ldrb	r2, [r4]
 1131 003a D2B2     		uxtb	r2, r2
 1132 003c D300     		lsls	r3, r2, #3
 1133 003e 9A1A     		subs	r2, r3, r2
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 69


 1134 0040 9300     		lsls	r3, r2, #2
 1135 0042 C018     		adds	r0, r0, r3
1463:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                         CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2SnsFla
 1136              		.loc 1 1463 0
 1137 0044 084B     		ldr	r3, .L63+16
 1138 0046 1860     		str	r0, [r3]
1468:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1139              		.loc 1 1468 0
 1140 0048 FFF7FEFF 		bl	CapSense_CSDConnectSns
 1141              	.LVL113:
1471:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
 1142              		.loc 1 1471 0
 1143 004c 0748     		ldr	r0, .L63+20
 1144 004e FFF7FEFF 		bl	CapSense_ISR_StartEx
 1145              	.LVL114:
1475:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 1146              		.loc 1 1475 0
 1147 0052 FFF7FEFF 		bl	CapSense_CSDScanExt
 1148              	.LVL115:
1476:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1149              		.loc 1 1476 0
 1150              		@ sp needed
 1151 0056 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1152              	.L64:
 1153              		.align	2
 1154              	.L63:
 1155 0058 00000000 		.word	CapSense_widgetIndex
 1156 005c 00000000 		.word	CapSense_dsFlash
 1157 0060 00000000 		.word	CapSense_sensorIndex
 1158 0064 00000000 		.word	CapSense_curRamSnsPtr
 1159 0068 00000000 		.word	CapSense_curSnsIOPtr
 1160 006c 00000000 		.word	CapSense_CSDPostMultiScan
 1161              		.cfi_endproc
 1162              	.LFE14:
 1163              		.size	CapSense_CSDScan, .-CapSense_CSDScan
 1164              		.section	.text.CapSense_SsCSDConnectSensorExt,"ax",%progbits
 1165              		.align	2
 1166              		.global	CapSense_SsCSDConnectSensorExt
 1167              		.code	16
 1168              		.thumb_func
 1169              		.type	CapSense_SsCSDConnectSensorExt, %function
 1170              	CapSense_SsCSDConnectSensorExt:
 1171              	.LFB15:
1499:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 1172              		.loc 1 1499 0
 1173              		.cfi_startproc
 1174              		@ args = 0, pretend = 0, frame = 0
 1175              		@ frame_needed = 0, uses_anonymous_args = 0
 1176              	.LVL116:
 1177 0000 10B5     		push	{r4, lr}
 1178              		.cfi_def_cfa_offset 8
 1179              		.cfi_offset 4, -8
 1180              		.cfi_offset 14, -4
1506:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       + sensorId;
 1181              		.loc 1 1506 0
 1182 0002 2C23     		movs	r3, #44
 1183 0004 5843     		muls	r0, r3
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 70


 1184              	.LVL117:
 1185 0006 054B     		ldr	r3, .L66
 1186 0008 C058     		ldr	r0, [r0, r3]
1507:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1187              		.loc 1 1507 0
 1188 000a CB00     		lsls	r3, r1, #3
 1189 000c 591A     		subs	r1, r3, r1
 1190              	.LVL118:
 1191 000e 8B00     		lsls	r3, r1, #2
 1192 0010 C018     		adds	r0, r0, r3
1505:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 1193              		.loc 1 1505 0
 1194 0012 034B     		ldr	r3, .L66+4
 1195 0014 1860     		str	r0, [r3]
1541:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 1196              		.loc 1 1541 0
 1197 0016 FFF7FEFF 		bl	CapSense_CSDConnectSns
 1198              	.LVL119:
1543:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1199              		.loc 1 1543 0
 1200              		@ sp needed
 1201 001a 10BD     		pop	{r4, pc}
 1202              	.L67:
 1203              		.align	2
 1204              	.L66:
 1205 001c 00000000 		.word	CapSense_dsFlash
 1206 0020 00000000 		.word	CapSense_curSnsIOPtr
 1207              		.cfi_endproc
 1208              	.LFE15:
 1209              		.size	CapSense_SsCSDConnectSensorExt, .-CapSense_SsCSDConnectSensorExt
 1210              		.section	.text.CapSense_CSDDisconnectSns,"ax",%progbits
 1211              		.align	2
 1212              		.global	CapSense_CSDDisconnectSns
 1213              		.code	16
 1214              		.thumb_func
 1215              		.type	CapSense_CSDDisconnectSns, %function
 1216              	CapSense_CSDDisconnectSns:
 1217              	.LFB18:
1694:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     uint32 pinHSIOMShift;
 1218              		.loc 1 1694 0
 1219              		.cfi_startproc
 1220              		@ args = 0, pretend = 0, frame = 0
 1221              		@ frame_needed = 0, uses_anonymous_args = 0
 1222              	.LVL120:
 1223 0000 70B5     		push	{r4, r5, r6, lr}
 1224              		.cfi_def_cfa_offset 16
 1225              		.cfi_offset 4, -16
 1226              		.cfi_offset 5, -12
 1227              		.cfi_offset 6, -8
 1228              		.cfi_offset 14, -4
 1229 0002 0400     		movs	r4, r0
1705:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     pinModeShift = (uint32)snsAddrPtr->shift;
 1230              		.loc 1 1705 0
 1231 0004 007E     		ldrb	r0, [r0, #24]
 1232              	.LVL121:
1706:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1233              		.loc 1 1706 0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 71


 1234 0006 A57E     		ldrb	r5, [r4, #26]
 1235              	.LVL122:
1711:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1236              		.loc 1 1711 0
 1237 0008 2168     		ldr	r1, [r4]
 1238 000a 0B68     		ldr	r3, [r1]
 1239 000c 0F22     		movs	r2, #15
 1240 000e 8240     		lsls	r2, r2, r0
 1241 0010 9343     		bics	r3, r2
 1242 0012 0B60     		str	r3, [r1]
1713:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1243              		.loc 1 1713 0
 1244 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 1245              	.LVL123:
1716:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegisterValue &= ~(CapSense_GPIO_PC_MASK << pinModeShift);
 1246              		.loc 1 1716 0
 1247 0018 6168     		ldr	r1, [r4, #4]
 1248 001a 0B68     		ldr	r3, [r1]
 1249              	.LVL124:
1717:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         newRegisterValue |= CapSense_CSD_INACTIVE_SNS_CONNECTION << pinModeShift;
 1250              		.loc 1 1717 0
 1251 001c 0722     		movs	r2, #7
 1252 001e AA40     		lsls	r2, r2, r5
 1253 0020 9343     		bics	r3, r2
 1254              	.LVL125:
 1255 0022 1A00     		movs	r2, r3
 1256              	.LVL126:
1718:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->pcPtr, newRegisterValue);
 1257              		.loc 1 1718 0
 1258 0024 0623     		movs	r3, #6
 1259 0026 AB40     		lsls	r3, r3, r5
 1260 0028 1343     		orrs	r3, r2
 1261              	.LVL127:
1719:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1262              		.loc 1 1719 0
 1263 002a 0B60     		str	r3, [r1]
1721:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1264              		.loc 1 1721 0
 1265 002c FFF7FEFF 		bl	CyExitCriticalSection
 1266              	.LVL128:
1724:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #else
 1267              		.loc 1 1724 0
 1268 0030 A168     		ldr	r1, [r4, #8]
 1269 0032 0B68     		ldr	r3, [r1]
 1270 0034 607E     		ldrb	r0, [r4, #25]
 1271 0036 0122     		movs	r2, #1
 1272 0038 8240     		lsls	r2, r2, r0
 1273 003a 9343     		bics	r3, r2
 1274 003c 0B60     		str	r3, [r1]
1735:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1275              		.loc 1 1735 0
 1276              		@ sp needed
 1277              	.LVL129:
 1278              	.LVL130:
 1279 003e 70BD     		pop	{r4, r5, r6, pc}
 1280              		.cfi_endproc
 1281              	.LFE18:
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 72


 1282              		.size	CapSense_CSDDisconnectSns, .-CapSense_CSDDisconnectSns
 1283              		.section	.text.CapSense_SsCSDElectrodeCheck,"ax",%progbits
 1284              		.align	2
 1285              		.global	CapSense_SsCSDElectrodeCheck
 1286              		.code	16
 1287              		.thumb_func
 1288              		.type	CapSense_SsCSDElectrodeCheck, %function
 1289              	CapSense_SsCSDElectrodeCheck:
 1290              	.LFB5:
 695:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 1291              		.loc 1 695 0
 1292              		.cfi_startproc
 1293              		@ args = 0, pretend = 0, frame = 0
 1294              		@ frame_needed = 0, uses_anonymous_args = 0
 1295 0000 10B5     		push	{r4, lr}
 1296              		.cfi_def_cfa_offset 8
 1297              		.cfi_offset 4, -8
 1298              		.cfi_offset 14, -4
 700:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     {
 1299              		.loc 1 700 0
 1300 0002 064B     		ldr	r3, .L71
 1301 0004 1B78     		ldrb	r3, [r3]
 1302 0006 012B     		cmp	r3, #1
 1303 0008 06D1     		bne	.L69
 728:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
 1304              		.loc 1 728 0
 1305 000a 054B     		ldr	r3, .L71+4
 1306 000c 1868     		ldr	r0, [r3]
 1307 000e FFF7FEFF 		bl	CapSense_CSDDisconnectSns
 1308              	.LVL131:
 731:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     }
 1309              		.loc 1 731 0
 1310 0012 0022     		movs	r2, #0
 1311 0014 014B     		ldr	r3, .L71
 1312 0016 1A70     		strb	r2, [r3]
 1313              	.L69:
 733:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1314              		.loc 1 733 0
 1315              		@ sp needed
 1316 0018 10BD     		pop	{r4, pc}
 1317              	.L72:
 1318 001a C046     		.align	2
 1319              	.L71:
 1320 001c 00000000 		.word	.LANCHOR1
 1321 0020 00000000 		.word	CapSense_curSnsIOPtr
 1322              		.cfi_endproc
 1323              	.LFE5:
 1324              		.size	CapSense_SsCSDElectrodeCheck, .-CapSense_SsCSDElectrodeCheck
 1325              		.section	.text.CapSense_CSDSetupWidget,"ax",%progbits
 1326              		.align	2
 1327              		.global	CapSense_CSDSetupWidget
 1328              		.code	16
 1329              		.thumb_func
 1330              		.type	CapSense_CSDSetupWidget, %function
 1331              	CapSense_CSDSetupWidget:
 1332              	.LFB10:
1121:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 73


 1333              		.loc 1 1121 0
 1334              		.cfi_startproc
 1335              		@ args = 0, pretend = 0, frame = 0
 1336              		@ frame_needed = 0, uses_anonymous_args = 0
 1337              	.LVL132:
 1338 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1339              		.cfi_def_cfa_offset 24
 1340              		.cfi_offset 3, -24
 1341              		.cfi_offset 4, -20
 1342              		.cfi_offset 5, -16
 1343              		.cfi_offset 6, -12
 1344              		.cfi_offset 7, -8
 1345              		.cfi_offset 14, -4
1123:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                     CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRa
 1346              		.loc 1 1123 0
 1347 0002 114E     		ldr	r6, .L74
 1348 0004 2C27     		movs	r7, #44
 1349 0006 3B00     		movs	r3, r7
 1350 0008 4343     		muls	r3, r0
 1351 000a F318     		adds	r3, r6, r3
 1352 000c 5D68     		ldr	r5, [r3, #4]
 1353              	.LVL133:
1127:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1354              		.loc 1 1127 0
 1355 000e C0B2     		uxtb	r0, r0
 1356              	.LVL134:
 1357 0010 0E4C     		ldr	r4, .L74+4
 1358 0012 2070     		strb	r0, [r4]
1129:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1359              		.loc 1 1129 0
 1360 0014 0120     		movs	r0, #1
 1361 0016 FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 1362              	.LVL135:
1137:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1363              		.loc 1 1137 0
 1364 001a FFF7FEFF 		bl	CapSense_SsCSDElectrodeCheck
 1365              	.LVL136:
1141:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1366              		.loc 1 1141 0
 1367 001e 2378     		ldrb	r3, [r4]
 1368 0020 7B43     		muls	r3, r7
 1369 0022 9A59     		ldr	r2, [r3, r6]
1140:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                     CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2SnsFlash;
 1370              		.loc 1 1140 0
 1371 0024 0A4B     		ldr	r3, .L74+8
 1372 0026 1A60     		str	r2, [r3]
1144:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_dsRam.status |= CapSense_widgetIndex;
 1373              		.loc 1 1144 0
 1374 0028 0A4B     		ldr	r3, .L74+12
 1375 002a DA68     		ldr	r2, [r3, #12]
 1376 002c 7F21     		movs	r1, #127
 1377 002e 8A43     		bics	r2, r1
 1378 0030 DA60     		str	r2, [r3, #12]
1145:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1379              		.loc 1 1145 0
 1380 0032 2178     		ldrb	r1, [r4]
 1381 0034 DA68     		ldr	r2, [r3, #12]
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 74


 1382 0036 0A43     		orrs	r2, r1
 1383 0038 DA60     		str	r2, [r3, #12]
1148:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1384              		.loc 1 1148 0
 1385 003a 2800     		movs	r0, r5
 1386 003c FFF7FEFF 		bl	CapSense_SsCSDCalculateScanDuration
 1387              	.LVL137:
1152:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* ((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) ||\
 1388              		.loc 1 1152 0
 1389 0040 FFF7FEFF 		bl	CapSense_SsCSDConfigClock
 1390              	.LVL138:
1155:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1391              		.loc 1 1155 0
 1392              		@ sp needed
 1393              	.LVL139:
 1394              	.LVL140:
 1395              	.LVL141:
 1396 0044 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1397              	.L75:
 1398 0046 C046     		.align	2
 1399              	.L74:
 1400 0048 00000000 		.word	CapSense_dsFlash
 1401 004c 00000000 		.word	CapSense_widgetIndex
 1402 0050 00000000 		.word	CapSense_curSnsIOPtr
 1403 0054 00000000 		.word	CapSense_dsRam
 1404              		.cfi_endproc
 1405              	.LFE10:
 1406              		.size	CapSense_CSDSetupWidget, .-CapSense_CSDSetupWidget
 1407              		.section	.text.CapSense_CSDSetupWidgetExt,"ax",%progbits
 1408              		.align	2
 1409              		.global	CapSense_CSDSetupWidgetExt
 1410              		.code	16
 1411              		.thumb_func
 1412              		.type	CapSense_CSDSetupWidgetExt, %function
 1413              	CapSense_CSDSetupWidgetExt:
 1414              	.LFB11:
1202:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1415              		.loc 1 1202 0
 1416              		.cfi_startproc
 1417              		@ args = 0, pretend = 0, frame = 0
 1418              		@ frame_needed = 0, uses_anonymous_args = 0
 1419              	.LVL142:
 1420 0000 70B5     		push	{r4, r5, r6, lr}
 1421              		.cfi_def_cfa_offset 16
 1422              		.cfi_offset 4, -16
 1423              		.cfi_offset 5, -12
 1424              		.cfi_offset 6, -8
 1425              		.cfi_offset 14, -4
1203:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                     CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRa
 1426              		.loc 1 1203 0
 1427 0002 2C23     		movs	r3, #44
 1428 0004 4343     		muls	r3, r0
 1429 0006 134A     		ldr	r2, .L77
 1430 0008 D318     		adds	r3, r2, r3
 1431 000a 5D68     		ldr	r5, [r3, #4]
 1432              	.LVL143:
1207:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 75


 1433              		.loc 1 1207 0
 1434 000c C9B2     		uxtb	r1, r1
 1435              	.LVL144:
 1436 000e 124C     		ldr	r4, .L77+4
 1437 0010 2170     		strb	r1, [r4]
1211:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               + CapSense_sensorIndex;
 1438              		.loc 1 1211 0
 1439 0012 9968     		ldr	r1, [r3, #8]
1212:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1440              		.loc 1 1212 0
 1441 0014 2378     		ldrb	r3, [r4]
 1442 0016 DBB2     		uxtb	r3, r3
 1443 0018 9A00     		lsls	r2, r3, #2
 1444 001a D318     		adds	r3, r2, r3
 1445 001c 5A00     		lsls	r2, r3, #1
 1446 001e 8A18     		adds	r2, r1, r2
1210:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsRam
 1447              		.loc 1 1210 0
 1448 0020 0E4B     		ldr	r3, .L77+8
 1449 0022 1A60     		str	r2, [r3]
1214:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1450              		.loc 1 1214 0
 1451 0024 FFF7FEFF 		bl	CapSense_CSDSetupWidget
 1452              	.LVL145:
1217:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1453              		.loc 1 1217 0
 1454 0028 2800     		movs	r0, r5
 1455 002a FFF7FEFF 		bl	CapSense_SsCSDSetUpIdacs
 1456              	.LVL146:
1228:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         CapSense_CSDConnectSns(CapSense_curSnsIOPtr);
 1457              		.loc 1 1228 0
 1458 002e 2378     		ldrb	r3, [r4]
 1459 0030 DBB2     		uxtb	r3, r3
 1460 0032 0B49     		ldr	r1, .L77+12
 1461 0034 DA00     		lsls	r2, r3, #3
 1462 0036 D31A     		subs	r3, r2, r3
 1463 0038 9800     		lsls	r0, r3, #2
 1464 003a 0B68     		ldr	r3, [r1]
 1465 003c 9C46     		mov	ip, r3
 1466 003e 6044     		add	r0, r0, ip
 1467 0040 0860     		str	r0, [r1]
1229:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)  */
 1468              		.loc 1 1229 0
 1469 0042 FFF7FEFF 		bl	CapSense_CSDConnectSns
 1470              	.LVL147:
1239:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1471              		.loc 1 1239 0
 1472 0046 0122     		movs	r2, #1
 1473 0048 064B     		ldr	r3, .L77+16
 1474 004a 1A70     		strb	r2, [r3]
1242:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** }
 1475              		.loc 1 1242 0
 1476 004c 0648     		ldr	r0, .L77+20
 1477 004e FFF7FEFF 		bl	CapSense_ISR_StartEx
 1478              	.LVL148:
1243:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1479              		.loc 1 1243 0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 76


 1480              		@ sp needed
 1481              	.LVL149:
 1482 0052 70BD     		pop	{r4, r5, r6, pc}
 1483              	.L78:
 1484              		.align	2
 1485              	.L77:
 1486 0054 00000000 		.word	CapSense_dsFlash
 1487 0058 00000000 		.word	CapSense_sensorIndex
 1488 005c 00000000 		.word	CapSense_curRamSnsPtr
 1489 0060 00000000 		.word	CapSense_curSnsIOPtr
 1490 0064 00000000 		.word	.LANCHOR1
 1491 0068 00000000 		.word	CapSense_CSDPostSingleScan
 1492              		.cfi_endproc
 1493              	.LFE11:
 1494              		.size	CapSense_CSDSetupWidgetExt, .-CapSense_CSDSetupWidgetExt
 1495              		.section	.text.CapSense_SsCSDDisconnectSnsExt,"ax",%progbits
 1496              		.align	2
 1497              		.global	CapSense_SsCSDDisconnectSnsExt
 1498              		.code	16
 1499              		.thumb_func
 1500              		.type	CapSense_SsCSDDisconnectSnsExt, %function
 1501              	CapSense_SsCSDDisconnectSnsExt:
 1502              	.LFB16:
1569:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 1503              		.loc 1 1569 0
 1504              		.cfi_startproc
 1505              		@ args = 0, pretend = 0, frame = 0
 1506              		@ frame_needed = 0, uses_anonymous_args = 0
 1507              	.LVL150:
 1508 0000 10B5     		push	{r4, lr}
 1509              		.cfi_def_cfa_offset 8
 1510              		.cfi_offset 4, -8
 1511              		.cfi_offset 14, -4
1576:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       + sensorId;
 1512              		.loc 1 1576 0
 1513 0002 2C23     		movs	r3, #44
 1514 0004 5843     		muls	r0, r3
 1515              	.LVL151:
 1516 0006 054B     		ldr	r3, .L80
 1517 0008 C058     		ldr	r0, [r0, r3]
1577:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1518              		.loc 1 1577 0
 1519 000a CB00     		lsls	r3, r1, #3
 1520 000c 591A     		subs	r1, r3, r1
 1521              	.LVL152:
 1522 000e 8B00     		lsls	r3, r1, #2
 1523 0010 C018     		adds	r0, r0, r3
1575:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                       CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 1524              		.loc 1 1575 0
 1525 0012 034B     		ldr	r3, .L80+4
 1526 0014 1860     		str	r0, [r3]
1610:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 1527              		.loc 1 1610 0
 1528 0016 FFF7FEFF 		bl	CapSense_CSDDisconnectSns
 1529              	.LVL153:
1612:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1530              		.loc 1 1612 0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 77


 1531              		@ sp needed
 1532 001a 10BD     		pop	{r4, pc}
 1533              	.L81:
 1534              		.align	2
 1535              	.L80:
 1536 001c 00000000 		.word	CapSense_dsFlash
 1537 0020 00000000 		.word	CapSense_curSnsIOPtr
 1538              		.cfi_endproc
 1539              	.LFE16:
 1540              		.size	CapSense_SsCSDDisconnectSnsExt, .-CapSense_SsCSDDisconnectSnsExt
 1541              		.section	.text.CapSense_SsCSDCalibrateOneSensor,"ax",%progbits
 1542              		.align	2
 1543              		.code	16
 1544              		.thumb_func
 1545              		.type	CapSense_SsCSDCalibrateOneSensor, %function
 1546              	CapSense_SsCSDCalibrateOneSensor:
 1547              	.LFB22:
1911:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         cystatus calibrateStatus;
 1548              		.loc 1 1911 0
 1549              		.cfi_startproc
 1550              		@ args = 0, pretend = 0, frame = 8
 1551              		@ frame_needed = 0, uses_anonymous_args = 0
 1552              	.LVL154:
 1553 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1554              		.cfi_def_cfa_offset 20
 1555              		.cfi_offset 4, -20
 1556              		.cfi_offset 5, -16
 1557              		.cfi_offset 6, -12
 1558              		.cfi_offset 7, -8
 1559              		.cfi_offset 14, -4
 1560 0002 4746     		mov	r7, r8
 1561 0004 80B4     		push	{r7}
 1562              		.cfi_def_cfa_offset 24
 1563              		.cfi_offset 8, -24
 1564 0006 82B0     		sub	sp, sp, #8
 1565              		.cfi_def_cfa_offset 32
 1566 0008 0700     		movs	r7, r0
 1567 000a 0E00     		movs	r6, r1
 1568 000c 9046     		mov	r8, r2
 1569              	.LVL155:
1924:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1570              		.loc 1 1924 0
 1571 000e 2F4A     		ldr	r2, .L89
 1572              	.LVL156:
 1573 0010 1378     		ldrb	r3, [r2]
1923:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                                         CapSense_dsFlash.wdgtArray[CapSense_widgetI
 1574              		.loc 1 1923 0
 1575 0012 2C21     		movs	r1, #44
 1576              	.LVL157:
 1577 0014 4B43     		muls	r3, r1
 1578 0016 2E49     		ldr	r1, .L89+4
 1579 0018 CB18     		adds	r3, r1, r3
 1580 001a 5B68     		ldr	r3, [r3, #4]
 1581 001c 0193     		str	r3, [sp, #4]
 1582              	.LVL158:
1926:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 1583              		.loc 1 1926 0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 78


 1584 001e 0023     		movs	r3, #0
 1585              	.LVL159:
 1586 0020 3370     		strb	r3, [r6]
1933:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1587              		.loc 1 1933 0
 1588 0022 1078     		ldrb	r0, [r2]
 1589              	.LVL160:
 1590 0024 C0B2     		uxtb	r0, r0
 1591 0026 2B4B     		ldr	r3, .L89+8
 1592 0028 1978     		ldrb	r1, [r3]
 1593 002a C9B2     		uxtb	r1, r1
 1594 002c FFF7FEFF 		bl	CapSense_CSDSetupWidgetExt
 1595              	.LVL161:
1937:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 1596              		.loc 1 1937 0
 1597 0030 FFF7FEFF 		bl	CapSense_SsCSDSetSingleIdacMode
 1598              	.LVL162:
1916:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 1599              		.loc 1 1916 0
 1600 0034 0024     		movs	r4, #0
1913:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 watchdogCounter;
 1601              		.loc 1 1913 0
 1602 0036 8025     		movs	r5, #128
 1603              	.LVL163:
 1604              	.L87:
1947:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 1605              		.loc 1 1947 0
 1606 0038 BC42     		cmp	r4, r7
 1607 003a 02D2     		bcs	.L83
1950:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 1608              		.loc 1 1950 0
 1609 003c 3378     		ldrb	r3, [r6]
 1610 003e AB43     		bics	r3, r5
 1611 0040 3370     		strb	r3, [r6]
 1612              	.L83:
1968:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1613              		.loc 1 1968 0
 1614 0042 6D08     		lsrs	r5, r5, #1
 1615              	.LVL164:
1971:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 1616              		.loc 1 1971 0
 1617 0044 3378     		ldrb	r3, [r6]
 1618 0046 2B43     		orrs	r3, r5
 1619 0048 3370     		strb	r3, [r6]
1978:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1620              		.loc 1 1978 0
 1621 004a 0198     		ldr	r0, [sp, #4]
 1622 004c FFF7FEFF 		bl	CapSense_SsCSDSetUpIdacs
 1623              	.LVL165:
1981:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1624              		.loc 1 1981 0
 1625 0050 FFF7FEFF 		bl	CapSense_CSDScanExt
 1626              	.LVL166:
1984:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             while (((CapSense_dsRam.status & CapSense_SW_STS_BUSY) != 0u) &&
 1627              		.loc 1 1984 0
 1628 0054 E123     		movs	r3, #225
 1629 0056 DB01     		lsls	r3, r3, #7
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 79


1985:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                    (0u != watchdogCounter))
 1630              		.loc 1 1985 0
 1631 0058 00E0     		b	.L84
 1632              	.LVL167:
 1633              	.L86:
1989:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             }
 1634              		.loc 1 1989 0
 1635 005a 013B     		subs	r3, r3, #1
 1636              	.LVL168:
 1637              	.L84:
1985:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                    (0u != watchdogCounter))
 1638              		.loc 1 1985 0
 1639 005c 1E4A     		ldr	r2, .L89+12
 1640 005e D268     		ldr	r2, [r2, #12]
 1641 0060 1206     		lsls	r2, r2, #24
 1642 0062 01D5     		bpl	.L85
1985:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                    (0u != watchdogCounter))
 1643              		.loc 1 1985 0 is_stmt 0 discriminator 1
 1644 0064 002B     		cmp	r3, #0
 1645 0066 F8D1     		bne	.L86
 1646              	.L85:
1993:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if(CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 1647              		.loc 1 1993 0 is_stmt 1
 1648 0068 1C4B     		ldr	r3, .L89+16
 1649              	.LVL169:
 1650 006a 1B68     		ldr	r3, [r3]
 1651 006c 1C88     		ldrh	r4, [r3]
 1652              	.LVL170:
1999:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1653              		.loc 1 1999 0
 1654 006e 002D     		cmp	r5, #0
 1655 0070 E2D1     		bne	.L87
2005:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                             CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2Sn
 1656              		.loc 1 2005 0
 1657 0072 164B     		ldr	r3, .L89
 1658 0074 1B78     		ldrb	r3, [r3]
2006:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                             + CapSense_sensorIndex;
 1659              		.loc 1 2006 0
 1660 0076 2C22     		movs	r2, #44
 1661 0078 5343     		muls	r3, r2
 1662 007a 154A     		ldr	r2, .L89+4
 1663 007c 9858     		ldr	r0, [r3, r2]
2007:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1664              		.loc 1 2007 0
 1665 007e 154B     		ldr	r3, .L89+8
 1666 0080 1A78     		ldrb	r2, [r3]
 1667 0082 D2B2     		uxtb	r2, r2
 1668 0084 D300     		lsls	r3, r2, #3
 1669 0086 9A1A     		subs	r2, r3, r2
 1670 0088 9300     		lsls	r3, r2, #2
 1671 008a C018     		adds	r0, r0, r3
2005:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                             CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2Sn
 1672              		.loc 1 2005 0
 1673 008c 144B     		ldr	r3, .L89+20
 1674 008e 1860     		str	r0, [r3]
2010:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 1675              		.loc 1 2010 0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 80


 1676 0090 FFF7FEFF 		bl	CapSense_CSDDisconnectSns
 1677              	.LVL171:
2014:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1678              		.loc 1 2014 0
 1679 0094 0022     		movs	r2, #0
 1680 0096 134B     		ldr	r3, .L89+24
 1681 0098 1A70     		strb	r2, [r3]
2018:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 1682              		.loc 1 2018 0
 1683 009a FFF7FEFF 		bl	CapSense_SsCSDRestoreIdacMode
 1684              	.LVL172:
2022:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 1685              		.loc 1 2022 0
 1686 009e 2200     		movs	r2, r4
 1687 00a0 3900     		movs	r1, r7
 1688 00a2 0198     		ldr	r0, [sp, #4]
 1689 00a4 FFF7FEFF 		bl	CapSense_SsCSDCalibrateCheck
 1690              	.LVL173:
2032:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1691              		.loc 1 2032 0
 1692 00a8 4346     		mov	r3, r8
 1693 00aa 1A78     		ldrb	r2, [r3]
 1694 00ac 3378     		ldrb	r3, [r6]
 1695 00ae 9A42     		cmp	r2, r3
 1696 00b0 04D2     		bcs	.L88
2034:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
 1697              		.loc 1 2034 0
 1698 00b2 4246     		mov	r2, r8
 1699 00b4 1370     		strb	r3, [r2]
2037:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 CapSense_calibratedRawcount = rawData0;
 1700              		.loc 1 2037 0
 1701 00b6 0C4A     		ldr	r2, .L89+28
 1702 00b8 1371     		strb	r3, [r2, #4]
2038:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) */
 1703              		.loc 1 2038 0
 1704 00ba D480     		strh	r4, [r2, #6]
 1705              	.L88:
2057:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 1706              		.loc 1 2057 0
 1707 00bc 074B     		ldr	r3, .L89+16
 1708 00be 1B68     		ldr	r3, [r3]
 1709 00c0 3278     		ldrb	r2, [r6]
 1710 00c2 5A72     		strb	r2, [r3, #9]
2065:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1711              		.loc 1 2065 0
 1712 00c4 02B0     		add	sp, sp, #8
 1713              		@ sp needed
 1714              	.LVL174:
 1715              	.LVL175:
 1716              	.LVL176:
 1717              	.LVL177:
 1718              	.LVL178:
 1719 00c6 04BC     		pop	{r2}
 1720 00c8 9046     		mov	r8, r2
 1721 00ca F0BD     		pop	{r4, r5, r6, r7, pc}
 1722              	.L90:
 1723              		.align	2
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 81


 1724              	.L89:
 1725 00cc 00000000 		.word	CapSense_widgetIndex
 1726 00d0 00000000 		.word	CapSense_dsFlash
 1727 00d4 00000000 		.word	CapSense_sensorIndex
 1728 00d8 00000000 		.word	CapSense_dsRam
 1729 00dc 00000000 		.word	CapSense_curRamSnsPtr
 1730 00e0 00000000 		.word	CapSense_curSnsIOPtr
 1731 00e4 00000000 		.word	.LANCHOR1
 1732 00e8 00000000 		.word	.LANCHOR0
 1733              		.cfi_endproc
 1734              	.LFE22:
 1735              		.size	CapSense_SsCSDCalibrateOneSensor, .-CapSense_SsCSDCalibrateOneSensor
 1736              		.section	.text.CapSense_CSDCalibrateWidget,"ax",%progbits
 1737              		.align	2
 1738              		.global	CapSense_CSDCalibrateWidget
 1739              		.code	16
 1740              		.thumb_func
 1741              		.type	CapSense_CSDCalibrateWidget, %function
 1742              	CapSense_CSDCalibrateWidget:
 1743              	.LFB23:
2111:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         uint32 rawLevel;
 1744              		.loc 1 2111 0
 1745              		.cfi_startproc
 1746              		@ args = 0, pretend = 0, frame = 16
 1747              		@ frame_needed = 0, uses_anonymous_args = 0
 1748              	.LVL179:
 1749 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1750              		.cfi_def_cfa_offset 20
 1751              		.cfi_offset 4, -20
 1752              		.cfi_offset 5, -16
 1753              		.cfi_offset 6, -12
 1754              		.cfi_offset 7, -8
 1755              		.cfi_offset 14, -4
 1756 0002 4F46     		mov	r7, r9
 1757 0004 80B4     		push	{r7}
 1758              		.cfi_def_cfa_offset 24
 1759              		.cfi_offset 9, -24
 1760 0006 84B0     		sub	sp, sp, #16
 1761              		.cfi_def_cfa_offset 40
 1762 0008 0400     		movs	r4, r0
 1763 000a 8946     		mov	r9, r1
 1764              	.LVL180:
2123:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                                               CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
 1765              		.loc 1 2123 0
 1766 000c 2C23     		movs	r3, #44
 1767 000e 4343     		muls	r3, r0
 1768 0010 394A     		ldr	r2, .L98
 1769 0012 D318     		adds	r3, r2, r3
 1770 0014 5F68     		ldr	r7, [r3, #4]
 1771              	.LVL181:
2127:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #else
 1772              		.loc 1 2127 0
 1773 0016 0125     		movs	r5, #1
 1774 0018 03AB     		add	r3, sp, #12
 1775 001a 1D70     		strb	r5, [r3]
2135:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1776              		.loc 1 2135 0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 82


 1777 001c 3B88     		ldrh	r3, [r7]
 1778 001e 2800     		movs	r0, r5
 1779              	.LVL182:
 1780 0020 9840     		lsls	r0, r0, r3
 1781 0022 0138     		subs	r0, r0, #1
 1782              	.LVL183:
2138:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1783              		.loc 1 2138 0
 1784 0024 4843     		muls	r0, r1
 1785              	.LVL184:
 1786 0026 6421     		movs	r1, #100
 1787              	.LVL185:
 1788 0028 FFF7FEFF 		bl	__aeabi_uidiv
 1789              	.LVL186:
 1790 002c 0190     		str	r0, [sp, #4]
 1791              	.LVL187:
2141:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1792              		.loc 1 2141 0
 1793 002e E2B2     		uxtb	r2, r4
 1794 0030 324B     		ldr	r3, .L98+4
 1795 0032 1A70     		strb	r2, [r3]
2144:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1796              		.loc 1 2144 0
 1797 0034 3248     		ldr	r0, .L98+8
 1798              	.LVL188:
 1799 0036 FFF7FEFF 		bl	CapSense_ISR_StartEx
 1800              	.LVL189:
2147:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1801              		.loc 1 2147 0
 1802 003a 3E00     		movs	r6, r7
 1803 003c 0936     		adds	r6, r6, #9
 1804              	.LVL190:
2150:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             CapSense_calibratedRawcount = 1u;
 1805              		.loc 1 2150 0
 1806 003e 314B     		ldr	r3, .L98+12
 1807 0040 1D71     		strb	r5, [r3, #4]
2151:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) */
 1808              		.loc 1 2151 0
 1809 0042 DD80     		strh	r5, [r3, #6]
2155:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              CapSense_sensorIndex < CapSense_dsFlash.wdgtArray[widgetId].numCols;
 1810              		.loc 1 2155 0
 1811 0044 0022     		movs	r2, #0
 1812 0046 304B     		ldr	r3, .L98+16
 1813 0048 1A70     		strb	r2, [r3]
2113:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1814              		.loc 1 2113 0
 1815 004a 0025     		movs	r5, #0
2155:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              CapSense_sensorIndex < CapSense_dsFlash.wdgtArray[widgetId].numCols;
 1816              		.loc 1 2155 0
 1817 004c 0AE0     		b	.L92
 1818              	.LVL191:
 1819              	.L93:
2160:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         }
 1820              		.loc 1 2160 0
 1821 004e 03AA     		add	r2, sp, #12
 1822 0050 3100     		movs	r1, r6
 1823 0052 0198     		ldr	r0, [sp, #4]
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 83


 1824 0054 FFF7FEFF 		bl	CapSense_SsCSDCalibrateOneSensor
 1825              	.LVL192:
 1826 0058 0543     		orrs	r5, r0
 1827              	.LVL193:
2157:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****         {
 1828              		.loc 1 2157 0
 1829 005a 2B4A     		ldr	r2, .L98+16
 1830 005c 1378     		ldrb	r3, [r2]
 1831 005e 0133     		adds	r3, r3, #1
 1832 0060 DBB2     		uxtb	r3, r3
 1833 0062 1370     		strb	r3, [r2]
 1834              	.LVL194:
 1835              	.L92:
2156:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              CapSense_sensorIndex++)
 1836              		.loc 1 2156 0 discriminator 1
 1837 0064 2C23     		movs	r3, #44
 1838 0066 6343     		muls	r3, r4
 1839 0068 234A     		ldr	r2, .L98
 1840 006a D318     		adds	r3, r2, r3
 1841 006c 1A7F     		ldrb	r2, [r3, #28]
 1842 006e 264B     		ldr	r3, .L98+16
 1843 0070 1B78     		ldrb	r3, [r3]
 1844 0072 DBB2     		uxtb	r3, r3
2155:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****              CapSense_sensorIndex < CapSense_dsFlash.wdgtArray[widgetId].numCols;
 1845              		.loc 1 2155 0 discriminator 1
 1846 0074 9A42     		cmp	r2, r3
 1847 0076 EAD8     		bhi	.L93
2166:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 1848              		.loc 1 2166 0
 1849 0078 03AB     		add	r3, sp, #12
 1850 007a 1B78     		ldrb	r3, [r3]
 1851 007c 0133     		adds	r3, r3, #1
 1852 007e 5B08     		lsrs	r3, r3, #1
 1853 0080 7B72     		strb	r3, [r7, #9]
2173:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                  CapSense_sensorIndex < CapSense_dsFlash.wdgtArray[widgetId].numCols;
 1854              		.loc 1 2173 0
 1855 0082 0022     		movs	r2, #0
 1856 0084 204B     		ldr	r3, .L98+16
 1857 0086 1A70     		strb	r2, [r3]
 1858 0088 23E0     		b	.L94
 1859              	.LVL195:
 1860              	.L97:
2178:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 /* Calculate Compensation IDAC value: idacComp(i) = (iDAC8(i) - idacMod) * Target *
 1861              		.loc 1 2178 0
 1862 008a 2C23     		movs	r3, #44
 1863 008c 6343     		muls	r3, r4
 1864 008e 1A4A     		ldr	r2, .L98
 1865 0090 D318     		adds	r3, r2, r3
 1866 0092 9E68     		ldr	r6, [r3, #8]
 1867 0094 1C4B     		ldr	r3, .L98+16
 1868 0096 1B78     		ldrb	r3, [r3]
 1869 0098 DBB2     		uxtb	r3, r3
 1870 009a 9A00     		lsls	r2, r3, #2
 1871 009c D318     		adds	r3, r2, r3
 1872 009e 5A00     		lsls	r2, r3, #1
 1873 00a0 B618     		adds	r6, r6, r2
2177:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                          CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsRam + CapSense_sensorIndex;
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 84


 1874              		.loc 1 2177 0
 1875 00a2 1A4B     		ldr	r3, .L98+20
 1876 00a4 1E60     		str	r6, [r3]
2180:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 {
 1877              		.loc 1 2180 0
 1878 00a6 737A     		ldrb	r3, [r6, #9]
 1879 00a8 787A     		ldrb	r0, [r7, #9]
 1880 00aa 8342     		cmp	r3, r0
 1881 00ac 0AD3     		bcc	.L95
2182:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                     #if ((CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN) ||\
 1882              		.loc 1 2182 0
 1883 00ae 1B1A     		subs	r3, r3, r0
 1884 00b0 D8B2     		uxtb	r0, r3
 1885 00b2 7072     		strb	r0, [r6, #9]
2186:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             CapSense_PERCENTAGE_100);
 1886              		.loc 1 2186 0
 1887 00b4 4B46     		mov	r3, r9
 1888 00b6 5843     		muls	r0, r3
 1889 00b8 6330     		adds	r0, r0, #99
 1890 00ba 6421     		movs	r1, #100
 1891 00bc FFF7FEFF 		bl	__aeabi_uidiv
 1892              	.LVL196:
2185:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                             (uint8)((((target * CapSense_curRamSnsPtr->idacComp[0u]) + CapSense_PER
 1893              		.loc 1 2185 0
 1894 00c0 7072     		strb	r0, [r6, #9]
 1895 00c2 01E0     		b	.L96
 1896              	.L95:
2193:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                 }
 1897              		.loc 1 2193 0
 1898 00c4 0023     		movs	r3, #0
 1899 00c6 7372     		strb	r3, [r6, #9]
 1900              	.L96:
2175:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****             {
 1901              		.loc 1 2175 0
 1902 00c8 0F4A     		ldr	r2, .L98+16
 1903 00ca 1378     		ldrb	r3, [r2]
 1904 00cc 0133     		adds	r3, r3, #1
 1905 00ce DBB2     		uxtb	r3, r3
 1906 00d0 1370     		strb	r3, [r2]
 1907              	.L94:
2174:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                  CapSense_sensorIndex++)
 1908              		.loc 1 2174 0 discriminator 1
 1909 00d2 2C23     		movs	r3, #44
 1910 00d4 6343     		muls	r3, r4
 1911 00d6 084A     		ldr	r2, .L98
 1912 00d8 D318     		adds	r3, r2, r3
 1913 00da 1A7F     		ldrb	r2, [r3, #28]
 1914 00dc 0A4B     		ldr	r3, .L98+16
 1915 00de 1B78     		ldrb	r3, [r3]
 1916 00e0 DBB2     		uxtb	r3, r3
2173:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c ****                  CapSense_sensorIndex < CapSense_dsFlash.wdgtArray[widgetId].numCols;
 1917              		.loc 1 2173 0 discriminator 1
 1918 00e2 9A42     		cmp	r2, r3
 1919 00e4 D1D8     		bhi	.L97
2343:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** 
 1920              		.loc 1 2343 0
 1921 00e6 0022     		movs	r2, #0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 85


 1922 00e8 074B     		ldr	r3, .L98+16
 1923 00ea 1A70     		strb	r2, [r3]
2346:Generated_Source\PSoC4/CapSense_SensingCSD_LL.c **** #endif /* ((CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) || \
 1924              		.loc 1 2346 0
 1925 00ec 2800     		movs	r0, r5
 1926 00ee 04B0     		add	sp, sp, #16
 1927              		@ sp needed
 1928              	.LVL197:
 1929              	.LVL198:
 1930              	.LVL199:
 1931              	.LVL200:
 1932 00f0 04BC     		pop	{r2}
 1933 00f2 9146     		mov	r9, r2
 1934 00f4 F0BD     		pop	{r4, r5, r6, r7, pc}
 1935              	.L99:
 1936 00f6 C046     		.align	2
 1937              	.L98:
 1938 00f8 00000000 		.word	CapSense_dsFlash
 1939 00fc 00000000 		.word	CapSense_widgetIndex
 1940 0100 00000000 		.word	CapSense_CSDPostSingleScan
 1941 0104 00000000 		.word	.LANCHOR0
 1942 0108 00000000 		.word	CapSense_sensorIndex
 1943 010c 00000000 		.word	CapSense_curRamSnsPtr
 1944              		.cfi_endproc
 1945              	.LFE23:
 1946              		.size	CapSense_CSDCalibrateWidget, .-CapSense_CSDCalibrateWidget
 1947              		.global	CapSense_calibratedRawcount
 1948              		.global	CapSense_calibratedIdac
 1949              		.global	CapSense_configCsd
 1950              		.data
 1951              		.align	2
 1952              		.set	.LANCHOR0,. + 0
 1953              		.type	CapSense_configCsd, %object
 1954              		.size	CapSense_configCsd, 4
 1955              	CapSense_configCsd:
 1956 0000 20000004 		.word	67108896
 1957              		.type	CapSense_calibratedIdac, %object
 1958              		.size	CapSense_calibratedIdac, 1
 1959              	CapSense_calibratedIdac:
 1960 0004 01       		.byte	1
 1961 0005 00       		.space	1
 1962              		.type	CapSense_calibratedRawcount, %object
 1963              		.size	CapSense_calibratedRawcount, 2
 1964              	CapSense_calibratedRawcount:
 1965 0006 0100     		.short	1
 1966              		.bss
 1967              		.set	.LANCHOR1,. + 0
 1968              		.type	CapSense_eleCsdDisconnectFlag, %object
 1969              		.size	CapSense_eleCsdDisconnectFlag, 1
 1970              	CapSense_eleCsdDisconnectFlag:
 1971 0000 00       		.space	1
 1972              		.text
 1973              	.Letext0:
 1974              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1975              		.file 3 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 1976              		.file 4 "Generated_Source\\PSoC4\\CapSense_SmartSense_LL.h"
 1977              		.file 5 "Generated_Source\\PSoC4\\CapSense_Structure.h"
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 86


 1978              		.file 6 "Generated_Source\\PSoC4\\CapSense_Sensing.h"
 1979              		.file 7 "Generated_Source\\PSoC4/CyLib.h"
 1980              		.file 8 "Generated_Source\\PSoC4\\CapSense_ISR.h"
 1981              		.section	.debug_info,"",%progbits
 1982              	.Ldebug_info0:
 1983 0000 71110000 		.4byte	0x1171
 1984 0004 0400     		.2byte	0x4
 1985 0006 00000000 		.4byte	.Ldebug_abbrev0
 1986 000a 04       		.byte	0x4
 1987 000b 01       		.uleb128 0x1
 1988 000c 17020000 		.4byte	.LASF181
 1989 0010 0C       		.byte	0xc
 1990 0011 85060000 		.4byte	.LASF182
 1991 0015 060C0000 		.4byte	.LASF183
 1992 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1993 001d 00000000 		.4byte	0
 1994 0021 00000000 		.4byte	.Ldebug_line0
 1995 0025 02       		.uleb128 0x2
 1996 0026 01       		.byte	0x1
 1997 0027 06       		.byte	0x6
 1998 0028 200B0000 		.4byte	.LASF0
 1999 002c 02       		.uleb128 0x2
 2000 002d 01       		.byte	0x1
 2001 002e 08       		.byte	0x8
 2002 002f 160A0000 		.4byte	.LASF1
 2003 0033 02       		.uleb128 0x2
 2004 0034 02       		.byte	0x2
 2005 0035 05       		.byte	0x5
 2006 0036 90070000 		.4byte	.LASF2
 2007 003a 02       		.uleb128 0x2
 2008 003b 02       		.byte	0x2
 2009 003c 07       		.byte	0x7
 2010 003d 480B0000 		.4byte	.LASF3
 2011 0041 02       		.uleb128 0x2
 2012 0042 04       		.byte	0x4
 2013 0043 05       		.byte	0x5
 2014 0044 ED070000 		.4byte	.LASF4
 2015 0048 02       		.uleb128 0x2
 2016 0049 04       		.byte	0x4
 2017 004a 07       		.byte	0x7
 2018 004b 37090000 		.4byte	.LASF5
 2019 004f 02       		.uleb128 0x2
 2020 0050 08       		.byte	0x8
 2021 0051 05       		.byte	0x5
 2022 0052 2E050000 		.4byte	.LASF6
 2023 0056 02       		.uleb128 0x2
 2024 0057 08       		.byte	0x8
 2025 0058 07       		.byte	0x7
 2026 0059 ED020000 		.4byte	.LASF7
 2027 005d 03       		.uleb128 0x3
 2028 005e 04       		.byte	0x4
 2029 005f 05       		.byte	0x5
 2030 0060 696E7400 		.ascii	"int\000"
 2031 0064 02       		.uleb128 0x2
 2032 0065 04       		.byte	0x4
 2033 0066 07       		.byte	0x7
 2034 0067 B9000000 		.4byte	.LASF8
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 87


 2035 006b 04       		.uleb128 0x4
 2036 006c 740B0000 		.4byte	.LASF9
 2037 0070 02       		.byte	0x2
 2038 0071 E401     		.2byte	0x1e4
 2039 0073 2C000000 		.4byte	0x2c
 2040 0077 04       		.uleb128 0x4
 2041 0078 DC040000 		.4byte	.LASF10
 2042 007c 02       		.byte	0x2
 2043 007d E501     		.2byte	0x1e5
 2044 007f 3A000000 		.4byte	0x3a
 2045 0083 04       		.uleb128 0x4
 2046 0084 1F060000 		.4byte	.LASF11
 2047 0088 02       		.byte	0x2
 2048 0089 E601     		.2byte	0x1e6
 2049 008b 48000000 		.4byte	0x48
 2050 008f 02       		.uleb128 0x2
 2051 0090 04       		.byte	0x4
 2052 0091 04       		.byte	0x4
 2053 0092 D6010000 		.4byte	.LASF12
 2054 0096 02       		.uleb128 0x2
 2055 0097 08       		.byte	0x8
 2056 0098 04       		.byte	0x4
 2057 0099 7A0B0000 		.4byte	.LASF13
 2058 009d 02       		.uleb128 0x2
 2059 009e 01       		.byte	0x1
 2060 009f 08       		.byte	0x8
 2061 00a0 91040000 		.4byte	.LASF14
 2062 00a4 04       		.uleb128 0x4
 2063 00a5 F0090000 		.4byte	.LASF15
 2064 00a9 02       		.byte	0x2
 2065 00aa 8602     		.2byte	0x286
 2066 00ac 48000000 		.4byte	0x48
 2067 00b0 05       		.uleb128 0x5
 2068 00b1 6B000000 		.4byte	0x6b
 2069 00b5 04       		.uleb128 0x4
 2070 00b6 F7060000 		.4byte	.LASF16
 2071 00ba 02       		.byte	0x2
 2072 00bb 9002     		.2byte	0x290
 2073 00bd C1000000 		.4byte	0xc1
 2074 00c1 05       		.uleb128 0x5
 2075 00c2 83000000 		.4byte	0x83
 2076 00c6 04       		.uleb128 0x4
 2077 00c7 530A0000 		.4byte	.LASF17
 2078 00cb 03       		.byte	0x3
 2079 00cc 2201     		.2byte	0x122
 2080 00ce 77000000 		.4byte	0x77
 2081 00d2 04       		.uleb128 0x4
 2082 00d3 04050000 		.4byte	.LASF18
 2083 00d7 03       		.byte	0x3
 2084 00d8 2601     		.2byte	0x126
 2085 00da 6B000000 		.4byte	0x6b
 2086 00de 06       		.uleb128 0x6
 2087 00df 0C       		.byte	0xc
 2088 00e0 04       		.byte	0x4
 2089 00e1 6E       		.byte	0x6e
 2090 00e2 3B010000 		.4byte	0x13b
 2091 00e6 07       		.uleb128 0x7
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 88


 2092 00e7 8F0B0000 		.4byte	.LASF19
 2093 00eb 04       		.byte	0x4
 2094 00ec 73       		.byte	0x73
 2095 00ed 77000000 		.4byte	0x77
 2096 00f1 00       		.byte	0
 2097 00f2 07       		.uleb128 0x7
 2098 00f3 960B0000 		.4byte	.LASF20
 2099 00f7 04       		.byte	0x4
 2100 00f8 77       		.byte	0x77
 2101 00f9 77000000 		.4byte	0x77
 2102 00fd 02       		.byte	0x2
 2103 00fe 07       		.uleb128 0x7
 2104 00ff 9D0B0000 		.4byte	.LASF21
 2105 0103 04       		.byte	0x4
 2106 0104 7B       		.byte	0x7b
 2107 0105 77000000 		.4byte	0x77
 2108 0109 04       		.byte	0x4
 2109 010a 07       		.uleb128 0x7
 2110 010b A40B0000 		.4byte	.LASF22
 2111 010f 04       		.byte	0x4
 2112 0110 7F       		.byte	0x7f
 2113 0111 77000000 		.4byte	0x77
 2114 0115 06       		.byte	0x6
 2115 0116 07       		.uleb128 0x7
 2116 0117 AB0B0000 		.4byte	.LASF23
 2117 011b 04       		.byte	0x4
 2118 011c 83       		.byte	0x83
 2119 011d 77000000 		.4byte	0x77
 2120 0121 08       		.byte	0x8
 2121 0122 07       		.uleb128 0x7
 2122 0123 B20B0000 		.4byte	.LASF24
 2123 0127 04       		.byte	0x4
 2124 0128 87       		.byte	0x87
 2125 0129 6B000000 		.4byte	0x6b
 2126 012d 0A       		.byte	0xa
 2127 012e 07       		.uleb128 0x7
 2128 012f B90B0000 		.4byte	.LASF25
 2129 0133 04       		.byte	0x4
 2130 0134 8B       		.byte	0x8b
 2131 0135 6B000000 		.4byte	0x6b
 2132 0139 0B       		.byte	0xb
 2133 013a 00       		.byte	0
 2134 013b 08       		.uleb128 0x8
 2135 013c 52040000 		.4byte	.LASF26
 2136 0140 04       		.byte	0x4
 2137 0141 8C       		.byte	0x8c
 2138 0142 DE000000 		.4byte	0xde
 2139 0146 09       		.uleb128 0x9
 2140 0147 01       		.byte	0x1
 2141 0148 2C000000 		.4byte	0x2c
 2142 014c 05       		.byte	0x5
 2143 014d 6F       		.byte	0x6f
 2144 014e 71010000 		.4byte	0x171
 2145 0152 0A       		.uleb128 0xa
 2146 0153 A4000000 		.4byte	.LASF27
 2147 0157 00       		.byte	0
 2148 0158 0A       		.uleb128 0xa
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 89


 2149 0159 0A090000 		.4byte	.LASF28
 2150 015d 01       		.byte	0x1
 2151 015e 0A       		.uleb128 0xa
 2152 015f 31080000 		.4byte	.LASF29
 2153 0163 02       		.byte	0x2
 2154 0164 0A       		.uleb128 0xa
 2155 0165 7C0A0000 		.4byte	.LASF30
 2156 0169 03       		.byte	0x3
 2157 016a 0A       		.uleb128 0xa
 2158 016b B5060000 		.4byte	.LASF31
 2159 016f 04       		.byte	0x4
 2160 0170 00       		.byte	0
 2161 0171 06       		.uleb128 0x6
 2162 0172 12       		.byte	0x12
 2163 0173 05       		.byte	0x5
 2164 0174 8D       		.byte	0x8d
 2165 0175 0A020000 		.4byte	0x20a
 2166 0179 07       		.uleb128 0x7
 2167 017a F2040000 		.4byte	.LASF32
 2168 017e 05       		.byte	0x5
 2169 017f 92       		.byte	0x92
 2170 0180 77000000 		.4byte	0x77
 2171 0184 00       		.byte	0
 2172 0185 07       		.uleb128 0x7
 2173 0186 A1090000 		.4byte	.LASF33
 2174 018a 05       		.byte	0x5
 2175 018b 97       		.byte	0x97
 2176 018c C6000000 		.4byte	0xc6
 2177 0190 02       		.byte	0x2
 2178 0191 07       		.uleb128 0x7
 2179 0192 77040000 		.4byte	.LASF34
 2180 0196 05       		.byte	0x5
 2181 0197 9C       		.byte	0x9c
 2182 0198 6B000000 		.4byte	0x6b
 2183 019c 04       		.byte	0x4
 2184 019d 07       		.uleb128 0x7
 2185 019e C9050000 		.4byte	.LASF35
 2186 01a2 05       		.byte	0x5
 2187 01a3 A1       		.byte	0xa1
 2188 01a4 6B000000 		.4byte	0x6b
 2189 01a8 05       		.byte	0x5
 2190 01a9 07       		.uleb128 0x7
 2191 01aa E0030000 		.4byte	.LASF36
 2192 01ae 05       		.byte	0x5
 2193 01af A7       		.byte	0xa7
 2194 01b0 6B000000 		.4byte	0x6b
 2195 01b4 06       		.byte	0x6
 2196 01b5 07       		.uleb128 0x7
 2197 01b6 5D050000 		.4byte	.LASF37
 2198 01ba 05       		.byte	0x5
 2199 01bb AD       		.byte	0xad
 2200 01bc 6B000000 		.4byte	0x6b
 2201 01c0 07       		.byte	0x7
 2202 01c1 07       		.uleb128 0x7
 2203 01c2 0D040000 		.4byte	.LASF38
 2204 01c6 05       		.byte	0x5
 2205 01c7 B4       		.byte	0xb4
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 90


 2206 01c8 D2000000 		.4byte	0xd2
 2207 01cc 08       		.byte	0x8
 2208 01cd 07       		.uleb128 0x7
 2209 01ce 49090000 		.4byte	.LASF39
 2210 01d2 05       		.byte	0x5
 2211 01d3 BB       		.byte	0xbb
 2212 01d4 0A020000 		.4byte	0x20a
 2213 01d8 09       		.byte	0x9
 2214 01d9 07       		.uleb128 0x7
 2215 01da C60A0000 		.4byte	.LASF40
 2216 01de 05       		.byte	0x5
 2217 01df C3       		.byte	0xc3
 2218 01e0 77000000 		.4byte	0x77
 2219 01e4 0A       		.byte	0xa
 2220 01e5 07       		.uleb128 0x7
 2221 01e6 52070000 		.4byte	.LASF41
 2222 01ea 05       		.byte	0x5
 2223 01eb C8       		.byte	0xc8
 2224 01ec 6B000000 		.4byte	0x6b
 2225 01f0 0C       		.byte	0xc
 2226 01f1 07       		.uleb128 0x7
 2227 01f2 C3080000 		.4byte	.LASF42
 2228 01f6 05       		.byte	0x5
 2229 01f7 CE       		.byte	0xce
 2230 01f8 77000000 		.4byte	0x77
 2231 01fc 0E       		.byte	0xe
 2232 01fd 07       		.uleb128 0x7
 2233 01fe D9030000 		.4byte	.LASF43
 2234 0202 05       		.byte	0x5
 2235 0203 D3       		.byte	0xd3
 2236 0204 77000000 		.4byte	0x77
 2237 0208 10       		.byte	0x10
 2238 0209 00       		.byte	0
 2239 020a 0B       		.uleb128 0xb
 2240 020b 6B000000 		.4byte	0x6b
 2241 020f 1A020000 		.4byte	0x21a
 2242 0213 0C       		.uleb128 0xc
 2243 0214 1A020000 		.4byte	0x21a
 2244 0218 00       		.byte	0
 2245 0219 00       		.byte	0
 2246 021a 02       		.uleb128 0x2
 2247 021b 04       		.byte	0x4
 2248 021c 07       		.byte	0x7
 2249 021d 26090000 		.4byte	.LASF44
 2250 0221 08       		.uleb128 0x8
 2251 0222 FA050000 		.4byte	.LASF45
 2252 0226 05       		.byte	0x5
 2253 0227 D4       		.byte	0xd4
 2254 0228 71010000 		.4byte	0x171
 2255 022c 06       		.uleb128 0x6
 2256 022d 12       		.byte	0x12
 2257 022e 05       		.byte	0x5
 2258 022f D9       		.byte	0xd9
 2259 0230 CB020000 		.4byte	0x2cb
 2260 0234 07       		.uleb128 0x7
 2261 0235 F2040000 		.4byte	.LASF32
 2262 0239 05       		.byte	0x5
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 91


 2263 023a DE       		.byte	0xde
 2264 023b 77000000 		.4byte	0x77
 2265 023f 00       		.byte	0
 2266 0240 07       		.uleb128 0x7
 2267 0241 A1090000 		.4byte	.LASF33
 2268 0245 05       		.byte	0x5
 2269 0246 E3       		.byte	0xe3
 2270 0247 C6000000 		.4byte	0xc6
 2271 024b 02       		.byte	0x2
 2272 024c 07       		.uleb128 0x7
 2273 024d 77040000 		.4byte	.LASF34
 2274 0251 05       		.byte	0x5
 2275 0252 E8       		.byte	0xe8
 2276 0253 6B000000 		.4byte	0x6b
 2277 0257 04       		.byte	0x4
 2278 0258 07       		.uleb128 0x7
 2279 0259 C9050000 		.4byte	.LASF35
 2280 025d 05       		.byte	0x5
 2281 025e ED       		.byte	0xed
 2282 025f 6B000000 		.4byte	0x6b
 2283 0263 05       		.byte	0x5
 2284 0264 07       		.uleb128 0x7
 2285 0265 E0030000 		.4byte	.LASF36
 2286 0269 05       		.byte	0x5
 2287 026a F3       		.byte	0xf3
 2288 026b 6B000000 		.4byte	0x6b
 2289 026f 06       		.byte	0x6
 2290 0270 07       		.uleb128 0x7
 2291 0271 5D050000 		.4byte	.LASF37
 2292 0275 05       		.byte	0x5
 2293 0276 F9       		.byte	0xf9
 2294 0277 6B000000 		.4byte	0x6b
 2295 027b 07       		.byte	0x7
 2296 027c 0D       		.uleb128 0xd
 2297 027d 0D040000 		.4byte	.LASF38
 2298 0281 05       		.byte	0x5
 2299 0282 0001     		.2byte	0x100
 2300 0284 D2000000 		.4byte	0xd2
 2301 0288 08       		.byte	0x8
 2302 0289 0D       		.uleb128 0xd
 2303 028a 49090000 		.4byte	.LASF39
 2304 028e 05       		.byte	0x5
 2305 028f 0701     		.2byte	0x107
 2306 0291 0A020000 		.4byte	0x20a
 2307 0295 09       		.byte	0x9
 2308 0296 0D       		.uleb128 0xd
 2309 0297 C60A0000 		.4byte	.LASF40
 2310 029b 05       		.byte	0x5
 2311 029c 0F01     		.2byte	0x10f
 2312 029e 77000000 		.4byte	0x77
 2313 02a2 0A       		.byte	0xa
 2314 02a3 0D       		.uleb128 0xd
 2315 02a4 52070000 		.4byte	.LASF41
 2316 02a8 05       		.byte	0x5
 2317 02a9 1401     		.2byte	0x114
 2318 02ab 6B000000 		.4byte	0x6b
 2319 02af 0C       		.byte	0xc
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 92


 2320 02b0 0D       		.uleb128 0xd
 2321 02b1 C3080000 		.4byte	.LASF42
 2322 02b5 05       		.byte	0x5
 2323 02b6 1A01     		.2byte	0x11a
 2324 02b8 77000000 		.4byte	0x77
 2325 02bc 0E       		.byte	0xe
 2326 02bd 0D       		.uleb128 0xd
 2327 02be D9030000 		.4byte	.LASF43
 2328 02c2 05       		.byte	0x5
 2329 02c3 1F01     		.2byte	0x11f
 2330 02c5 77000000 		.4byte	0x77
 2331 02c9 10       		.byte	0x10
 2332 02ca 00       		.byte	0
 2333 02cb 04       		.uleb128 0x4
 2334 02cc D2090000 		.4byte	.LASF46
 2335 02d0 05       		.byte	0x5
 2336 02d1 2001     		.2byte	0x120
 2337 02d3 2C020000 		.4byte	0x22c
 2338 02d7 0E       		.uleb128 0xe
 2339 02d8 14       		.byte	0x14
 2340 02d9 05       		.byte	0x5
 2341 02da 2501     		.2byte	0x125
 2342 02dc 8A030000 		.4byte	0x38a
 2343 02e0 0D       		.uleb128 0xd
 2344 02e1 F2040000 		.4byte	.LASF32
 2345 02e5 05       		.byte	0x5
 2346 02e6 2A01     		.2byte	0x12a
 2347 02e8 77000000 		.4byte	0x77
 2348 02ec 00       		.byte	0
 2349 02ed 0D       		.uleb128 0xd
 2350 02ee A1090000 		.4byte	.LASF33
 2351 02f2 05       		.byte	0x5
 2352 02f3 2F01     		.2byte	0x12f
 2353 02f5 C6000000 		.4byte	0xc6
 2354 02f9 02       		.byte	0x2
 2355 02fa 0D       		.uleb128 0xd
 2356 02fb 77040000 		.4byte	.LASF34
 2357 02ff 05       		.byte	0x5
 2358 0300 3401     		.2byte	0x134
 2359 0302 6B000000 		.4byte	0x6b
 2360 0306 04       		.byte	0x4
 2361 0307 0D       		.uleb128 0xd
 2362 0308 C9050000 		.4byte	.LASF35
 2363 030c 05       		.byte	0x5
 2364 030d 3901     		.2byte	0x139
 2365 030f 6B000000 		.4byte	0x6b
 2366 0313 05       		.byte	0x5
 2367 0314 0D       		.uleb128 0xd
 2368 0315 E0030000 		.4byte	.LASF36
 2369 0319 05       		.byte	0x5
 2370 031a 3F01     		.2byte	0x13f
 2371 031c 6B000000 		.4byte	0x6b
 2372 0320 06       		.byte	0x6
 2373 0321 0D       		.uleb128 0xd
 2374 0322 5D050000 		.4byte	.LASF37
 2375 0326 05       		.byte	0x5
 2376 0327 4501     		.2byte	0x145
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 93


 2377 0329 6B000000 		.4byte	0x6b
 2378 032d 07       		.byte	0x7
 2379 032e 0D       		.uleb128 0xd
 2380 032f 0D040000 		.4byte	.LASF38
 2381 0333 05       		.byte	0x5
 2382 0334 4C01     		.2byte	0x14c
 2383 0336 D2000000 		.4byte	0xd2
 2384 033a 08       		.byte	0x8
 2385 033b 0D       		.uleb128 0xd
 2386 033c 49090000 		.4byte	.LASF39
 2387 0340 05       		.byte	0x5
 2388 0341 5301     		.2byte	0x153
 2389 0343 0A020000 		.4byte	0x20a
 2390 0347 09       		.byte	0x9
 2391 0348 0D       		.uleb128 0xd
 2392 0349 C60A0000 		.4byte	.LASF40
 2393 034d 05       		.byte	0x5
 2394 034e 5B01     		.2byte	0x15b
 2395 0350 77000000 		.4byte	0x77
 2396 0354 0A       		.byte	0xa
 2397 0355 0D       		.uleb128 0xd
 2398 0356 52070000 		.4byte	.LASF41
 2399 035a 05       		.byte	0x5
 2400 035b 6001     		.2byte	0x160
 2401 035d 6B000000 		.4byte	0x6b
 2402 0361 0C       		.byte	0xc
 2403 0362 0D       		.uleb128 0xd
 2404 0363 C3080000 		.4byte	.LASF42
 2405 0367 05       		.byte	0x5
 2406 0368 6601     		.2byte	0x166
 2407 036a 77000000 		.4byte	0x77
 2408 036e 0E       		.byte	0xe
 2409 036f 0D       		.uleb128 0xd
 2410 0370 D9030000 		.4byte	.LASF43
 2411 0374 05       		.byte	0x5
 2412 0375 6B01     		.2byte	0x16b
 2413 0377 77000000 		.4byte	0x77
 2414 037b 10       		.byte	0x10
 2415 037c 0D       		.uleb128 0xd
 2416 037d E00B0000 		.4byte	.LASF47
 2417 0381 05       		.byte	0x5
 2418 0382 7001     		.2byte	0x170
 2419 0384 8A030000 		.4byte	0x38a
 2420 0388 12       		.byte	0x12
 2421 0389 00       		.byte	0
 2422 038a 0B       		.uleb128 0xb
 2423 038b 77000000 		.4byte	0x77
 2424 038f 9A030000 		.4byte	0x39a
 2425 0393 0C       		.uleb128 0xc
 2426 0394 1A020000 		.4byte	0x21a
 2427 0398 00       		.byte	0
 2428 0399 00       		.byte	0
 2429 039a 04       		.uleb128 0x4
 2430 039b EC080000 		.4byte	.LASF48
 2431 039f 05       		.byte	0x5
 2432 03a0 7101     		.2byte	0x171
 2433 03a2 D7020000 		.4byte	0x2d7
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 94


 2434 03a6 0E       		.uleb128 0xe
 2435 03a7 4A       		.byte	0x4a
 2436 03a8 05       		.byte	0x5
 2437 03a9 7701     		.2byte	0x177
 2438 03ab E4030000 		.4byte	0x3e4
 2439 03af 0D       		.uleb128 0xd
 2440 03b0 18040000 		.4byte	.LASF49
 2441 03b4 05       		.byte	0x5
 2442 03b5 7C01     		.2byte	0x17c
 2443 03b7 CB020000 		.4byte	0x2cb
 2444 03bb 00       		.byte	0
 2445 03bc 0D       		.uleb128 0xd
 2446 03bd 1D040000 		.4byte	.LASF50
 2447 03c1 05       		.byte	0x5
 2448 03c2 8101     		.2byte	0x181
 2449 03c4 CB020000 		.4byte	0x2cb
 2450 03c8 12       		.byte	0x12
 2451 03c9 0D       		.uleb128 0xd
 2452 03ca 22040000 		.4byte	.LASF51
 2453 03ce 05       		.byte	0x5
 2454 03cf 8601     		.2byte	0x186
 2455 03d1 CB020000 		.4byte	0x2cb
 2456 03d5 24       		.byte	0x24
 2457 03d6 0F       		.uleb128 0xf
 2458 03d7 736C6400 		.ascii	"sld\000"
 2459 03db 05       		.byte	0x5
 2460 03dc 8B01     		.2byte	0x18b
 2461 03de 9A030000 		.4byte	0x39a
 2462 03e2 36       		.byte	0x36
 2463 03e3 00       		.byte	0
 2464 03e4 04       		.uleb128 0x4
 2465 03e5 6A010000 		.4byte	.LASF52
 2466 03e9 05       		.byte	0x5
 2467 03ea 8C01     		.2byte	0x18c
 2468 03ec A6030000 		.4byte	0x3a6
 2469 03f0 0E       		.uleb128 0xe
 2470 03f1 0A       		.byte	0xa
 2471 03f2 05       		.byte	0x5
 2472 03f3 9201     		.2byte	0x192
 2473 03f5 48040000 		.4byte	0x448
 2474 03f9 0F       		.uleb128 0xf
 2475 03fa 72617700 		.ascii	"raw\000"
 2476 03fe 05       		.byte	0x5
 2477 03ff 9701     		.2byte	0x197
 2478 0401 8A030000 		.4byte	0x38a
 2479 0405 00       		.byte	0
 2480 0406 0D       		.uleb128 0xd
 2481 0407 430B0000 		.4byte	.LASF53
 2482 040b 05       		.byte	0x5
 2483 040c 9C01     		.2byte	0x19c
 2484 040e 8A030000 		.4byte	0x38a
 2485 0412 02       		.byte	0x2
 2486 0413 0D       		.uleb128 0xd
 2487 0414 CA090000 		.4byte	.LASF54
 2488 0418 05       		.byte	0x5
 2489 0419 A201     		.2byte	0x1a2
 2490 041b 0A020000 		.4byte	0x20a
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 95


 2491 041f 04       		.byte	0x4
 2492 0420 0D       		.uleb128 0xd
 2493 0421 01080000 		.4byte	.LASF55
 2494 0425 05       		.byte	0x5
 2495 0426 A701     		.2byte	0x1a7
 2496 0428 C6000000 		.4byte	0xc6
 2497 042c 06       		.byte	0x6
 2498 042d 0D       		.uleb128 0xd
 2499 042e 810B0000 		.4byte	.LASF56
 2500 0432 05       		.byte	0x5
 2501 0433 AC01     		.2byte	0x1ac
 2502 0435 48040000 		.4byte	0x448
 2503 0439 08       		.byte	0x8
 2504 043a 0D       		.uleb128 0xd
 2505 043b 1F050000 		.4byte	.LASF57
 2506 043f 05       		.byte	0x5
 2507 0440 B101     		.2byte	0x1b1
 2508 0442 0A020000 		.4byte	0x20a
 2509 0446 09       		.byte	0x9
 2510 0447 00       		.byte	0
 2511 0448 0B       		.uleb128 0xb
 2512 0449 D2000000 		.4byte	0xd2
 2513 044d 58040000 		.4byte	0x458
 2514 0451 0C       		.uleb128 0xc
 2515 0452 1A020000 		.4byte	0x21a
 2516 0456 00       		.byte	0
 2517 0457 00       		.byte	0
 2518 0458 04       		.uleb128 0x4
 2519 0459 B4030000 		.4byte	.LASF58
 2520 045d 05       		.byte	0x5
 2521 045e B201     		.2byte	0x1b2
 2522 0460 F0030000 		.4byte	0x3f0
 2523 0464 0E       		.uleb128 0xe
 2524 0465 50       		.byte	0x50
 2525 0466 05       		.byte	0x5
 2526 0467 B801     		.2byte	0x1b8
 2527 0469 A2040000 		.4byte	0x4a2
 2528 046d 0D       		.uleb128 0xd
 2529 046e 18040000 		.4byte	.LASF49
 2530 0472 05       		.byte	0x5
 2531 0473 BD01     		.2byte	0x1bd
 2532 0475 A2040000 		.4byte	0x4a2
 2533 0479 00       		.byte	0
 2534 047a 0D       		.uleb128 0xd
 2535 047b 1D040000 		.4byte	.LASF50
 2536 047f 05       		.byte	0x5
 2537 0480 C201     		.2byte	0x1c2
 2538 0482 A2040000 		.4byte	0x4a2
 2539 0486 0A       		.byte	0xa
 2540 0487 0D       		.uleb128 0xd
 2541 0488 22040000 		.4byte	.LASF51
 2542 048c 05       		.byte	0x5
 2543 048d C701     		.2byte	0x1c7
 2544 048f A2040000 		.4byte	0x4a2
 2545 0493 14       		.byte	0x14
 2546 0494 0F       		.uleb128 0xf
 2547 0495 736C6400 		.ascii	"sld\000"
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 96


 2548 0499 05       		.byte	0x5
 2549 049a CC01     		.2byte	0x1cc
 2550 049c B2040000 		.4byte	0x4b2
 2551 04a0 1E       		.byte	0x1e
 2552 04a1 00       		.byte	0
 2553 04a2 0B       		.uleb128 0xb
 2554 04a3 58040000 		.4byte	0x458
 2555 04a7 B2040000 		.4byte	0x4b2
 2556 04ab 0C       		.uleb128 0xc
 2557 04ac 1A020000 		.4byte	0x21a
 2558 04b0 00       		.byte	0
 2559 04b1 00       		.byte	0
 2560 04b2 0B       		.uleb128 0xb
 2561 04b3 58040000 		.4byte	0x458
 2562 04b7 C2040000 		.4byte	0x4c2
 2563 04bb 0C       		.uleb128 0xc
 2564 04bc 1A020000 		.4byte	0x21a
 2565 04c0 04       		.byte	0x4
 2566 04c1 00       		.byte	0
 2567 04c2 04       		.uleb128 0x4
 2568 04c3 E90B0000 		.4byte	.LASF59
 2569 04c7 05       		.byte	0x5
 2570 04c8 CD01     		.2byte	0x1cd
 2571 04ca 64040000 		.4byte	0x464
 2572 04ce 0E       		.uleb128 0xe
 2573 04cf C0       		.byte	0xc0
 2574 04d0 05       		.byte	0x5
 2575 04d1 D301     		.2byte	0x1d3
 2576 04d3 C2050000 		.4byte	0x5c2
 2577 04d7 0D       		.uleb128 0xd
 2578 04d8 10070000 		.4byte	.LASF60
 2579 04dc 05       		.byte	0x5
 2580 04dd DA01     		.2byte	0x1da
 2581 04df 77000000 		.4byte	0x77
 2582 04e3 00       		.byte	0
 2583 04e4 0D       		.uleb128 0xd
 2584 04e5 CE0B0000 		.4byte	.LASF61
 2585 04e9 05       		.byte	0x5
 2586 04ea DF01     		.2byte	0x1df
 2587 04ec 77000000 		.4byte	0x77
 2588 04f0 02       		.byte	0x2
 2589 04f1 0D       		.uleb128 0xd
 2590 04f2 D2000000 		.4byte	.LASF62
 2591 04f6 05       		.byte	0x5
 2592 04f7 E401     		.2byte	0x1e4
 2593 04f9 77000000 		.4byte	0x77
 2594 04fd 04       		.byte	0x4
 2595 04fe 0D       		.uleb128 0xd
 2596 04ff 20080000 		.4byte	.LASF63
 2597 0503 05       		.byte	0x5
 2598 0504 EA01     		.2byte	0x1ea
 2599 0506 77000000 		.4byte	0x77
 2600 050a 06       		.byte	0x6
 2601 050b 0D       		.uleb128 0xd
 2602 050c C6000000 		.4byte	.LASF64
 2603 0510 05       		.byte	0x5
 2604 0511 EF01     		.2byte	0x1ef
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 97


 2605 0513 77000000 		.4byte	0x77
 2606 0517 08       		.byte	0x8
 2607 0518 0D       		.uleb128 0xd
 2608 0519 FD040000 		.4byte	.LASF65
 2609 051d 05       		.byte	0x5
 2610 051e F401     		.2byte	0x1f4
 2611 0520 C1000000 		.4byte	0xc1
 2612 0524 0C       		.byte	0xc
 2613 0525 0D       		.uleb128 0xd
 2614 0526 F6070000 		.4byte	.LASF66
 2615 052a 05       		.byte	0x5
 2616 052b FA01     		.2byte	0x1fa
 2617 052d C2050000 		.4byte	0x5c2
 2618 0531 10       		.byte	0x10
 2619 0532 0D       		.uleb128 0xd
 2620 0533 E1080000 		.4byte	.LASF67
 2621 0537 05       		.byte	0x5
 2622 0538 0102     		.2byte	0x201
 2623 053a C2050000 		.4byte	0x5c2
 2624 053e 14       		.byte	0x14
 2625 053f 0D       		.uleb128 0xd
 2626 0540 48070000 		.4byte	.LASF68
 2627 0544 05       		.byte	0x5
 2628 0545 1102     		.2byte	0x211
 2629 0547 D2050000 		.4byte	0x5d2
 2630 054b 18       		.byte	0x18
 2631 054c 0D       		.uleb128 0xd
 2632 054d D2050000 		.4byte	.LASF69
 2633 0551 05       		.byte	0x5
 2634 0552 1702     		.2byte	0x217
 2635 0554 77000000 		.4byte	0x77
 2636 0558 1C       		.byte	0x1c
 2637 0559 0D       		.uleb128 0xd
 2638 055a AA030000 		.4byte	.LASF70
 2639 055e 05       		.byte	0x5
 2640 055f 1C02     		.2byte	0x21c
 2641 0561 6B000000 		.4byte	0x6b
 2642 0565 1E       		.byte	0x1e
 2643 0566 0D       		.uleb128 0xd
 2644 0567 3D0A0000 		.4byte	.LASF71
 2645 056b 05       		.byte	0x5
 2646 056c 2102     		.2byte	0x221
 2647 056e 6B000000 		.4byte	0x6b
 2648 0572 1F       		.byte	0x1f
 2649 0573 0D       		.uleb128 0xd
 2650 0574 78050000 		.4byte	.LASF72
 2651 0578 05       		.byte	0x5
 2652 0579 2602     		.2byte	0x226
 2653 057b E4030000 		.4byte	0x3e4
 2654 057f 20       		.byte	0x20
 2655 0580 0D       		.uleb128 0xd
 2656 0581 E5020000 		.4byte	.LASF73
 2657 0585 05       		.byte	0x5
 2658 0586 2B02     		.2byte	0x22b
 2659 0588 C2040000 		.4byte	0x4c2
 2660 058c 6A       		.byte	0x6a
 2661 058d 0D       		.uleb128 0xd
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 98


 2662 058e 94000000 		.4byte	.LASF74
 2663 0592 05       		.byte	0x5
 2664 0593 3002     		.2byte	0x230
 2665 0595 6B000000 		.4byte	0x6b
 2666 0599 BA       		.byte	0xba
 2667 059a 0D       		.uleb128 0xd
 2668 059b 32030000 		.4byte	.LASF75
 2669 059f 05       		.byte	0x5
 2670 05a0 3502     		.2byte	0x235
 2671 05a2 6B000000 		.4byte	0x6b
 2672 05a6 BB       		.byte	0xbb
 2673 05a7 0D       		.uleb128 0xd
 2674 05a8 FD060000 		.4byte	.LASF76
 2675 05ac 05       		.byte	0x5
 2676 05ad 3A02     		.2byte	0x23a
 2677 05af 77000000 		.4byte	0x77
 2678 05b3 BC       		.byte	0xbc
 2679 05b4 0D       		.uleb128 0xd
 2680 05b5 A6050000 		.4byte	.LASF77
 2681 05b9 05       		.byte	0x5
 2682 05ba 3F02     		.2byte	0x23f
 2683 05bc 8A030000 		.4byte	0x38a
 2684 05c0 BE       		.byte	0xbe
 2685 05c1 00       		.byte	0
 2686 05c2 0B       		.uleb128 0xb
 2687 05c3 83000000 		.4byte	0x83
 2688 05c7 D2050000 		.4byte	0x5d2
 2689 05cb 0C       		.uleb128 0xc
 2690 05cc 1A020000 		.4byte	0x21a
 2691 05d0 00       		.byte	0
 2692 05d1 00       		.byte	0
 2693 05d2 0B       		.uleb128 0xb
 2694 05d3 6B000000 		.4byte	0x6b
 2695 05d7 E2050000 		.4byte	0x5e2
 2696 05db 0C       		.uleb128 0xc
 2697 05dc 1A020000 		.4byte	0x21a
 2698 05e0 03       		.byte	0x3
 2699 05e1 00       		.byte	0
 2700 05e2 04       		.uleb128 0x4
 2701 05e3 9A070000 		.4byte	.LASF78
 2702 05e7 05       		.byte	0x5
 2703 05e8 4002     		.2byte	0x240
 2704 05ea CE040000 		.4byte	0x4ce
 2705 05ee 0E       		.uleb128 0xe
 2706 05ef 1C       		.byte	0x1c
 2707 05f0 05       		.byte	0x5
 2708 05f1 4602     		.2byte	0x246
 2709 05f3 6D060000 		.4byte	0x66d
 2710 05f7 0D       		.uleb128 0xd
 2711 05f8 16060000 		.4byte	.LASF79
 2712 05fc 05       		.byte	0x5
 2713 05fd 4B02     		.2byte	0x24b
 2714 05ff 6D060000 		.4byte	0x66d
 2715 0603 00       		.byte	0
 2716 0604 0D       		.uleb128 0xd
 2717 0605 28050000 		.4byte	.LASF80
 2718 0609 05       		.byte	0x5
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 99


 2719 060a 5002     		.2byte	0x250
 2720 060c 6D060000 		.4byte	0x66d
 2721 0610 04       		.byte	0x4
 2722 0611 0D       		.uleb128 0xd
 2723 0612 D3030000 		.4byte	.LASF81
 2724 0616 05       		.byte	0x5
 2725 0617 5502     		.2byte	0x255
 2726 0619 6D060000 		.4byte	0x66d
 2727 061d 08       		.byte	0x8
 2728 061e 0D       		.uleb128 0xd
 2729 061f 4D080000 		.4byte	.LASF82
 2730 0623 05       		.byte	0x5
 2731 0624 5A02     		.2byte	0x25a
 2732 0626 6D060000 		.4byte	0x66d
 2733 062a 0C       		.byte	0xc
 2734 062b 0D       		.uleb128 0xd
 2735 062c A10A0000 		.4byte	.LASF83
 2736 0630 05       		.byte	0x5
 2737 0631 5F02     		.2byte	0x25f
 2738 0633 83000000 		.4byte	0x83
 2739 0637 10       		.byte	0x10
 2740 0638 0D       		.uleb128 0xd
 2741 0639 64060000 		.4byte	.LASF84
 2742 063d 05       		.byte	0x5
 2743 063e 6402     		.2byte	0x264
 2744 0640 83000000 		.4byte	0x83
 2745 0644 14       		.byte	0x14
 2746 0645 0D       		.uleb128 0xd
 2747 0646 D1040000 		.4byte	.LASF85
 2748 064a 05       		.byte	0x5
 2749 064b 6902     		.2byte	0x269
 2750 064d 6B000000 		.4byte	0x6b
 2751 0651 18       		.byte	0x18
 2752 0652 0D       		.uleb128 0xd
 2753 0653 2F090000 		.4byte	.LASF86
 2754 0657 05       		.byte	0x5
 2755 0658 6E02     		.2byte	0x26e
 2756 065a 6B000000 		.4byte	0x6b
 2757 065e 19       		.byte	0x19
 2758 065f 0D       		.uleb128 0xd
 2759 0660 F6010000 		.4byte	.LASF87
 2760 0664 05       		.byte	0x5
 2761 0665 7302     		.2byte	0x273
 2762 0667 6B000000 		.4byte	0x6b
 2763 066b 1A       		.byte	0x1a
 2764 066c 00       		.byte	0
 2765 066d 10       		.uleb128 0x10
 2766 066e 04       		.byte	0x4
 2767 066f B5000000 		.4byte	0xb5
 2768 0673 04       		.uleb128 0x4
 2769 0674 19030000 		.4byte	.LASF88
 2770 0678 05       		.byte	0x5
 2771 0679 7402     		.2byte	0x274
 2772 067b EE050000 		.4byte	0x5ee
 2773 067f 0E       		.uleb128 0xe
 2774 0680 2C       		.byte	0x2c
 2775 0681 05       		.byte	0x5
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 100


 2776 0682 A702     		.2byte	0x2a7
 2777 0684 4C070000 		.4byte	0x74c
 2778 0688 0D       		.uleb128 0xd
 2779 0689 5B0B0000 		.4byte	.LASF89
 2780 068d 05       		.byte	0x5
 2781 068e B002     		.2byte	0x2b0
 2782 0690 4C070000 		.4byte	0x74c
 2783 0694 00       		.byte	0
 2784 0695 0D       		.uleb128 0xd
 2785 0696 470A0000 		.4byte	.LASF90
 2786 069a 05       		.byte	0x5
 2787 069b B702     		.2byte	0x2b7
 2788 069d 53070000 		.4byte	0x753
 2789 06a1 04       		.byte	0x4
 2790 06a2 0D       		.uleb128 0xd
 2791 06a3 19070000 		.4byte	.LASF91
 2792 06a7 05       		.byte	0x5
 2793 06a8 BD02     		.2byte	0x2bd
 2794 06aa 55070000 		.4byte	0x755
 2795 06ae 08       		.byte	0x8
 2796 06af 0D       		.uleb128 0xd
 2797 06b0 3F060000 		.4byte	.LASF92
 2798 06b4 05       		.byte	0x5
 2799 06b5 C302     		.2byte	0x2c3
 2800 06b7 53070000 		.4byte	0x753
 2801 06bb 0C       		.byte	0xc
 2802 06bc 0D       		.uleb128 0xd
 2803 06bd 66090000 		.4byte	.LASF93
 2804 06c1 05       		.byte	0x5
 2805 06c2 CA02     		.2byte	0x2ca
 2806 06c4 5B070000 		.4byte	0x75b
 2807 06c8 10       		.byte	0x10
 2808 06c9 0D       		.uleb128 0xd
 2809 06ca 240A0000 		.4byte	.LASF94
 2810 06ce 05       		.byte	0x5
 2811 06cf CF02     		.2byte	0x2cf
 2812 06d1 83000000 		.4byte	0x83
 2813 06d5 14       		.byte	0x14
 2814 06d6 0D       		.uleb128 0xd
 2815 06d7 27040000 		.4byte	.LASF95
 2816 06db 05       		.byte	0x5
 2817 06dc D602     		.2byte	0x2d6
 2818 06de 77000000 		.4byte	0x77
 2819 06e2 18       		.byte	0x18
 2820 06e3 0D       		.uleb128 0xd
 2821 06e4 59030000 		.4byte	.LASF96
 2822 06e8 05       		.byte	0x5
 2823 06e9 DD02     		.2byte	0x2dd
 2824 06eb 6B000000 		.4byte	0x6b
 2825 06ef 1A       		.byte	0x1a
 2826 06f0 0D       		.uleb128 0xd
 2827 06f1 310A0000 		.4byte	.LASF97
 2828 06f5 05       		.byte	0x5
 2829 06f6 E302     		.2byte	0x2e3
 2830 06f8 6B000000 		.4byte	0x6b
 2831 06fc 1B       		.byte	0x1b
 2832 06fd 0D       		.uleb128 0xd
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 101


 2833 06fe 3C050000 		.4byte	.LASF98
 2834 0702 05       		.byte	0x5
 2835 0703 ED02     		.2byte	0x2ed
 2836 0705 6B000000 		.4byte	0x6b
 2837 0709 1C       		.byte	0x1c
 2838 070a 0D       		.uleb128 0xd
 2839 070b 990A0000 		.4byte	.LASF99
 2840 070f 05       		.byte	0x5
 2841 0710 F502     		.2byte	0x2f5
 2842 0712 6B000000 		.4byte	0x6b
 2843 0716 1D       		.byte	0x1d
 2844 0717 0D       		.uleb128 0xd
 2845 0718 84070000 		.4byte	.LASF100
 2846 071c 05       		.byte	0x5
 2847 071d FA02     		.2byte	0x2fa
 2848 071f 77000000 		.4byte	0x77
 2849 0723 1E       		.byte	0x1e
 2850 0724 0D       		.uleb128 0xd
 2851 0725 8D090000 		.4byte	.LASF101
 2852 0729 05       		.byte	0x5
 2853 072a 0303     		.2byte	0x303
 2854 072c 83000000 		.4byte	0x83
 2855 0730 20       		.byte	0x20
 2856 0731 0D       		.uleb128 0xd
 2857 0732 42030000 		.4byte	.LASF102
 2858 0736 05       		.byte	0x5
 2859 0737 0B03     		.2byte	0x30b
 2860 0739 61070000 		.4byte	0x761
 2861 073d 24       		.byte	0x24
 2862 073e 0D       		.uleb128 0xd
 2863 073f 86010000 		.4byte	.LASF103
 2864 0743 05       		.byte	0x5
 2865 0744 1003     		.2byte	0x310
 2866 0746 6B000000 		.4byte	0x6b
 2867 074a 28       		.byte	0x28
 2868 074b 00       		.byte	0
 2869 074c 10       		.uleb128 0x10
 2870 074d 04       		.byte	0x4
 2871 074e 52070000 		.4byte	0x752
 2872 0752 11       		.uleb128 0x11
 2873 0753 12       		.uleb128 0x12
 2874 0754 04       		.byte	0x4
 2875 0755 10       		.uleb128 0x10
 2876 0756 04       		.byte	0x4
 2877 0757 58040000 		.4byte	0x458
 2878 075b 10       		.uleb128 0x10
 2879 075c 04       		.byte	0x4
 2880 075d 6B000000 		.4byte	0x6b
 2881 0761 10       		.uleb128 0x10
 2882 0762 04       		.byte	0x4
 2883 0763 3B010000 		.4byte	0x13b
 2884 0767 04       		.uleb128 0x4
 2885 0768 F4030000 		.4byte	.LASF104
 2886 076c 05       		.byte	0x5
 2887 076d 1103     		.2byte	0x311
 2888 076f 7F060000 		.4byte	0x67f
 2889 0773 0E       		.uleb128 0xe
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 102


 2890 0774 B0       		.byte	0xb0
 2891 0775 05       		.byte	0x5
 2892 0776 1703     		.2byte	0x317
 2893 0778 8A070000 		.4byte	0x78a
 2894 077c 0D       		.uleb128 0xd
 2895 077d 740C0000 		.4byte	.LASF105
 2896 0781 05       		.byte	0x5
 2897 0782 1C03     		.2byte	0x31c
 2898 0784 8A070000 		.4byte	0x78a
 2899 0788 00       		.byte	0
 2900 0789 00       		.byte	0
 2901 078a 0B       		.uleb128 0xb
 2902 078b 67070000 		.4byte	0x767
 2903 078f 9A070000 		.4byte	0x79a
 2904 0793 0C       		.uleb128 0xc
 2905 0794 1A020000 		.4byte	0x21a
 2906 0798 03       		.byte	0x3
 2907 0799 00       		.byte	0
 2908 079a 04       		.uleb128 0x4
 2909 079b 81050000 		.4byte	.LASF106
 2910 079f 05       		.byte	0x5
 2911 07a0 1D03     		.2byte	0x31d
 2912 07a2 73070000 		.4byte	0x773
 2913 07a6 02       		.uleb128 0x2
 2914 07a7 08       		.byte	0x8
 2915 07a8 04       		.byte	0x4
 2916 07a9 D1060000 		.4byte	.LASF107
 2917 07ad 13       		.uleb128 0x13
 2918 07ae C8070000 		.4byte	.LASF109
 2919 07b2 01       		.byte	0x1
 2920 07b3 5E01     		.2byte	0x15e
 2921 07b5 00000000 		.4byte	.LFB1
 2922 07b9 10000000 		.4byte	.LFE1-.LFB1
 2923 07bd 01       		.uleb128 0x1
 2924 07be 9C       		.byte	0x9c
 2925 07bf E4070000 		.4byte	0x7e4
 2926 07c3 14       		.uleb128 0x14
 2927 07c4 52070000 		.4byte	.LASF41
 2928 07c8 01       		.byte	0x1
 2929 07c9 5E01     		.2byte	0x15e
 2930 07cb 83000000 		.4byte	0x83
 2931 07cf 00000000 		.4byte	.LLST0
 2932 07d3 14       		.uleb128 0x14
 2933 07d4 C00B0000 		.4byte	.LASF108
 2934 07d8 01       		.byte	0x1
 2935 07d9 5E01     		.2byte	0x15e
 2936 07db 83000000 		.4byte	0x83
 2937 07df 21000000 		.4byte	.LLST1
 2938 07e3 00       		.byte	0
 2939 07e4 15       		.uleb128 0x15
 2940 07e5 F9090000 		.4byte	.LASF110
 2941 07e9 01       		.byte	0x1
 2942 07ea 7E01     		.2byte	0x17e
 2943 07ec 00000000 		.4byte	.LFB2
 2944 07f0 50000000 		.4byte	.LFE2-.LFB2
 2945 07f4 01       		.uleb128 0x1
 2946 07f5 9C       		.byte	0x9c
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 103


 2947 07f6 09080000 		.4byte	0x809
 2948 07fa 16       		.uleb128 0x16
 2949 07fb 75060000 		.4byte	.LASF112
 2950 07ff 01       		.byte	0x1
 2951 0800 8101     		.2byte	0x181
 2952 0802 83000000 		.4byte	0x83
 2953 0806 01       		.uleb128 0x1
 2954 0807 50       		.byte	0x50
 2955 0808 00       		.byte	0
 2956 0809 17       		.uleb128 0x17
 2957 080a E9000000 		.4byte	.LASF184
 2958 080e 01       		.byte	0x1
 2959 080f A701     		.2byte	0x1a7
 2960 0811 00000000 		.4byte	.LFB3
 2961 0815 1C000000 		.4byte	.LFE3-.LFB3
 2962 0819 01       		.uleb128 0x1
 2963 081a 9C       		.byte	0x9c
 2964 081b 13       		.uleb128 0x13
 2965 081c AA090000 		.4byte	.LASF111
 2966 0820 01       		.byte	0x1
 2967 0821 D806     		.2byte	0x6d8
 2968 0823 00000000 		.4byte	.LFB19
 2969 0827 2C000000 		.4byte	.LFE19-.LFB19
 2970 082b 01       		.uleb128 0x1
 2971 082c 9C       		.byte	0x9c
 2972 082d 42080000 		.4byte	0x842
 2973 0831 18       		.uleb128 0x18
 2974 0832 680B0000 		.4byte	.LASF113
 2975 0836 01       		.byte	0x1
 2976 0837 DA06     		.2byte	0x6da
 2977 0839 83000000 		.4byte	0x83
 2978 083d 41000000 		.4byte	.LLST2
 2979 0841 00       		.byte	0
 2980 0842 13       		.uleb128 0x13
 2981 0843 0E000000 		.4byte	.LASF114
 2982 0847 01       		.byte	0x1
 2983 0848 0307     		.2byte	0x703
 2984 084a 00000000 		.4byte	.LFB20
 2985 084e 30000000 		.4byte	.LFE20-.LFB20
 2986 0852 01       		.uleb128 0x1
 2987 0853 9C       		.byte	0x9c
 2988 0854 69080000 		.4byte	0x869
 2989 0858 18       		.uleb128 0x18
 2990 0859 680B0000 		.4byte	.LASF113
 2991 085d 01       		.byte	0x1
 2992 085e 0707     		.2byte	0x707
 2993 0860 83000000 		.4byte	0x83
 2994 0864 7A000000 		.4byte	.LLST3
 2995 0868 00       		.byte	0
 2996 0869 19       		.uleb128 0x19
 2997 086a DD050000 		.4byte	.LASF150
 2998 086e 01       		.byte	0x1
 2999 086f 3107     		.2byte	0x731
 3000 0871 A4000000 		.4byte	0xa4
 3001 0875 00000000 		.4byte	.LFB21
 3002 0879 42000000 		.4byte	.LFE21-.LFB21
 3003 087d 01       		.uleb128 0x1
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 104


 3004 087e 9C       		.byte	0x9c
 3005 087f F2080000 		.4byte	0x8f2
 3006 0883 14       		.uleb128 0x14
 3007 0884 AF010000 		.4byte	.LASF115
 3008 0888 01       		.byte	0x1
 3009 0889 3107     		.2byte	0x731
 3010 088b F2080000 		.4byte	0x8f2
 3011 088f 9C000000 		.4byte	.LLST4
 3012 0893 14       		.uleb128 0x14
 3013 0894 EB030000 		.4byte	.LASF116
 3014 0898 01       		.byte	0x1
 3015 0899 3107     		.2byte	0x731
 3016 089b 83000000 		.4byte	0x83
 3017 089f BD000000 		.4byte	.LLST5
 3018 08a3 14       		.uleb128 0x14
 3019 08a4 5F070000 		.4byte	.LASF117
 3020 08a8 01       		.byte	0x1
 3021 08a9 3107     		.2byte	0x731
 3022 08ab 83000000 		.4byte	0x83
 3023 08af E9000000 		.4byte	.LLST6
 3024 08b3 16       		.uleb128 0x16
 3025 08b4 68050000 		.4byte	.LASF118
 3026 08b8 01       		.byte	0x1
 3027 08b9 3307     		.2byte	0x733
 3028 08bb A4000000 		.4byte	0xa4
 3029 08bf 01       		.uleb128 0x1
 3030 08c0 50       		.byte	0x50
 3031 08c1 18       		.uleb128 0x18
 3032 08c2 B70A0000 		.4byte	.LASF119
 3033 08c6 01       		.byte	0x1
 3034 08c7 3407     		.2byte	0x734
 3035 08c9 83000000 		.4byte	0x83
 3036 08cd 15010000 		.4byte	.LLST7
 3037 08d1 18       		.uleb128 0x18
 3038 08d2 3C070000 		.4byte	.LASF120
 3039 08d6 01       		.byte	0x1
 3040 08d7 3507     		.2byte	0x735
 3041 08d9 83000000 		.4byte	0x83
 3042 08dd 33010000 		.4byte	.LLST8
 3043 08e1 18       		.uleb128 0x18
 3044 08e2 69060000 		.4byte	.LASF121
 3045 08e6 01       		.byte	0x1
 3046 08e7 3607     		.2byte	0x736
 3047 08e9 83000000 		.4byte	0x83
 3048 08ed 7F010000 		.4byte	.LLST9
 3049 08f1 00       		.byte	0
 3050 08f2 10       		.uleb128 0x10
 3051 08f3 04       		.byte	0x4
 3052 08f4 F8080000 		.4byte	0x8f8
 3053 08f8 1A       		.uleb128 0x1a
 3054 08f9 21020000 		.4byte	0x221
 3055 08fd 1B       		.uleb128 0x1b
 3056 08fe 44050000 		.4byte	.LASF122
 3057 0902 01       		.byte	0x1
 3058 0903 DF01     		.2byte	0x1df
 3059 0905 00000000 		.4byte	.LFB4
 3060 0909 14010000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 105


 3061 090d 01       		.uleb128 0x1
 3062 090e 9C       		.byte	0x9c
 3063 090f 51090000 		.4byte	0x951
 3064 0913 18       		.uleb128 0x18
 3065 0914 680B0000 		.4byte	.LASF113
 3066 0918 01       		.byte	0x1
 3067 0919 E101     		.2byte	0x1e1
 3068 091b 83000000 		.4byte	0x83
 3069 091f 9D010000 		.4byte	.LLST10
 3070 0923 1C       		.uleb128 0x1c
 3071 0924 06000000 		.4byte	.LVL32
 3072 0928 FB100000 		.4byte	0x10fb
 3073 092c 1C       		.uleb128 0x1c
 3074 092d 0A000000 		.4byte	.LVL33
 3075 0931 06110000 		.4byte	0x1106
 3076 0935 1C       		.uleb128 0x1c
 3077 0936 82000000 		.4byte	.LVL48
 3078 093a 09080000 		.4byte	0x809
 3079 093e 1C       		.uleb128 0x1c
 3080 093f 8A000000 		.4byte	.LVL49
 3081 0943 11110000 		.4byte	0x1111
 3082 0947 1C       		.uleb128 0x1c
 3083 0948 8E000000 		.4byte	.LVL50
 3084 094c E4070000 		.4byte	0x7e4
 3085 0950 00       		.byte	0
 3086 0951 1B       		.uleb128 0x1b
 3087 0952 26060000 		.4byte	.LASF123
 3088 0956 01       		.byte	0x1
 3089 0957 F302     		.2byte	0x2f3
 3090 0959 00000000 		.4byte	.LFB6
 3091 095d 4C000000 		.4byte	.LFE6-.LFB6
 3092 0961 01       		.uleb128 0x1
 3093 0962 9C       		.byte	0x9c
 3094 0963 CC090000 		.4byte	0x9cc
 3095 0967 14       		.uleb128 0x14
 3096 0968 AF010000 		.4byte	.LASF115
 3097 096c 01       		.byte	0x1
 3098 096d F302     		.2byte	0x2f3
 3099 096f F2080000 		.4byte	0x8f2
 3100 0973 E5010000 		.4byte	.LLST11
 3101 0977 18       		.uleb128 0x18
 3102 0978 DA000000 		.4byte	.LASF124
 3103 097c 01       		.byte	0x1
 3104 097d F602     		.2byte	0x2f6
 3105 097f 6B000000 		.4byte	0x6b
 3106 0983 11020000 		.4byte	.LLST12
 3107 0987 18       		.uleb128 0x18
 3108 0988 5C080000 		.4byte	.LASF125
 3109 098c 01       		.byte	0x1
 3110 098d F902     		.2byte	0x2f9
 3111 098f 83000000 		.4byte	0x83
 3112 0993 2F020000 		.4byte	.LLST13
 3113 0997 18       		.uleb128 0x18
 3114 0998 00000000 		.4byte	.LASF126
 3115 099c 01       		.byte	0x1
 3116 099d FC02     		.2byte	0x2fc
 3117 099f 83000000 		.4byte	0x83
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 106


 3118 09a3 42020000 		.4byte	.LLST14
 3119 09a7 1C       		.uleb128 0x1c
 3120 09a8 08000000 		.4byte	.LVL52
 3121 09ac 1C110000 		.4byte	0x111c
 3122 09b0 1C       		.uleb128 0x1c
 3123 09b1 20000000 		.4byte	.LVL57
 3124 09b5 27110000 		.4byte	0x1127
 3125 09b9 1C       		.uleb128 0x1c
 3126 09ba 24000000 		.4byte	.LVL58
 3127 09be 1C110000 		.4byte	0x111c
 3128 09c2 1C       		.uleb128 0x1c
 3129 09c3 3A000000 		.4byte	.LVL62
 3130 09c7 27110000 		.4byte	0x1127
 3131 09cb 00       		.byte	0
 3132 09cc 1D       		.uleb128 0x1d
 3133 09cd AC040000 		.4byte	.LASF156
 3134 09d1 01       		.byte	0x1
 3135 09d2 6803     		.2byte	0x368
 3136 09d4 83000000 		.4byte	0x83
 3137 09d8 00000000 		.4byte	.LFB7
 3138 09dc 26000000 		.4byte	.LFE7-.LFB7
 3139 09e0 01       		.uleb128 0x1
 3140 09e1 9C       		.byte	0x9c
 3141 09e2 270A0000 		.4byte	0xa27
 3142 09e6 14       		.uleb128 0x14
 3143 09e7 C00B0000 		.4byte	.LASF108
 3144 09eb 01       		.byte	0x1
 3145 09ec 6803     		.2byte	0x368
 3146 09ee 83000000 		.4byte	0x83
 3147 09f2 55020000 		.4byte	.LLST15
 3148 09f6 14       		.uleb128 0x14
 3149 09f7 F2040000 		.4byte	.LASF32
 3150 09fb 01       		.byte	0x1
 3151 09fc 6803     		.2byte	0x368
 3152 09fe 83000000 		.4byte	0x83
 3153 0a02 81020000 		.4byte	.LLST16
 3154 0a06 14       		.uleb128 0x14
 3155 0a07 A9020000 		.4byte	.LASF127
 3156 0a0b 01       		.byte	0x1
 3157 0a0c 6803     		.2byte	0x368
 3158 0a0e 83000000 		.4byte	0x83
 3159 0a12 A2020000 		.4byte	.LLST17
 3160 0a16 18       		.uleb128 0x18
 3161 0a17 E3040000 		.4byte	.LASF128
 3162 0a1b 01       		.byte	0x1
 3163 0a1c 6A03     		.2byte	0x36a
 3164 0a1e 83000000 		.4byte	0x83
 3165 0a22 DB020000 		.4byte	.LLST18
 3166 0a26 00       		.byte	0
 3167 0a27 1B       		.uleb128 0x1b
 3168 0a28 DD060000 		.4byte	.LASF129
 3169 0a2c 01       		.byte	0x1
 3170 0a2d B403     		.2byte	0x3b4
 3171 0a2f 00000000 		.4byte	.LFB8
 3172 0a33 40000000 		.4byte	.LFE8-.LFB8
 3173 0a37 01       		.uleb128 0x1
 3174 0a38 9C       		.byte	0x9c
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 107


 3175 0a39 870A0000 		.4byte	0xa87
 3176 0a3d 18       		.uleb128 0x18
 3177 0a3e C00B0000 		.4byte	.LASF108
 3178 0a42 01       		.byte	0x1
 3179 0a43 B603     		.2byte	0x3b6
 3180 0a45 83000000 		.4byte	0x83
 3181 0a49 0B030000 		.4byte	.LLST19
 3182 0a4d 18       		.uleb128 0x18
 3183 0a4e A9020000 		.4byte	.LASF127
 3184 0a52 01       		.byte	0x1
 3185 0a53 B703     		.2byte	0x3b7
 3186 0a55 83000000 		.4byte	0x83
 3187 0a59 1E030000 		.4byte	.LLST20
 3188 0a5d 18       		.uleb128 0x18
 3189 0a5e 680B0000 		.4byte	.LASF113
 3190 0a62 01       		.byte	0x1
 3191 0a63 B803     		.2byte	0x3b8
 3192 0a65 83000000 		.4byte	0x83
 3193 0a69 3E030000 		.4byte	.LLST21
 3194 0a6d 18       		.uleb128 0x18
 3195 0a6e AF010000 		.4byte	.LASF115
 3196 0a72 01       		.byte	0x1
 3197 0a73 BA03     		.2byte	0x3ba
 3198 0a75 F2080000 		.4byte	0x8f2
 3199 0a79 51030000 		.4byte	.LLST22
 3200 0a7d 1C       		.uleb128 0x1c
 3201 0a7e 34000000 		.4byte	.LVL81
 3202 0a82 AD070000 		.4byte	0x7ad
 3203 0a86 00       		.byte	0
 3204 0a87 1B       		.uleb128 0x1b
 3205 0a88 37000000 		.4byte	.LASF130
 3206 0a8c 01       		.byte	0x1
 3207 0a8d 1904     		.2byte	0x419
 3208 0a8f 00000000 		.4byte	.LFB9
 3209 0a93 1C000000 		.4byte	.LFE9-.LFB9
 3210 0a97 01       		.uleb128 0x1
 3211 0a98 9C       		.byte	0x9c
 3212 0a99 D70A0000 		.4byte	0xad7
 3213 0a9d 14       		.uleb128 0x14
 3214 0a9e AF010000 		.4byte	.LASF115
 3215 0aa2 01       		.byte	0x1
 3216 0aa3 1904     		.2byte	0x419
 3217 0aa5 F2080000 		.4byte	0x8f2
 3218 0aa9 64030000 		.4byte	.LLST23
 3219 0aad 18       		.uleb128 0x18
 3220 0aae E3040000 		.4byte	.LASF128
 3221 0ab2 01       		.byte	0x1
 3222 0ab3 1C04     		.2byte	0x41c
 3223 0ab5 83000000 		.4byte	0x83
 3224 0ab9 90030000 		.4byte	.LLST24
 3225 0abd 18       		.uleb128 0x18
 3226 0abe C00B0000 		.4byte	.LASF108
 3227 0ac2 01       		.byte	0x1
 3228 0ac3 1D04     		.2byte	0x41d
 3229 0ac5 83000000 		.4byte	0x83
 3230 0ac9 A3030000 		.4byte	.LLST25
 3231 0acd 1C       		.uleb128 0x1c
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 108


 3232 0ace 0E000000 		.4byte	.LVL84
 3233 0ad2 CC090000 		.4byte	0x9cc
 3234 0ad6 00       		.byte	0
 3235 0ad7 1E       		.uleb128 0x1e
 3236 0ad8 DC010000 		.4byte	.LASF131
 3237 0adc 01       		.byte	0x1
 3238 0add 070A     		.2byte	0xa07
 3239 0adf 03       		.byte	0x3
 3240 0ae0 F10A0000 		.4byte	0xaf1
 3241 0ae4 1F       		.uleb128 0x1f
 3242 0ae5 B3020000 		.4byte	.LASF133
 3243 0ae9 01       		.byte	0x1
 3244 0aea 0D0A     		.2byte	0xa0d
 3245 0aec 83000000 		.4byte	0x83
 3246 0af0 00       		.byte	0
 3247 0af1 1E       		.uleb128 0x1e
 3248 0af2 7D030000 		.4byte	.LASF132
 3249 0af6 01       		.byte	0x1
 3250 0af7 8709     		.2byte	0x987
 3251 0af9 03       		.byte	0x3
 3252 0afa 0B0B0000 		.4byte	0xb0b
 3253 0afe 1F       		.uleb128 0x1f
 3254 0aff B3020000 		.4byte	.LASF133
 3255 0b03 01       		.byte	0x1
 3256 0b04 8D09     		.2byte	0x98d
 3257 0b06 83000000 		.4byte	0x83
 3258 0b0a 00       		.byte	0
 3259 0b0b 1B       		.uleb128 0x1b
 3260 0b0c 06080000 		.4byte	.LASF134
 3261 0b10 01       		.byte	0x1
 3262 0b11 EF04     		.2byte	0x4ef
 3263 0b13 00000000 		.4byte	.LFB12
 3264 0b17 F4000000 		.4byte	.LFE12-.LFB12
 3265 0b1b 01       		.uleb128 0x1
 3266 0b1c 9C       		.byte	0x9c
 3267 0b1d A30B0000 		.4byte	0xba3
 3268 0b21 20       		.uleb128 0x20
 3269 0b22 F10A0000 		.4byte	0xaf1
 3270 0b26 0E000000 		.4byte	.LBB6
 3271 0b2a 4E000000 		.4byte	.LBE6-.LBB6
 3272 0b2e 01       		.byte	0x1
 3273 0b2f 0C05     		.2byte	0x50c
 3274 0b31 490B0000 		.4byte	0xb49
 3275 0b35 21       		.uleb128 0x21
 3276 0b36 0E000000 		.4byte	.LBB7
 3277 0b3a 4E000000 		.4byte	.LBE7-.LBB7
 3278 0b3e 22       		.uleb128 0x22
 3279 0b3f FE0A0000 		.4byte	0xafe
 3280 0b43 B6030000 		.4byte	.LLST26
 3281 0b47 00       		.byte	0
 3282 0b48 00       		.byte	0
 3283 0b49 20       		.uleb128 0x20
 3284 0b4a D70A0000 		.4byte	0xad7
 3285 0b4e 5C000000 		.4byte	.LBB8
 3286 0b52 62000000 		.4byte	.LBE8-.LBB8
 3287 0b56 01       		.byte	0x1
 3288 0b57 0F05     		.2byte	0x50f
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 109


 3289 0b59 930B0000 		.4byte	0xb93
 3290 0b5d 21       		.uleb128 0x21
 3291 0b5e 5C000000 		.4byte	.LBB9
 3292 0b62 62000000 		.4byte	.LBE9-.LBB9
 3293 0b66 22       		.uleb128 0x22
 3294 0b67 E40A0000 		.4byte	0xae4
 3295 0b6b D7030000 		.4byte	.LLST27
 3296 0b6f 23       		.uleb128 0x23
 3297 0b70 6A000000 		.4byte	.LVL91
 3298 0b74 32110000 		.4byte	0x1132
 3299 0b78 820B0000 		.4byte	0xb82
 3300 0b7c 24       		.uleb128 0x24
 3301 0b7d 01       		.uleb128 0x1
 3302 0b7e 50       		.byte	0x50
 3303 0b7f 01       		.uleb128 0x1
 3304 0b80 3A       		.byte	0x3a
 3305 0b81 00       		.byte	0
 3306 0b82 25       		.uleb128 0x25
 3307 0b83 70000000 		.4byte	.LVL92
 3308 0b87 3D110000 		.4byte	0x113d
 3309 0b8b 24       		.uleb128 0x24
 3310 0b8c 01       		.uleb128 0x1
 3311 0b8d 50       		.byte	0x50
 3312 0b8e 01       		.uleb128 0x1
 3313 0b8f 3A       		.byte	0x3a
 3314 0b90 00       		.byte	0
 3315 0b91 00       		.byte	0
 3316 0b92 00       		.byte	0
 3317 0b93 25       		.uleb128 0x25
 3318 0b94 08000000 		.4byte	.LVL86
 3319 0b98 48110000 		.4byte	0x1148
 3320 0b9c 24       		.uleb128 0x24
 3321 0b9d 01       		.uleb128 0x1
 3322 0b9e 50       		.byte	0x50
 3323 0b9f 01       		.uleb128 0x1
 3324 0ba0 3A       		.byte	0x3a
 3325 0ba1 00       		.byte	0
 3326 0ba2 00       		.byte	0
 3327 0ba3 1B       		.uleb128 0x1b
 3328 0ba4 CD080000 		.4byte	.LASF135
 3329 0ba8 01       		.byte	0x1
 3330 0ba9 5A05     		.2byte	0x55a
 3331 0bab 00000000 		.4byte	.LFB13
 3332 0baf 20000000 		.4byte	.LFE13-.LFB13
 3333 0bb3 01       		.uleb128 0x1
 3334 0bb4 9C       		.byte	0x9c
 3335 0bb5 D60B0000 		.4byte	0xbd6
 3336 0bb9 23       		.uleb128 0x23
 3337 0bba 12000000 		.4byte	.LVL97
 3338 0bbe 53110000 		.4byte	0x1153
 3339 0bc2 CC0B0000 		.4byte	0xbcc
 3340 0bc6 24       		.uleb128 0x24
 3341 0bc7 01       		.uleb128 0x1
 3342 0bc8 50       		.byte	0x50
 3343 0bc9 01       		.uleb128 0x1
 3344 0bca 47       		.byte	0x47
 3345 0bcb 00       		.byte	0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 110


 3346 0bcc 1C       		.uleb128 0x1c
 3347 0bcd 16000000 		.4byte	.LVL98
 3348 0bd1 0B0B0000 		.4byte	0xb0b
 3349 0bd5 00       		.byte	0
 3350 0bd6 1B       		.uleb128 0x1b
 3351 0bd7 76090000 		.4byte	.LASF136
 3352 0bdb 01       		.byte	0x1
 3353 0bdc 6906     		.2byte	0x669
 3354 0bde 00000000 		.4byte	.LFB17
 3355 0be2 34000000 		.4byte	.LFE17-.LFB17
 3356 0be6 01       		.uleb128 0x1
 3357 0be7 9C       		.byte	0x9c
 3358 0be8 4F0C0000 		.4byte	0xc4f
 3359 0bec 14       		.uleb128 0x14
 3360 0bed 2C000000 		.4byte	.LASF137
 3361 0bf1 01       		.byte	0x1
 3362 0bf2 6906     		.2byte	0x669
 3363 0bf4 4F0C0000 		.4byte	0xc4f
 3364 0bf8 F8030000 		.4byte	.LLST28
 3365 0bfc 18       		.uleb128 0x18
 3366 0bfd 99030000 		.4byte	.LASF138
 3367 0c01 01       		.byte	0x1
 3368 0c02 6B06     		.2byte	0x66b
 3369 0c04 83000000 		.4byte	0x83
 3370 0c08 24040000 		.4byte	.LLST29
 3371 0c0c 18       		.uleb128 0x18
 3372 0c0d DA000000 		.4byte	.LASF124
 3373 0c11 01       		.byte	0x1
 3374 0c12 6C06     		.2byte	0x66c
 3375 0c14 6B000000 		.4byte	0x6b
 3376 0c18 4D040000 		.4byte	.LLST30
 3377 0c1c 18       		.uleb128 0x18
 3378 0c1d 5D010000 		.4byte	.LASF139
 3379 0c21 01       		.byte	0x1
 3380 0c22 6D06     		.2byte	0x66d
 3381 0c24 83000000 		.4byte	0x83
 3382 0c28 60040000 		.4byte	.LLST31
 3383 0c2c 18       		.uleb128 0x18
 3384 0c2d 03010000 		.4byte	.LASF140
 3385 0c31 01       		.byte	0x1
 3386 0c32 6E06     		.2byte	0x66e
 3387 0c34 83000000 		.4byte	0x83
 3388 0c38 73040000 		.4byte	.LLST32
 3389 0c3c 1C       		.uleb128 0x1c
 3390 0c3d 0C000000 		.4byte	.LVL102
 3391 0c41 1C110000 		.4byte	0x111c
 3392 0c45 1C       		.uleb128 0x1c
 3393 0c46 32000000 		.4byte	.LVL108
 3394 0c4a 27110000 		.4byte	0x1127
 3395 0c4e 00       		.byte	0
 3396 0c4f 10       		.uleb128 0x10
 3397 0c50 04       		.byte	0x4
 3398 0c51 550C0000 		.4byte	0xc55
 3399 0c55 1A       		.uleb128 0x1a
 3400 0c56 73060000 		.4byte	0x673
 3401 0c5a 1B       		.uleb128 0x1b
 3402 0c5b 6B0A0000 		.4byte	.LASF141
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 111


 3403 0c5f 01       		.byte	0x1
 3404 0c60 8E05     		.2byte	0x58e
 3405 0c62 00000000 		.4byte	.LFB14
 3406 0c66 70000000 		.4byte	.LFE14-.LFB14
 3407 0c6a 01       		.uleb128 0x1
 3408 0c6b 9C       		.byte	0x9c
 3409 0c6c A50C0000 		.4byte	0xca5
 3410 0c70 18       		.uleb128 0x18
 3411 0c71 AF010000 		.4byte	.LASF115
 3412 0c75 01       		.byte	0x1
 3413 0c76 9005     		.2byte	0x590
 3414 0c78 F2080000 		.4byte	0x8f2
 3415 0c7c 86040000 		.4byte	.LLST33
 3416 0c80 1C       		.uleb128 0x1c
 3417 0c81 32000000 		.4byte	.LVL112
 3418 0c85 51090000 		.4byte	0x951
 3419 0c89 1C       		.uleb128 0x1c
 3420 0c8a 4C000000 		.4byte	.LVL113
 3421 0c8e D60B0000 		.4byte	0xbd6
 3422 0c92 1C       		.uleb128 0x1c
 3423 0c93 52000000 		.4byte	.LVL114
 3424 0c97 5E110000 		.4byte	0x115e
 3425 0c9b 1C       		.uleb128 0x1c
 3426 0c9c 56000000 		.4byte	.LVL115
 3427 0ca0 A30B0000 		.4byte	0xba3
 3428 0ca4 00       		.byte	0
 3429 0ca5 1B       		.uleb128 0x1b
 3430 0ca6 B7010000 		.4byte	.LASF142
 3431 0caa 01       		.byte	0x1
 3432 0cab DA05     		.2byte	0x5da
 3433 0cad 00000000 		.4byte	.LFB15
 3434 0cb1 24000000 		.4byte	.LFE15-.LFB15
 3435 0cb5 01       		.uleb128 0x1
 3436 0cb6 9C       		.byte	0x9c
 3437 0cb7 E50C0000 		.4byte	0xce5
 3438 0cbb 14       		.uleb128 0x14
 3439 0cbc D70B0000 		.4byte	.LASF143
 3440 0cc0 01       		.byte	0x1
 3441 0cc1 DA05     		.2byte	0x5da
 3442 0cc3 83000000 		.4byte	0x83
 3443 0cc7 99040000 		.4byte	.LLST34
 3444 0ccb 14       		.uleb128 0x14
 3445 0ccc 95010000 		.4byte	.LASF144
 3446 0cd0 01       		.byte	0x1
 3447 0cd1 DA05     		.2byte	0x5da
 3448 0cd3 83000000 		.4byte	0x83
 3449 0cd7 BA040000 		.4byte	.LLST35
 3450 0cdb 1C       		.uleb128 0x1c
 3451 0cdc 1A000000 		.4byte	.LVL119
 3452 0ce0 D60B0000 		.4byte	0xbd6
 3453 0ce4 00       		.byte	0
 3454 0ce5 1B       		.uleb128 0x1b
 3455 0ce6 AE070000 		.4byte	.LASF145
 3456 0cea 01       		.byte	0x1
 3457 0ceb 9D06     		.2byte	0x69d
 3458 0ced 00000000 		.4byte	.LFB18
 3459 0cf1 40000000 		.4byte	.LFE18-.LFB18
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 112


 3460 0cf5 01       		.uleb128 0x1
 3461 0cf6 9C       		.byte	0x9c
 3462 0cf7 5E0D0000 		.4byte	0xd5e
 3463 0cfb 14       		.uleb128 0x14
 3464 0cfc 2C000000 		.4byte	.LASF137
 3465 0d00 01       		.byte	0x1
 3466 0d01 9D06     		.2byte	0x69d
 3467 0d03 4F0C0000 		.4byte	0xc4f
 3468 0d07 DB040000 		.4byte	.LLST36
 3469 0d0b 18       		.uleb128 0x18
 3470 0d0c 03010000 		.4byte	.LASF140
 3471 0d10 01       		.byte	0x1
 3472 0d11 9F06     		.2byte	0x69f
 3473 0d13 83000000 		.4byte	0x83
 3474 0d17 07050000 		.4byte	.LLST37
 3475 0d1b 18       		.uleb128 0x18
 3476 0d1c 99030000 		.4byte	.LASF138
 3477 0d20 01       		.byte	0x1
 3478 0d21 A006     		.2byte	0x6a0
 3479 0d23 83000000 		.4byte	0x83
 3480 0d27 1A050000 		.4byte	.LLST38
 3481 0d2b 18       		.uleb128 0x18
 3482 0d2c 5D010000 		.4byte	.LASF139
 3483 0d30 01       		.byte	0x1
 3484 0d31 A106     		.2byte	0x6a1
 3485 0d33 83000000 		.4byte	0x83
 3486 0d37 43050000 		.4byte	.LLST39
 3487 0d3b 18       		.uleb128 0x18
 3488 0d3c DA000000 		.4byte	.LASF124
 3489 0d40 01       		.byte	0x1
 3490 0d41 A506     		.2byte	0x6a5
 3491 0d43 6B000000 		.4byte	0x6b
 3492 0d47 56050000 		.4byte	.LLST40
 3493 0d4b 1C       		.uleb128 0x1c
 3494 0d4c 18000000 		.4byte	.LVL123
 3495 0d50 1C110000 		.4byte	0x111c
 3496 0d54 1C       		.uleb128 0x1c
 3497 0d55 30000000 		.4byte	.LVL128
 3498 0d59 27110000 		.4byte	0x1127
 3499 0d5d 00       		.byte	0
 3500 0d5e 1B       		.uleb128 0x1b
 3501 0d5f 67070000 		.4byte	.LASF146
 3502 0d63 01       		.byte	0x1
 3503 0d64 B602     		.2byte	0x2b6
 3504 0d66 00000000 		.4byte	.LFB5
 3505 0d6a 24000000 		.4byte	.LFE5-.LFB5
 3506 0d6e 01       		.uleb128 0x1
 3507 0d6f 9C       		.byte	0x9c
 3508 0d70 7E0D0000 		.4byte	0xd7e
 3509 0d74 1C       		.uleb128 0x1c
 3510 0d75 12000000 		.4byte	.LVL131
 3511 0d79 E50C0000 		.4byte	0xce5
 3512 0d7d 00       		.byte	0
 3513 0d7e 1B       		.uleb128 0x1b
 3514 0d7f C3020000 		.4byte	.LASF147
 3515 0d83 01       		.byte	0x1
 3516 0d84 6004     		.2byte	0x460
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 113


 3517 0d86 00000000 		.4byte	.LFB10
 3518 0d8a 58000000 		.4byte	.LFE10-.LFB10
 3519 0d8e 01       		.uleb128 0x1
 3520 0d8f 9C       		.byte	0x9c
 3521 0d90 EE0D0000 		.4byte	0xdee
 3522 0d94 14       		.uleb128 0x14
 3523 0d95 D70B0000 		.4byte	.LASF143
 3524 0d99 01       		.byte	0x1
 3525 0d9a 6004     		.2byte	0x460
 3526 0d9c 83000000 		.4byte	0x83
 3527 0da0 69050000 		.4byte	.LLST41
 3528 0da4 18       		.uleb128 0x18
 3529 0da5 AF010000 		.4byte	.LASF115
 3530 0da9 01       		.byte	0x1
 3531 0daa 6304     		.2byte	0x463
 3532 0dac F2080000 		.4byte	0x8f2
 3533 0db0 8A050000 		.4byte	.LLST42
 3534 0db4 23       		.uleb128 0x23
 3535 0db5 1A000000 		.4byte	.LVL135
 3536 0db9 69110000 		.4byte	0x1169
 3537 0dbd C70D0000 		.4byte	0xdc7
 3538 0dc1 24       		.uleb128 0x24
 3539 0dc2 01       		.uleb128 0x1
 3540 0dc3 50       		.byte	0x50
 3541 0dc4 01       		.uleb128 0x1
 3542 0dc5 31       		.byte	0x31
 3543 0dc6 00       		.byte	0
 3544 0dc7 1C       		.uleb128 0x1c
 3545 0dc8 1E000000 		.4byte	.LVL136
 3546 0dcc 5E0D0000 		.4byte	0xd5e
 3547 0dd0 23       		.uleb128 0x23
 3548 0dd1 40000000 		.4byte	.LVL137
 3549 0dd5 870A0000 		.4byte	0xa87
 3550 0dd9 E40D0000 		.4byte	0xde4
 3551 0ddd 24       		.uleb128 0x24
 3552 0dde 01       		.uleb128 0x1
 3553 0ddf 50       		.byte	0x50
 3554 0de0 02       		.uleb128 0x2
 3555 0de1 75       		.byte	0x75
 3556 0de2 00       		.sleb128 0
 3557 0de3 00       		.byte	0
 3558 0de4 1C       		.uleb128 0x1c
 3559 0de5 44000000 		.4byte	.LVL138
 3560 0de9 270A0000 		.4byte	0xa27
 3561 0ded 00       		.byte	0
 3562 0dee 1B       		.uleb128 0x1b
 3563 0def 62030000 		.4byte	.LASF148
 3564 0df3 01       		.byte	0x1
 3565 0df4 B104     		.2byte	0x4b1
 3566 0df6 00000000 		.4byte	.LFB11
 3567 0dfa 6C000000 		.4byte	.LFE11-.LFB11
 3568 0dfe 01       		.uleb128 0x1
 3569 0dff 9C       		.byte	0x9c
 3570 0e00 700E0000 		.4byte	0xe70
 3571 0e04 14       		.uleb128 0x14
 3572 0e05 D70B0000 		.4byte	.LASF143
 3573 0e09 01       		.byte	0x1
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 114


 3574 0e0a B104     		.2byte	0x4b1
 3575 0e0c 83000000 		.4byte	0x83
 3576 0e10 B2050000 		.4byte	.LLST43
 3577 0e14 14       		.uleb128 0x14
 3578 0e15 95010000 		.4byte	.LASF144
 3579 0e19 01       		.byte	0x1
 3580 0e1a B104     		.2byte	0x4b1
 3581 0e1c 83000000 		.4byte	0x83
 3582 0e20 D3050000 		.4byte	.LLST44
 3583 0e24 18       		.uleb128 0x18
 3584 0e25 AF010000 		.4byte	.LASF115
 3585 0e29 01       		.byte	0x1
 3586 0e2a B304     		.2byte	0x4b3
 3587 0e2c F2080000 		.4byte	0x8f2
 3588 0e30 F4050000 		.4byte	.LLST45
 3589 0e34 23       		.uleb128 0x23
 3590 0e35 28000000 		.4byte	.LVL145
 3591 0e39 7E0D0000 		.4byte	0xd7e
 3592 0e3d 490E0000 		.4byte	0xe49
 3593 0e41 24       		.uleb128 0x24
 3594 0e42 01       		.uleb128 0x1
 3595 0e43 50       		.byte	0x50
 3596 0e44 03       		.uleb128 0x3
 3597 0e45 F3       		.byte	0xf3
 3598 0e46 01       		.uleb128 0x1
 3599 0e47 50       		.byte	0x50
 3600 0e48 00       		.byte	0
 3601 0e49 23       		.uleb128 0x23
 3602 0e4a 2E000000 		.4byte	.LVL146
 3603 0e4e 51090000 		.4byte	0x951
 3604 0e52 5D0E0000 		.4byte	0xe5d
 3605 0e56 24       		.uleb128 0x24
 3606 0e57 01       		.uleb128 0x1
 3607 0e58 50       		.byte	0x50
 3608 0e59 02       		.uleb128 0x2
 3609 0e5a 75       		.byte	0x75
 3610 0e5b 00       		.sleb128 0
 3611 0e5c 00       		.byte	0
 3612 0e5d 1C       		.uleb128 0x1c
 3613 0e5e 46000000 		.4byte	.LVL147
 3614 0e62 D60B0000 		.4byte	0xbd6
 3615 0e66 1C       		.uleb128 0x1c
 3616 0e67 52000000 		.4byte	.LVL148
 3617 0e6b 5E110000 		.4byte	0x115e
 3618 0e6f 00       		.byte	0
 3619 0e70 1B       		.uleb128 0x1b
 3620 0e71 33040000 		.4byte	.LASF149
 3621 0e75 01       		.byte	0x1
 3622 0e76 2006     		.2byte	0x620
 3623 0e78 00000000 		.4byte	.LFB16
 3624 0e7c 24000000 		.4byte	.LFE16-.LFB16
 3625 0e80 01       		.uleb128 0x1
 3626 0e81 9C       		.byte	0x9c
 3627 0e82 B00E0000 		.4byte	0xeb0
 3628 0e86 14       		.uleb128 0x14
 3629 0e87 D70B0000 		.4byte	.LASF143
 3630 0e8b 01       		.byte	0x1
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 115


 3631 0e8c 2006     		.2byte	0x620
 3632 0e8e 83000000 		.4byte	0x83
 3633 0e92 07060000 		.4byte	.LLST46
 3634 0e96 14       		.uleb128 0x14
 3635 0e97 95010000 		.4byte	.LASF144
 3636 0e9b 01       		.byte	0x1
 3637 0e9c 2006     		.2byte	0x620
 3638 0e9e 83000000 		.4byte	0x83
 3639 0ea2 28060000 		.4byte	.LLST47
 3640 0ea6 1C       		.uleb128 0x1c
 3641 0ea7 1A000000 		.4byte	.LVL153
 3642 0eab E50C0000 		.4byte	0xce5
 3643 0eaf 00       		.byte	0
 3644 0eb0 26       		.uleb128 0x26
 3645 0eb1 A2080000 		.4byte	.LASF151
 3646 0eb5 01       		.byte	0x1
 3647 0eb6 7407     		.2byte	0x774
 3648 0eb8 A4000000 		.4byte	0xa4
 3649 0ebc 00000000 		.4byte	.LFB22
 3650 0ec0 EC000000 		.4byte	.LFE22-.LFB22
 3651 0ec4 01       		.uleb128 0x1
 3652 0ec5 9C       		.byte	0x9c
 3653 0ec6 A80F0000 		.4byte	0xfa8
 3654 0eca 14       		.uleb128 0x14
 3655 0ecb EB030000 		.4byte	.LASF116
 3656 0ecf 01       		.byte	0x1
 3657 0ed0 7407     		.2byte	0x774
 3658 0ed2 83000000 		.4byte	0x83
 3659 0ed6 49060000 		.4byte	.LLST48
 3660 0eda 14       		.uleb128 0x14
 3661 0edb 29080000 		.4byte	.LASF152
 3662 0edf 01       		.byte	0x1
 3663 0ee0 7507     		.2byte	0x775
 3664 0ee2 5B070000 		.4byte	0x75b
 3665 0ee6 75060000 		.4byte	.LLST49
 3666 0eea 14       		.uleb128 0x14
 3667 0eeb 170B0000 		.4byte	.LASF153
 3668 0eef 01       		.byte	0x1
 3669 0ef0 7607     		.2byte	0x776
 3670 0ef2 5B070000 		.4byte	0x75b
 3671 0ef6 A1060000 		.4byte	.LLST50
 3672 0efa 16       		.uleb128 0x16
 3673 0efb 68050000 		.4byte	.LASF118
 3674 0eff 01       		.byte	0x1
 3675 0f00 7807     		.2byte	0x778
 3676 0f02 A4000000 		.4byte	0xa4
 3677 0f06 01       		.uleb128 0x1
 3678 0f07 50       		.byte	0x50
 3679 0f08 18       		.uleb128 0x18
 3680 0f09 51030000 		.4byte	.LASF154
 3681 0f0d 01       		.byte	0x1
 3682 0f0e 7907     		.2byte	0x779
 3683 0f10 83000000 		.4byte	0x83
 3684 0f14 CD060000 		.4byte	.LLST51
 3685 0f18 18       		.uleb128 0x18
 3686 0f19 B3020000 		.4byte	.LASF133
 3687 0f1d 01       		.byte	0x1
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 116


 3688 0f1e 7A07     		.2byte	0x77a
 3689 0f20 83000000 		.4byte	0x83
 3690 0f24 ED060000 		.4byte	.LLST52
 3691 0f28 18       		.uleb128 0x18
 3692 0f29 53080000 		.4byte	.LASF155
 3693 0f2d 01       		.byte	0x1
 3694 0f2e 7C07     		.2byte	0x77c
 3695 0f30 77000000 		.4byte	0x77
 3696 0f34 0E070000 		.4byte	.LLST53
 3697 0f38 18       		.uleb128 0x18
 3698 0f39 AF010000 		.4byte	.LASF115
 3699 0f3d 01       		.byte	0x1
 3700 0f3e 8307     		.2byte	0x783
 3701 0f40 A80F0000 		.4byte	0xfa8
 3702 0f44 2D070000 		.4byte	.LLST54
 3703 0f48 1C       		.uleb128 0x1c
 3704 0f49 30000000 		.4byte	.LVL161
 3705 0f4d EE0D0000 		.4byte	0xdee
 3706 0f51 1C       		.uleb128 0x1c
 3707 0f52 34000000 		.4byte	.LVL162
 3708 0f56 1B080000 		.4byte	0x81b
 3709 0f5a 23       		.uleb128 0x23
 3710 0f5b 50000000 		.4byte	.LVL165
 3711 0f5f 51090000 		.4byte	0x951
 3712 0f63 6F0F0000 		.4byte	0xf6f
 3713 0f67 24       		.uleb128 0x24
 3714 0f68 01       		.uleb128 0x1
 3715 0f69 50       		.byte	0x50
 3716 0f6a 03       		.uleb128 0x3
 3717 0f6b 91       		.byte	0x91
 3718 0f6c 64       		.sleb128 -28
 3719 0f6d 06       		.byte	0x6
 3720 0f6e 00       		.byte	0
 3721 0f6f 1C       		.uleb128 0x1c
 3722 0f70 54000000 		.4byte	.LVL166
 3723 0f74 A30B0000 		.4byte	0xba3
 3724 0f78 1C       		.uleb128 0x1c
 3725 0f79 94000000 		.4byte	.LVL171
 3726 0f7d E50C0000 		.4byte	0xce5
 3727 0f81 1C       		.uleb128 0x1c
 3728 0f82 9E000000 		.4byte	.LVL172
 3729 0f86 42080000 		.4byte	0x842
 3730 0f8a 25       		.uleb128 0x25
 3731 0f8b A8000000 		.4byte	.LVL173
 3732 0f8f 69080000 		.4byte	0x869
 3733 0f93 24       		.uleb128 0x24
 3734 0f94 01       		.uleb128 0x1
 3735 0f95 50       		.byte	0x50
 3736 0f96 03       		.uleb128 0x3
 3737 0f97 91       		.byte	0x91
 3738 0f98 64       		.sleb128 -28
 3739 0f99 06       		.byte	0x6
 3740 0f9a 24       		.uleb128 0x24
 3741 0f9b 01       		.uleb128 0x1
 3742 0f9c 51       		.byte	0x51
 3743 0f9d 02       		.uleb128 0x2
 3744 0f9e 77       		.byte	0x77
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 117


 3745 0f9f 00       		.sleb128 0
 3746 0fa0 24       		.uleb128 0x24
 3747 0fa1 01       		.uleb128 0x1
 3748 0fa2 52       		.byte	0x52
 3749 0fa3 02       		.uleb128 0x2
 3750 0fa4 74       		.byte	0x74
 3751 0fa5 00       		.sleb128 0
 3752 0fa6 00       		.byte	0
 3753 0fa7 00       		.byte	0
 3754 0fa8 10       		.uleb128 0x10
 3755 0fa9 04       		.byte	0x4
 3756 0faa 21020000 		.4byte	0x221
 3757 0fae 1D       		.uleb128 0x1d
 3758 0faf 6A080000 		.4byte	.LASF157
 3759 0fb3 01       		.byte	0x1
 3760 0fb4 3E08     		.2byte	0x83e
 3761 0fb6 A4000000 		.4byte	0xa4
 3762 0fba 00000000 		.4byte	.LFB23
 3763 0fbe 10010000 		.4byte	.LFE23-.LFB23
 3764 0fc2 01       		.uleb128 0x1
 3765 0fc3 9C       		.byte	0x9c
 3766 0fc4 5E100000 		.4byte	0x105e
 3767 0fc8 14       		.uleb128 0x14
 3768 0fc9 D70B0000 		.4byte	.LASF143
 3769 0fcd 01       		.byte	0x1
 3770 0fce 3E08     		.2byte	0x83e
 3771 0fd0 83000000 		.4byte	0x83
 3772 0fd4 4C070000 		.4byte	.LLST55
 3773 0fd8 14       		.uleb128 0x14
 3774 0fd9 CC030000 		.4byte	.LASF158
 3775 0fdd 01       		.byte	0x1
 3776 0fde 3E08     		.2byte	0x83e
 3777 0fe0 83000000 		.4byte	0x83
 3778 0fe4 78070000 		.4byte	.LLST56
 3779 0fe8 18       		.uleb128 0x18
 3780 0fe9 EB030000 		.4byte	.LASF116
 3781 0fed 01       		.byte	0x1
 3782 0fee 4008     		.2byte	0x840
 3783 0ff0 83000000 		.4byte	0x83
 3784 0ff4 A4070000 		.4byte	.LLST57
 3785 0ff8 18       		.uleb128 0x18
 3786 0ff9 68050000 		.4byte	.LASF118
 3787 0ffd 01       		.byte	0x1
 3788 0ffe 4108     		.2byte	0x841
 3789 1000 A4000000 		.4byte	0xa4
 3790 1004 E0070000 		.4byte	.LLST58
 3791 1008 18       		.uleb128 0x18
 3792 1009 AF010000 		.4byte	.LASF115
 3793 100d 01       		.byte	0x1
 3794 100e 4B08     		.2byte	0x84b
 3795 1010 A80F0000 		.4byte	0xfa8
 3796 1014 0A080000 		.4byte	.LLST59
 3797 1018 16       		.uleb128 0x16
 3798 1019 170B0000 		.4byte	.LASF153
 3799 101d 01       		.byte	0x1
 3800 101e 4F08     		.2byte	0x84f
 3801 1020 0A020000 		.4byte	0x20a
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 118


 3802 1024 02       		.uleb128 0x2
 3803 1025 91       		.byte	0x91
 3804 1026 64       		.sleb128 -28
 3805 1027 18       		.uleb128 0x18
 3806 1028 29080000 		.4byte	.LASF152
 3807 102c 01       		.byte	0x1
 3808 102d 5408     		.2byte	0x854
 3809 102f 5B070000 		.4byte	0x75b
 3810 1033 1D080000 		.4byte	.LLST60
 3811 1037 1C       		.uleb128 0x1c
 3812 1038 3A000000 		.4byte	.LVL189
 3813 103c 5E110000 		.4byte	0x115e
 3814 1040 25       		.uleb128 0x25
 3815 1041 58000000 		.4byte	.LVL192
 3816 1045 B00E0000 		.4byte	0xeb0
 3817 1049 24       		.uleb128 0x24
 3818 104a 01       		.uleb128 0x1
 3819 104b 50       		.byte	0x50
 3820 104c 03       		.uleb128 0x3
 3821 104d 91       		.byte	0x91
 3822 104e 5C       		.sleb128 -36
 3823 104f 06       		.byte	0x6
 3824 1050 24       		.uleb128 0x24
 3825 1051 01       		.uleb128 0x1
 3826 1052 51       		.byte	0x51
 3827 1053 02       		.uleb128 0x2
 3828 1054 76       		.byte	0x76
 3829 1055 00       		.sleb128 0
 3830 1056 24       		.uleb128 0x24
 3831 1057 01       		.uleb128 0x1
 3832 1058 52       		.byte	0x52
 3833 1059 02       		.uleb128 0x2
 3834 105a 91       		.byte	0x91
 3835 105b 64       		.sleb128 -28
 3836 105c 00       		.byte	0
 3837 105d 00       		.byte	0
 3838 105e 27       		.uleb128 0x27
 3839 105f 11010000 		.4byte	.LASF159
 3840 1063 01       		.byte	0x1
 3841 1064 72       		.byte	0x72
 3842 1065 6B000000 		.4byte	0x6b
 3843 1069 05       		.uleb128 0x5
 3844 106a 03       		.byte	0x3
 3845 106b 00000000 		.4byte	CapSense_eleCsdDisconnectFlag
 3846 106f 28       		.uleb128 0x28
 3847 1070 97050000 		.4byte	.LASF160
 3848 1074 05       		.byte	0x5
 3849 1075 B104     		.2byte	0x4b1
 3850 1077 E2050000 		.4byte	0x5e2
 3851 107b 28       		.uleb128 0x28
 3852 107c 9E010000 		.4byte	.LASF161
 3853 1080 05       		.byte	0x5
 3854 1081 B204     		.2byte	0x4b2
 3855 1083 87100000 		.4byte	0x1087
 3856 1087 1A       		.uleb128 0x1a
 3857 1088 9A070000 		.4byte	0x79a
 3858 108c 29       		.uleb128 0x29
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 119


 3859 108d 7F000000 		.4byte	.LASF162
 3860 1091 06       		.byte	0x6
 3861 1092 9D       		.byte	0x9d
 3862 1093 B0000000 		.4byte	0xb0
 3863 1097 29       		.uleb128 0x29
 3864 1098 04030000 		.4byte	.LASF163
 3865 109c 06       		.byte	0x6
 3866 109d 9E       		.byte	0x9e
 3867 109e B0000000 		.4byte	0xb0
 3868 10a2 29       		.uleb128 0x29
 3869 10a3 010B0000 		.4byte	.LASF164
 3870 10a7 06       		.byte	0x6
 3871 10a8 A1       		.byte	0xa1
 3872 10a9 55070000 		.4byte	0x755
 3873 10ad 29       		.uleb128 0x29
 3874 10ae 2C0B0000 		.4byte	.LASF165
 3875 10b2 06       		.byte	0x6
 3876 10b3 A8       		.byte	0xa8
 3877 10b4 B8100000 		.4byte	0x10b8
 3878 10b8 1A       		.uleb128 0x1a
 3879 10b9 6B000000 		.4byte	0x6b
 3880 10bd 29       		.uleb128 0x29
 3881 10be 4F060000 		.4byte	.LASF166
 3882 10c2 06       		.byte	0x6
 3883 10c3 B6       		.byte	0xb6
 3884 10c4 4F0C0000 		.4byte	0xc4f
 3885 10c8 2A       		.uleb128 0x2a
 3886 10c9 B6050000 		.4byte	.LASF167
 3887 10cd 01       		.byte	0x1
 3888 10ce 6B       		.byte	0x6b
 3889 10cf 83000000 		.4byte	0x83
 3890 10d3 05       		.uleb128 0x5
 3891 10d4 03       		.byte	0x3
 3892 10d5 00000000 		.4byte	CapSense_configCsd
 3893 10d9 2A       		.uleb128 0x2a
 3894 10da 24070000 		.4byte	.LASF168
 3895 10de 01       		.byte	0x1
 3896 10df 7A       		.byte	0x7a
 3897 10e0 6B000000 		.4byte	0x6b
 3898 10e4 05       		.uleb128 0x5
 3899 10e5 03       		.byte	0x3
 3900 10e6 00000000 		.4byte	CapSense_calibratedIdac
 3901 10ea 2A       		.uleb128 0x2a
 3902 10eb 86080000 		.4byte	.LASF169
 3903 10ef 01       		.byte	0x1
 3904 10f0 7B       		.byte	0x7b
 3905 10f1 77000000 		.4byte	0x77
 3906 10f5 05       		.uleb128 0x5
 3907 10f6 03       		.byte	0x3
 3908 10f7 00000000 		.4byte	CapSense_calibratedRawcount
 3909 10fb 2B       		.uleb128 0x2b
 3910 10fc FC010000 		.4byte	.LASF170
 3911 1100 FC010000 		.4byte	.LASF170
 3912 1104 06       		.byte	0x6
 3913 1105 85       		.byte	0x85
 3914 1106 2B       		.uleb128 0x2b
 3915 1107 5B000000 		.4byte	.LASF171
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 120


 3916 110b 5B000000 		.4byte	.LASF171
 3917 110f 06       		.byte	0x6
 3918 1110 93       		.byte	0x93
 3919 1111 2B       		.uleb128 0x2b
 3920 1112 3C010000 		.4byte	.LASF172
 3921 1116 3C010000 		.4byte	.LASF172
 3922 111a 06       		.byte	0x6
 3923 111b 68       		.byte	0x68
 3924 111c 2B       		.uleb128 0x2b
 3925 111d EA0A0000 		.4byte	.LASF173
 3926 1121 EA0A0000 		.4byte	.LASF173
 3927 1125 07       		.byte	0x7
 3928 1126 E5       		.byte	0xe5
 3929 1127 2B       		.uleb128 0x2b
 3930 1128 96040000 		.4byte	.LASF174
 3931 112c 96040000 		.4byte	.LASF174
 3932 1130 07       		.byte	0x7
 3933 1131 E6       		.byte	0xe6
 3934 1132 2B       		.uleb128 0x2b
 3935 1133 7F040000 		.4byte	.LASF175
 3936 1137 7F040000 		.4byte	.LASF175
 3937 113b 07       		.byte	0x7
 3938 113c C8       		.byte	0xc8
 3939 113d 2B       		.uleb128 0x2b
 3940 113e AB0A0000 		.4byte	.LASF176
 3941 1142 AB0A0000 		.4byte	.LASF176
 3942 1146 07       		.byte	0x7
 3943 1147 C3       		.byte	0xc3
 3944 1148 2B       		.uleb128 0x2b
 3945 1149 2F010000 		.4byte	.LASF177
 3946 114d 2F010000 		.4byte	.LASF177
 3947 1151 07       		.byte	0x7
 3948 1152 C5       		.byte	0xc5
 3949 1153 2B       		.uleb128 0x2b
 3950 1154 DB020000 		.4byte	.LASF178
 3951 1158 DB020000 		.4byte	.LASF178
 3952 115c 07       		.byte	0x7
 3953 115d DA       		.byte	0xda
 3954 115e 2B       		.uleb128 0x2b
 3955 115f 51090000 		.4byte	.LASF179
 3956 1163 51090000 		.4byte	.LASF179
 3957 1167 08       		.byte	0x8
 3958 1168 18       		.byte	0x18
 3959 1169 2B       		.uleb128 0x2b
 3960 116a CD0A0000 		.4byte	.LASF180
 3961 116e CD0A0000 		.4byte	.LASF180
 3962 1172 06       		.byte	0x6
 3963 1173 6E       		.byte	0x6e
 3964 1174 00       		.byte	0
 3965              		.section	.debug_abbrev,"",%progbits
 3966              	.Ldebug_abbrev0:
 3967 0000 01       		.uleb128 0x1
 3968 0001 11       		.uleb128 0x11
 3969 0002 01       		.byte	0x1
 3970 0003 25       		.uleb128 0x25
 3971 0004 0E       		.uleb128 0xe
 3972 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 121


 3973 0006 0B       		.uleb128 0xb
 3974 0007 03       		.uleb128 0x3
 3975 0008 0E       		.uleb128 0xe
 3976 0009 1B       		.uleb128 0x1b
 3977 000a 0E       		.uleb128 0xe
 3978 000b 55       		.uleb128 0x55
 3979 000c 17       		.uleb128 0x17
 3980 000d 11       		.uleb128 0x11
 3981 000e 01       		.uleb128 0x1
 3982 000f 10       		.uleb128 0x10
 3983 0010 17       		.uleb128 0x17
 3984 0011 00       		.byte	0
 3985 0012 00       		.byte	0
 3986 0013 02       		.uleb128 0x2
 3987 0014 24       		.uleb128 0x24
 3988 0015 00       		.byte	0
 3989 0016 0B       		.uleb128 0xb
 3990 0017 0B       		.uleb128 0xb
 3991 0018 3E       		.uleb128 0x3e
 3992 0019 0B       		.uleb128 0xb
 3993 001a 03       		.uleb128 0x3
 3994 001b 0E       		.uleb128 0xe
 3995 001c 00       		.byte	0
 3996 001d 00       		.byte	0
 3997 001e 03       		.uleb128 0x3
 3998 001f 24       		.uleb128 0x24
 3999 0020 00       		.byte	0
 4000 0021 0B       		.uleb128 0xb
 4001 0022 0B       		.uleb128 0xb
 4002 0023 3E       		.uleb128 0x3e
 4003 0024 0B       		.uleb128 0xb
 4004 0025 03       		.uleb128 0x3
 4005 0026 08       		.uleb128 0x8
 4006 0027 00       		.byte	0
 4007 0028 00       		.byte	0
 4008 0029 04       		.uleb128 0x4
 4009 002a 16       		.uleb128 0x16
 4010 002b 00       		.byte	0
 4011 002c 03       		.uleb128 0x3
 4012 002d 0E       		.uleb128 0xe
 4013 002e 3A       		.uleb128 0x3a
 4014 002f 0B       		.uleb128 0xb
 4015 0030 3B       		.uleb128 0x3b
 4016 0031 05       		.uleb128 0x5
 4017 0032 49       		.uleb128 0x49
 4018 0033 13       		.uleb128 0x13
 4019 0034 00       		.byte	0
 4020 0035 00       		.byte	0
 4021 0036 05       		.uleb128 0x5
 4022 0037 35       		.uleb128 0x35
 4023 0038 00       		.byte	0
 4024 0039 49       		.uleb128 0x49
 4025 003a 13       		.uleb128 0x13
 4026 003b 00       		.byte	0
 4027 003c 00       		.byte	0
 4028 003d 06       		.uleb128 0x6
 4029 003e 13       		.uleb128 0x13
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 122


 4030 003f 01       		.byte	0x1
 4031 0040 0B       		.uleb128 0xb
 4032 0041 0B       		.uleb128 0xb
 4033 0042 3A       		.uleb128 0x3a
 4034 0043 0B       		.uleb128 0xb
 4035 0044 3B       		.uleb128 0x3b
 4036 0045 0B       		.uleb128 0xb
 4037 0046 01       		.uleb128 0x1
 4038 0047 13       		.uleb128 0x13
 4039 0048 00       		.byte	0
 4040 0049 00       		.byte	0
 4041 004a 07       		.uleb128 0x7
 4042 004b 0D       		.uleb128 0xd
 4043 004c 00       		.byte	0
 4044 004d 03       		.uleb128 0x3
 4045 004e 0E       		.uleb128 0xe
 4046 004f 3A       		.uleb128 0x3a
 4047 0050 0B       		.uleb128 0xb
 4048 0051 3B       		.uleb128 0x3b
 4049 0052 0B       		.uleb128 0xb
 4050 0053 49       		.uleb128 0x49
 4051 0054 13       		.uleb128 0x13
 4052 0055 38       		.uleb128 0x38
 4053 0056 0B       		.uleb128 0xb
 4054 0057 00       		.byte	0
 4055 0058 00       		.byte	0
 4056 0059 08       		.uleb128 0x8
 4057 005a 16       		.uleb128 0x16
 4058 005b 00       		.byte	0
 4059 005c 03       		.uleb128 0x3
 4060 005d 0E       		.uleb128 0xe
 4061 005e 3A       		.uleb128 0x3a
 4062 005f 0B       		.uleb128 0xb
 4063 0060 3B       		.uleb128 0x3b
 4064 0061 0B       		.uleb128 0xb
 4065 0062 49       		.uleb128 0x49
 4066 0063 13       		.uleb128 0x13
 4067 0064 00       		.byte	0
 4068 0065 00       		.byte	0
 4069 0066 09       		.uleb128 0x9
 4070 0067 04       		.uleb128 0x4
 4071 0068 01       		.byte	0x1
 4072 0069 0B       		.uleb128 0xb
 4073 006a 0B       		.uleb128 0xb
 4074 006b 49       		.uleb128 0x49
 4075 006c 13       		.uleb128 0x13
 4076 006d 3A       		.uleb128 0x3a
 4077 006e 0B       		.uleb128 0xb
 4078 006f 3B       		.uleb128 0x3b
 4079 0070 0B       		.uleb128 0xb
 4080 0071 01       		.uleb128 0x1
 4081 0072 13       		.uleb128 0x13
 4082 0073 00       		.byte	0
 4083 0074 00       		.byte	0
 4084 0075 0A       		.uleb128 0xa
 4085 0076 28       		.uleb128 0x28
 4086 0077 00       		.byte	0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 123


 4087 0078 03       		.uleb128 0x3
 4088 0079 0E       		.uleb128 0xe
 4089 007a 1C       		.uleb128 0x1c
 4090 007b 0B       		.uleb128 0xb
 4091 007c 00       		.byte	0
 4092 007d 00       		.byte	0
 4093 007e 0B       		.uleb128 0xb
 4094 007f 01       		.uleb128 0x1
 4095 0080 01       		.byte	0x1
 4096 0081 49       		.uleb128 0x49
 4097 0082 13       		.uleb128 0x13
 4098 0083 01       		.uleb128 0x1
 4099 0084 13       		.uleb128 0x13
 4100 0085 00       		.byte	0
 4101 0086 00       		.byte	0
 4102 0087 0C       		.uleb128 0xc
 4103 0088 21       		.uleb128 0x21
 4104 0089 00       		.byte	0
 4105 008a 49       		.uleb128 0x49
 4106 008b 13       		.uleb128 0x13
 4107 008c 2F       		.uleb128 0x2f
 4108 008d 0B       		.uleb128 0xb
 4109 008e 00       		.byte	0
 4110 008f 00       		.byte	0
 4111 0090 0D       		.uleb128 0xd
 4112 0091 0D       		.uleb128 0xd
 4113 0092 00       		.byte	0
 4114 0093 03       		.uleb128 0x3
 4115 0094 0E       		.uleb128 0xe
 4116 0095 3A       		.uleb128 0x3a
 4117 0096 0B       		.uleb128 0xb
 4118 0097 3B       		.uleb128 0x3b
 4119 0098 05       		.uleb128 0x5
 4120 0099 49       		.uleb128 0x49
 4121 009a 13       		.uleb128 0x13
 4122 009b 38       		.uleb128 0x38
 4123 009c 0B       		.uleb128 0xb
 4124 009d 00       		.byte	0
 4125 009e 00       		.byte	0
 4126 009f 0E       		.uleb128 0xe
 4127 00a0 13       		.uleb128 0x13
 4128 00a1 01       		.byte	0x1
 4129 00a2 0B       		.uleb128 0xb
 4130 00a3 0B       		.uleb128 0xb
 4131 00a4 3A       		.uleb128 0x3a
 4132 00a5 0B       		.uleb128 0xb
 4133 00a6 3B       		.uleb128 0x3b
 4134 00a7 05       		.uleb128 0x5
 4135 00a8 01       		.uleb128 0x1
 4136 00a9 13       		.uleb128 0x13
 4137 00aa 00       		.byte	0
 4138 00ab 00       		.byte	0
 4139 00ac 0F       		.uleb128 0xf
 4140 00ad 0D       		.uleb128 0xd
 4141 00ae 00       		.byte	0
 4142 00af 03       		.uleb128 0x3
 4143 00b0 08       		.uleb128 0x8
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 124


 4144 00b1 3A       		.uleb128 0x3a
 4145 00b2 0B       		.uleb128 0xb
 4146 00b3 3B       		.uleb128 0x3b
 4147 00b4 05       		.uleb128 0x5
 4148 00b5 49       		.uleb128 0x49
 4149 00b6 13       		.uleb128 0x13
 4150 00b7 38       		.uleb128 0x38
 4151 00b8 0B       		.uleb128 0xb
 4152 00b9 00       		.byte	0
 4153 00ba 00       		.byte	0
 4154 00bb 10       		.uleb128 0x10
 4155 00bc 0F       		.uleb128 0xf
 4156 00bd 00       		.byte	0
 4157 00be 0B       		.uleb128 0xb
 4158 00bf 0B       		.uleb128 0xb
 4159 00c0 49       		.uleb128 0x49
 4160 00c1 13       		.uleb128 0x13
 4161 00c2 00       		.byte	0
 4162 00c3 00       		.byte	0
 4163 00c4 11       		.uleb128 0x11
 4164 00c5 26       		.uleb128 0x26
 4165 00c6 00       		.byte	0
 4166 00c7 00       		.byte	0
 4167 00c8 00       		.byte	0
 4168 00c9 12       		.uleb128 0x12
 4169 00ca 0F       		.uleb128 0xf
 4170 00cb 00       		.byte	0
 4171 00cc 0B       		.uleb128 0xb
 4172 00cd 0B       		.uleb128 0xb
 4173 00ce 00       		.byte	0
 4174 00cf 00       		.byte	0
 4175 00d0 13       		.uleb128 0x13
 4176 00d1 2E       		.uleb128 0x2e
 4177 00d2 01       		.byte	0x1
 4178 00d3 03       		.uleb128 0x3
 4179 00d4 0E       		.uleb128 0xe
 4180 00d5 3A       		.uleb128 0x3a
 4181 00d6 0B       		.uleb128 0xb
 4182 00d7 3B       		.uleb128 0x3b
 4183 00d8 05       		.uleb128 0x5
 4184 00d9 27       		.uleb128 0x27
 4185 00da 19       		.uleb128 0x19
 4186 00db 11       		.uleb128 0x11
 4187 00dc 01       		.uleb128 0x1
 4188 00dd 12       		.uleb128 0x12
 4189 00de 06       		.uleb128 0x6
 4190 00df 40       		.uleb128 0x40
 4191 00e0 18       		.uleb128 0x18
 4192 00e1 9742     		.uleb128 0x2117
 4193 00e3 19       		.uleb128 0x19
 4194 00e4 01       		.uleb128 0x1
 4195 00e5 13       		.uleb128 0x13
 4196 00e6 00       		.byte	0
 4197 00e7 00       		.byte	0
 4198 00e8 14       		.uleb128 0x14
 4199 00e9 05       		.uleb128 0x5
 4200 00ea 00       		.byte	0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 125


 4201 00eb 03       		.uleb128 0x3
 4202 00ec 0E       		.uleb128 0xe
 4203 00ed 3A       		.uleb128 0x3a
 4204 00ee 0B       		.uleb128 0xb
 4205 00ef 3B       		.uleb128 0x3b
 4206 00f0 05       		.uleb128 0x5
 4207 00f1 49       		.uleb128 0x49
 4208 00f2 13       		.uleb128 0x13
 4209 00f3 02       		.uleb128 0x2
 4210 00f4 17       		.uleb128 0x17
 4211 00f5 00       		.byte	0
 4212 00f6 00       		.byte	0
 4213 00f7 15       		.uleb128 0x15
 4214 00f8 2E       		.uleb128 0x2e
 4215 00f9 01       		.byte	0x1
 4216 00fa 03       		.uleb128 0x3
 4217 00fb 0E       		.uleb128 0xe
 4218 00fc 3A       		.uleb128 0x3a
 4219 00fd 0B       		.uleb128 0xb
 4220 00fe 3B       		.uleb128 0x3b
 4221 00ff 05       		.uleb128 0x5
 4222 0100 27       		.uleb128 0x27
 4223 0101 19       		.uleb128 0x19
 4224 0102 11       		.uleb128 0x11
 4225 0103 01       		.uleb128 0x1
 4226 0104 12       		.uleb128 0x12
 4227 0105 06       		.uleb128 0x6
 4228 0106 40       		.uleb128 0x40
 4229 0107 18       		.uleb128 0x18
 4230 0108 9642     		.uleb128 0x2116
 4231 010a 19       		.uleb128 0x19
 4232 010b 01       		.uleb128 0x1
 4233 010c 13       		.uleb128 0x13
 4234 010d 00       		.byte	0
 4235 010e 00       		.byte	0
 4236 010f 16       		.uleb128 0x16
 4237 0110 34       		.uleb128 0x34
 4238 0111 00       		.byte	0
 4239 0112 03       		.uleb128 0x3
 4240 0113 0E       		.uleb128 0xe
 4241 0114 3A       		.uleb128 0x3a
 4242 0115 0B       		.uleb128 0xb
 4243 0116 3B       		.uleb128 0x3b
 4244 0117 05       		.uleb128 0x5
 4245 0118 49       		.uleb128 0x49
 4246 0119 13       		.uleb128 0x13
 4247 011a 02       		.uleb128 0x2
 4248 011b 18       		.uleb128 0x18
 4249 011c 00       		.byte	0
 4250 011d 00       		.byte	0
 4251 011e 17       		.uleb128 0x17
 4252 011f 2E       		.uleb128 0x2e
 4253 0120 00       		.byte	0
 4254 0121 03       		.uleb128 0x3
 4255 0122 0E       		.uleb128 0xe
 4256 0123 3A       		.uleb128 0x3a
 4257 0124 0B       		.uleb128 0xb
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 126


 4258 0125 3B       		.uleb128 0x3b
 4259 0126 05       		.uleb128 0x5
 4260 0127 27       		.uleb128 0x27
 4261 0128 19       		.uleb128 0x19
 4262 0129 11       		.uleb128 0x11
 4263 012a 01       		.uleb128 0x1
 4264 012b 12       		.uleb128 0x12
 4265 012c 06       		.uleb128 0x6
 4266 012d 40       		.uleb128 0x40
 4267 012e 18       		.uleb128 0x18
 4268 012f 9742     		.uleb128 0x2117
 4269 0131 19       		.uleb128 0x19
 4270 0132 00       		.byte	0
 4271 0133 00       		.byte	0
 4272 0134 18       		.uleb128 0x18
 4273 0135 34       		.uleb128 0x34
 4274 0136 00       		.byte	0
 4275 0137 03       		.uleb128 0x3
 4276 0138 0E       		.uleb128 0xe
 4277 0139 3A       		.uleb128 0x3a
 4278 013a 0B       		.uleb128 0xb
 4279 013b 3B       		.uleb128 0x3b
 4280 013c 05       		.uleb128 0x5
 4281 013d 49       		.uleb128 0x49
 4282 013e 13       		.uleb128 0x13
 4283 013f 02       		.uleb128 0x2
 4284 0140 17       		.uleb128 0x17
 4285 0141 00       		.byte	0
 4286 0142 00       		.byte	0
 4287 0143 19       		.uleb128 0x19
 4288 0144 2E       		.uleb128 0x2e
 4289 0145 01       		.byte	0x1
 4290 0146 03       		.uleb128 0x3
 4291 0147 0E       		.uleb128 0xe
 4292 0148 3A       		.uleb128 0x3a
 4293 0149 0B       		.uleb128 0xb
 4294 014a 3B       		.uleb128 0x3b
 4295 014b 05       		.uleb128 0x5
 4296 014c 27       		.uleb128 0x27
 4297 014d 19       		.uleb128 0x19
 4298 014e 49       		.uleb128 0x49
 4299 014f 13       		.uleb128 0x13
 4300 0150 11       		.uleb128 0x11
 4301 0151 01       		.uleb128 0x1
 4302 0152 12       		.uleb128 0x12
 4303 0153 06       		.uleb128 0x6
 4304 0154 40       		.uleb128 0x40
 4305 0155 18       		.uleb128 0x18
 4306 0156 9642     		.uleb128 0x2116
 4307 0158 19       		.uleb128 0x19
 4308 0159 01       		.uleb128 0x1
 4309 015a 13       		.uleb128 0x13
 4310 015b 00       		.byte	0
 4311 015c 00       		.byte	0
 4312 015d 1A       		.uleb128 0x1a
 4313 015e 26       		.uleb128 0x26
 4314 015f 00       		.byte	0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 127


 4315 0160 49       		.uleb128 0x49
 4316 0161 13       		.uleb128 0x13
 4317 0162 00       		.byte	0
 4318 0163 00       		.byte	0
 4319 0164 1B       		.uleb128 0x1b
 4320 0165 2E       		.uleb128 0x2e
 4321 0166 01       		.byte	0x1
 4322 0167 3F       		.uleb128 0x3f
 4323 0168 19       		.uleb128 0x19
 4324 0169 03       		.uleb128 0x3
 4325 016a 0E       		.uleb128 0xe
 4326 016b 3A       		.uleb128 0x3a
 4327 016c 0B       		.uleb128 0xb
 4328 016d 3B       		.uleb128 0x3b
 4329 016e 05       		.uleb128 0x5
 4330 016f 27       		.uleb128 0x27
 4331 0170 19       		.uleb128 0x19
 4332 0171 11       		.uleb128 0x11
 4333 0172 01       		.uleb128 0x1
 4334 0173 12       		.uleb128 0x12
 4335 0174 06       		.uleb128 0x6
 4336 0175 40       		.uleb128 0x40
 4337 0176 18       		.uleb128 0x18
 4338 0177 9742     		.uleb128 0x2117
 4339 0179 19       		.uleb128 0x19
 4340 017a 01       		.uleb128 0x1
 4341 017b 13       		.uleb128 0x13
 4342 017c 00       		.byte	0
 4343 017d 00       		.byte	0
 4344 017e 1C       		.uleb128 0x1c
 4345 017f 898201   		.uleb128 0x4109
 4346 0182 00       		.byte	0
 4347 0183 11       		.uleb128 0x11
 4348 0184 01       		.uleb128 0x1
 4349 0185 31       		.uleb128 0x31
 4350 0186 13       		.uleb128 0x13
 4351 0187 00       		.byte	0
 4352 0188 00       		.byte	0
 4353 0189 1D       		.uleb128 0x1d
 4354 018a 2E       		.uleb128 0x2e
 4355 018b 01       		.byte	0x1
 4356 018c 3F       		.uleb128 0x3f
 4357 018d 19       		.uleb128 0x19
 4358 018e 03       		.uleb128 0x3
 4359 018f 0E       		.uleb128 0xe
 4360 0190 3A       		.uleb128 0x3a
 4361 0191 0B       		.uleb128 0xb
 4362 0192 3B       		.uleb128 0x3b
 4363 0193 05       		.uleb128 0x5
 4364 0194 27       		.uleb128 0x27
 4365 0195 19       		.uleb128 0x19
 4366 0196 49       		.uleb128 0x49
 4367 0197 13       		.uleb128 0x13
 4368 0198 11       		.uleb128 0x11
 4369 0199 01       		.uleb128 0x1
 4370 019a 12       		.uleb128 0x12
 4371 019b 06       		.uleb128 0x6
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 128


 4372 019c 40       		.uleb128 0x40
 4373 019d 18       		.uleb128 0x18
 4374 019e 9642     		.uleb128 0x2116
 4375 01a0 19       		.uleb128 0x19
 4376 01a1 01       		.uleb128 0x1
 4377 01a2 13       		.uleb128 0x13
 4378 01a3 00       		.byte	0
 4379 01a4 00       		.byte	0
 4380 01a5 1E       		.uleb128 0x1e
 4381 01a6 2E       		.uleb128 0x2e
 4382 01a7 01       		.byte	0x1
 4383 01a8 03       		.uleb128 0x3
 4384 01a9 0E       		.uleb128 0xe
 4385 01aa 3A       		.uleb128 0x3a
 4386 01ab 0B       		.uleb128 0xb
 4387 01ac 3B       		.uleb128 0x3b
 4388 01ad 05       		.uleb128 0x5
 4389 01ae 27       		.uleb128 0x27
 4390 01af 19       		.uleb128 0x19
 4391 01b0 20       		.uleb128 0x20
 4392 01b1 0B       		.uleb128 0xb
 4393 01b2 01       		.uleb128 0x1
 4394 01b3 13       		.uleb128 0x13
 4395 01b4 00       		.byte	0
 4396 01b5 00       		.byte	0
 4397 01b6 1F       		.uleb128 0x1f
 4398 01b7 34       		.uleb128 0x34
 4399 01b8 00       		.byte	0
 4400 01b9 03       		.uleb128 0x3
 4401 01ba 0E       		.uleb128 0xe
 4402 01bb 3A       		.uleb128 0x3a
 4403 01bc 0B       		.uleb128 0xb
 4404 01bd 3B       		.uleb128 0x3b
 4405 01be 05       		.uleb128 0x5
 4406 01bf 49       		.uleb128 0x49
 4407 01c0 13       		.uleb128 0x13
 4408 01c1 00       		.byte	0
 4409 01c2 00       		.byte	0
 4410 01c3 20       		.uleb128 0x20
 4411 01c4 1D       		.uleb128 0x1d
 4412 01c5 01       		.byte	0x1
 4413 01c6 31       		.uleb128 0x31
 4414 01c7 13       		.uleb128 0x13
 4415 01c8 11       		.uleb128 0x11
 4416 01c9 01       		.uleb128 0x1
 4417 01ca 12       		.uleb128 0x12
 4418 01cb 06       		.uleb128 0x6
 4419 01cc 58       		.uleb128 0x58
 4420 01cd 0B       		.uleb128 0xb
 4421 01ce 59       		.uleb128 0x59
 4422 01cf 05       		.uleb128 0x5
 4423 01d0 01       		.uleb128 0x1
 4424 01d1 13       		.uleb128 0x13
 4425 01d2 00       		.byte	0
 4426 01d3 00       		.byte	0
 4427 01d4 21       		.uleb128 0x21
 4428 01d5 0B       		.uleb128 0xb
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 129


 4429 01d6 01       		.byte	0x1
 4430 01d7 11       		.uleb128 0x11
 4431 01d8 01       		.uleb128 0x1
 4432 01d9 12       		.uleb128 0x12
 4433 01da 06       		.uleb128 0x6
 4434 01db 00       		.byte	0
 4435 01dc 00       		.byte	0
 4436 01dd 22       		.uleb128 0x22
 4437 01de 34       		.uleb128 0x34
 4438 01df 00       		.byte	0
 4439 01e0 31       		.uleb128 0x31
 4440 01e1 13       		.uleb128 0x13
 4441 01e2 02       		.uleb128 0x2
 4442 01e3 17       		.uleb128 0x17
 4443 01e4 00       		.byte	0
 4444 01e5 00       		.byte	0
 4445 01e6 23       		.uleb128 0x23
 4446 01e7 898201   		.uleb128 0x4109
 4447 01ea 01       		.byte	0x1
 4448 01eb 11       		.uleb128 0x11
 4449 01ec 01       		.uleb128 0x1
 4450 01ed 31       		.uleb128 0x31
 4451 01ee 13       		.uleb128 0x13
 4452 01ef 01       		.uleb128 0x1
 4453 01f0 13       		.uleb128 0x13
 4454 01f1 00       		.byte	0
 4455 01f2 00       		.byte	0
 4456 01f3 24       		.uleb128 0x24
 4457 01f4 8A8201   		.uleb128 0x410a
 4458 01f7 00       		.byte	0
 4459 01f8 02       		.uleb128 0x2
 4460 01f9 18       		.uleb128 0x18
 4461 01fa 9142     		.uleb128 0x2111
 4462 01fc 18       		.uleb128 0x18
 4463 01fd 00       		.byte	0
 4464 01fe 00       		.byte	0
 4465 01ff 25       		.uleb128 0x25
 4466 0200 898201   		.uleb128 0x4109
 4467 0203 01       		.byte	0x1
 4468 0204 11       		.uleb128 0x11
 4469 0205 01       		.uleb128 0x1
 4470 0206 31       		.uleb128 0x31
 4471 0207 13       		.uleb128 0x13
 4472 0208 00       		.byte	0
 4473 0209 00       		.byte	0
 4474 020a 26       		.uleb128 0x26
 4475 020b 2E       		.uleb128 0x2e
 4476 020c 01       		.byte	0x1
 4477 020d 03       		.uleb128 0x3
 4478 020e 0E       		.uleb128 0xe
 4479 020f 3A       		.uleb128 0x3a
 4480 0210 0B       		.uleb128 0xb
 4481 0211 3B       		.uleb128 0x3b
 4482 0212 05       		.uleb128 0x5
 4483 0213 27       		.uleb128 0x27
 4484 0214 19       		.uleb128 0x19
 4485 0215 49       		.uleb128 0x49
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 130


 4486 0216 13       		.uleb128 0x13
 4487 0217 11       		.uleb128 0x11
 4488 0218 01       		.uleb128 0x1
 4489 0219 12       		.uleb128 0x12
 4490 021a 06       		.uleb128 0x6
 4491 021b 40       		.uleb128 0x40
 4492 021c 18       		.uleb128 0x18
 4493 021d 9742     		.uleb128 0x2117
 4494 021f 19       		.uleb128 0x19
 4495 0220 01       		.uleb128 0x1
 4496 0221 13       		.uleb128 0x13
 4497 0222 00       		.byte	0
 4498 0223 00       		.byte	0
 4499 0224 27       		.uleb128 0x27
 4500 0225 34       		.uleb128 0x34
 4501 0226 00       		.byte	0
 4502 0227 03       		.uleb128 0x3
 4503 0228 0E       		.uleb128 0xe
 4504 0229 3A       		.uleb128 0x3a
 4505 022a 0B       		.uleb128 0xb
 4506 022b 3B       		.uleb128 0x3b
 4507 022c 0B       		.uleb128 0xb
 4508 022d 49       		.uleb128 0x49
 4509 022e 13       		.uleb128 0x13
 4510 022f 02       		.uleb128 0x2
 4511 0230 18       		.uleb128 0x18
 4512 0231 00       		.byte	0
 4513 0232 00       		.byte	0
 4514 0233 28       		.uleb128 0x28
 4515 0234 34       		.uleb128 0x34
 4516 0235 00       		.byte	0
 4517 0236 03       		.uleb128 0x3
 4518 0237 0E       		.uleb128 0xe
 4519 0238 3A       		.uleb128 0x3a
 4520 0239 0B       		.uleb128 0xb
 4521 023a 3B       		.uleb128 0x3b
 4522 023b 05       		.uleb128 0x5
 4523 023c 49       		.uleb128 0x49
 4524 023d 13       		.uleb128 0x13
 4525 023e 3F       		.uleb128 0x3f
 4526 023f 19       		.uleb128 0x19
 4527 0240 3C       		.uleb128 0x3c
 4528 0241 19       		.uleb128 0x19
 4529 0242 00       		.byte	0
 4530 0243 00       		.byte	0
 4531 0244 29       		.uleb128 0x29
 4532 0245 34       		.uleb128 0x34
 4533 0246 00       		.byte	0
 4534 0247 03       		.uleb128 0x3
 4535 0248 0E       		.uleb128 0xe
 4536 0249 3A       		.uleb128 0x3a
 4537 024a 0B       		.uleb128 0xb
 4538 024b 3B       		.uleb128 0x3b
 4539 024c 0B       		.uleb128 0xb
 4540 024d 49       		.uleb128 0x49
 4541 024e 13       		.uleb128 0x13
 4542 024f 3F       		.uleb128 0x3f
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 131


 4543 0250 19       		.uleb128 0x19
 4544 0251 3C       		.uleb128 0x3c
 4545 0252 19       		.uleb128 0x19
 4546 0253 00       		.byte	0
 4547 0254 00       		.byte	0
 4548 0255 2A       		.uleb128 0x2a
 4549 0256 34       		.uleb128 0x34
 4550 0257 00       		.byte	0
 4551 0258 03       		.uleb128 0x3
 4552 0259 0E       		.uleb128 0xe
 4553 025a 3A       		.uleb128 0x3a
 4554 025b 0B       		.uleb128 0xb
 4555 025c 3B       		.uleb128 0x3b
 4556 025d 0B       		.uleb128 0xb
 4557 025e 49       		.uleb128 0x49
 4558 025f 13       		.uleb128 0x13
 4559 0260 3F       		.uleb128 0x3f
 4560 0261 19       		.uleb128 0x19
 4561 0262 02       		.uleb128 0x2
 4562 0263 18       		.uleb128 0x18
 4563 0264 00       		.byte	0
 4564 0265 00       		.byte	0
 4565 0266 2B       		.uleb128 0x2b
 4566 0267 2E       		.uleb128 0x2e
 4567 0268 00       		.byte	0
 4568 0269 3F       		.uleb128 0x3f
 4569 026a 19       		.uleb128 0x19
 4570 026b 3C       		.uleb128 0x3c
 4571 026c 19       		.uleb128 0x19
 4572 026d 6E       		.uleb128 0x6e
 4573 026e 0E       		.uleb128 0xe
 4574 026f 03       		.uleb128 0x3
 4575 0270 0E       		.uleb128 0xe
 4576 0271 3A       		.uleb128 0x3a
 4577 0272 0B       		.uleb128 0xb
 4578 0273 3B       		.uleb128 0x3b
 4579 0274 0B       		.uleb128 0xb
 4580 0275 00       		.byte	0
 4581 0276 00       		.byte	0
 4582 0277 00       		.byte	0
 4583              		.section	.debug_loc,"",%progbits
 4584              	.Ldebug_loc0:
 4585              	.LLST0:
 4586 0000 00000000 		.4byte	.LVL0
 4587 0004 04000000 		.4byte	.LVL2
 4588 0008 0100     		.2byte	0x1
 4589 000a 50       		.byte	0x50
 4590 000b 04000000 		.4byte	.LVL2
 4591 000f 10000000 		.4byte	.LFE1
 4592 0013 0400     		.2byte	0x4
 4593 0015 F3       		.byte	0xf3
 4594 0016 01       		.uleb128 0x1
 4595 0017 50       		.byte	0x50
 4596 0018 9F       		.byte	0x9f
 4597 0019 00000000 		.4byte	0
 4598 001d 00000000 		.4byte	0
 4599              	.LLST1:
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 132


 4600 0021 00000000 		.4byte	.LVL0
 4601 0025 02000000 		.4byte	.LVL1
 4602 0029 0100     		.2byte	0x1
 4603 002b 51       		.byte	0x51
 4604 002c 02000000 		.4byte	.LVL1
 4605 0030 10000000 		.4byte	.LFE1
 4606 0034 0300     		.2byte	0x3
 4607 0036 71       		.byte	0x71
 4608 0037 01       		.sleb128 1
 4609 0038 9F       		.byte	0x9f
 4610 0039 00000000 		.4byte	0
 4611 003d 00000000 		.4byte	0
 4612              	.LLST2:
 4613 0041 08000000 		.4byte	.LVL4
 4614 0045 10000000 		.4byte	.LVL6
 4615 0049 0100     		.2byte	0x1
 4616 004b 52       		.byte	0x52
 4617 004c 10000000 		.4byte	.LVL6
 4618 0050 12000000 		.4byte	.LVL7
 4619 0054 0200     		.2byte	0x2
 4620 0056 73       		.byte	0x73
 4621 0057 00       		.sleb128 0
 4622 0058 12000000 		.4byte	.LVL7
 4623 005c 14000000 		.4byte	.LVL8
 4624 0060 0500     		.2byte	0x5
 4625 0062 0C       		.byte	0xc
 4626 0063 C0010B40 		.4byte	0x400b01c0
 4627 0067 14000000 		.4byte	.LVL8
 4628 006b 2C000000 		.4byte	.LFE19
 4629 006f 0100     		.2byte	0x1
 4630 0071 53       		.byte	0x53
 4631 0072 00000000 		.4byte	0
 4632 0076 00000000 		.4byte	0
 4633              	.LLST3:
 4634 007a 04000000 		.4byte	.LVL10
 4635 007e 0E000000 		.4byte	.LVL12
 4636 0082 0100     		.2byte	0x1
 4637 0084 53       		.byte	0x53
 4638 0085 0E000000 		.4byte	.LVL12
 4639 0089 10000000 		.4byte	.LVL13
 4640 008d 0500     		.2byte	0x5
 4641 008f 0C       		.byte	0xc
 4642 0090 A8020B40 		.4byte	0x400b02a8
 4643 0094 00000000 		.4byte	0
 4644 0098 00000000 		.4byte	0
 4645              	.LLST4:
 4646 009c 00000000 		.4byte	.LVL14
 4647 00a0 14000000 		.4byte	.LVL17
 4648 00a4 0100     		.2byte	0x1
 4649 00a6 50       		.byte	0x50
 4650 00a7 14000000 		.4byte	.LVL17
 4651 00ab 42000000 		.4byte	.LFE21
 4652 00af 0400     		.2byte	0x4
 4653 00b1 F3       		.byte	0xf3
 4654 00b2 01       		.uleb128 0x1
 4655 00b3 50       		.byte	0x50
 4656 00b4 9F       		.byte	0x9f
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 133


 4657 00b5 00000000 		.4byte	0
 4658 00b9 00000000 		.4byte	0
 4659              	.LLST5:
 4660 00bd 00000000 		.4byte	.LVL14
 4661 00c1 16000000 		.4byte	.LVL18
 4662 00c5 0100     		.2byte	0x1
 4663 00c7 51       		.byte	0x51
 4664 00c8 16000000 		.4byte	.LVL18
 4665 00cc 40000000 		.4byte	.LVL31
 4666 00d0 0100     		.2byte	0x1
 4667 00d2 56       		.byte	0x56
 4668 00d3 40000000 		.4byte	.LVL31
 4669 00d7 42000000 		.4byte	.LFE21
 4670 00db 0400     		.2byte	0x4
 4671 00dd F3       		.byte	0xf3
 4672 00de 01       		.uleb128 0x1
 4673 00df 51       		.byte	0x51
 4674 00e0 9F       		.byte	0x9f
 4675 00e1 00000000 		.4byte	0
 4676 00e5 00000000 		.4byte	0
 4677              	.LLST6:
 4678 00e9 00000000 		.4byte	.LVL14
 4679 00ed 19000000 		.4byte	.LVL19-1
 4680 00f1 0100     		.2byte	0x1
 4681 00f3 52       		.byte	0x52
 4682 00f4 19000000 		.4byte	.LVL19-1
 4683 00f8 40000000 		.4byte	.LVL30
 4684 00fc 0100     		.2byte	0x1
 4685 00fe 55       		.byte	0x55
 4686 00ff 40000000 		.4byte	.LVL30
 4687 0103 42000000 		.4byte	.LFE21
 4688 0107 0400     		.2byte	0x4
 4689 0109 F3       		.byte	0xf3
 4690 010a 01       		.uleb128 0x1
 4691 010b 52       		.byte	0x52
 4692 010c 9F       		.byte	0x9f
 4693 010d 00000000 		.4byte	0
 4694 0111 00000000 		.4byte	0
 4695              	.LLST7:
 4696 0115 1C000000 		.4byte	.LVL20
 4697 0119 2A000000 		.4byte	.LVL22
 4698 011d 0100     		.2byte	0x1
 4699 011f 50       		.byte	0x50
 4700 0120 2C000000 		.4byte	.LVL23
 4701 0124 2E000000 		.4byte	.LVL24
 4702 0128 0100     		.2byte	0x1
 4703 012a 50       		.byte	0x50
 4704 012b 00000000 		.4byte	0
 4705 012f 00000000 		.4byte	0
 4706              	.LLST8:
 4707 0133 06000000 		.4byte	.LVL15
 4708 0137 2A000000 		.4byte	.LVL22
 4709 013b 0200     		.2byte	0x2
 4710 013d 30       		.byte	0x30
 4711 013e 9F       		.byte	0x9f
 4712 013f 2A000000 		.4byte	.LVL22
 4713 0143 2C000000 		.4byte	.LVL23
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 134


 4714 0147 0100     		.2byte	0x1
 4715 0149 50       		.byte	0x50
 4716 014a 2C000000 		.4byte	.LVL23
 4717 014e 2E000000 		.4byte	.LVL24
 4718 0152 0200     		.2byte	0x2
 4719 0154 30       		.byte	0x30
 4720 0155 9F       		.byte	0x9f
 4721 0156 2E000000 		.4byte	.LVL24
 4722 015a 38000000 		.4byte	.LVL25
 4723 015e 0100     		.2byte	0x1
 4724 0160 50       		.byte	0x50
 4725 0161 3A000000 		.4byte	.LVL26
 4726 0165 3C000000 		.4byte	.LVL27
 4727 0169 0100     		.2byte	0x1
 4728 016b 50       		.byte	0x50
 4729 016c 3E000000 		.4byte	.LVL28
 4730 0170 40000000 		.4byte	.LVL29
 4731 0174 0100     		.2byte	0x1
 4732 0176 50       		.byte	0x50
 4733 0177 00000000 		.4byte	0
 4734 017b 00000000 		.4byte	0
 4735              	.LLST9:
 4736 017f 0E000000 		.4byte	.LVL16
 4737 0183 24000000 		.4byte	.LVL21
 4738 0187 0100     		.2byte	0x1
 4739 0189 54       		.byte	0x54
 4740 018a 24000000 		.4byte	.LVL21
 4741 018e 42000000 		.4byte	.LFE21
 4742 0192 0100     		.2byte	0x1
 4743 0194 53       		.byte	0x53
 4744 0195 00000000 		.4byte	0
 4745 0199 00000000 		.4byte	0
 4746              	.LLST10:
 4747 019d 16000000 		.4byte	.LVL34
 4748 01a1 5E000000 		.4byte	.LVL41
 4749 01a5 0100     		.2byte	0x1
 4750 01a7 51       		.byte	0x51
 4751 01a8 5E000000 		.4byte	.LVL41
 4752 01ac 62000000 		.4byte	.LVL42
 4753 01b0 0200     		.2byte	0x2
 4754 01b2 72       		.byte	0x72
 4755 01b3 00       		.sleb128 0
 4756 01b4 62000000 		.4byte	.LVL42
 4757 01b8 64000000 		.4byte	.LVL43
 4758 01bc 0500     		.2byte	0x5
 4759 01be 0C       		.byte	0xc
 4760 01bf 94020B40 		.4byte	0x400b0294
 4761 01c3 66000000 		.4byte	.LVL44
 4762 01c7 70000000 		.4byte	.LVL46
 4763 01cb 0100     		.2byte	0x1
 4764 01cd 52       		.byte	0x52
 4765 01ce 70000000 		.4byte	.LVL46
 4766 01d2 72000000 		.4byte	.LVL47
 4767 01d6 0500     		.2byte	0x5
 4768 01d8 0C       		.byte	0xc
 4769 01d9 A8020B40 		.4byte	0x400b02a8
 4770 01dd 00000000 		.4byte	0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 135


 4771 01e1 00000000 		.4byte	0
 4772              	.LLST11:
 4773 01e5 00000000 		.4byte	.LVL51
 4774 01e9 07000000 		.4byte	.LVL52-1
 4775 01ed 0100     		.2byte	0x1
 4776 01ef 50       		.byte	0x50
 4777 01f0 07000000 		.4byte	.LVL52-1
 4778 01f4 16000000 		.4byte	.LVL55
 4779 01f8 0100     		.2byte	0x1
 4780 01fa 55       		.byte	0x55
 4781 01fb 16000000 		.4byte	.LVL55
 4782 01ff 4C000000 		.4byte	.LFE6
 4783 0203 0400     		.2byte	0x4
 4784 0205 F3       		.byte	0xf3
 4785 0206 01       		.uleb128 0x1
 4786 0207 50       		.byte	0x50
 4787 0208 9F       		.byte	0x9f
 4788 0209 00000000 		.4byte	0
 4789 020d 00000000 		.4byte	0
 4790              	.LLST12:
 4791 0211 08000000 		.4byte	.LVL52
 4792 0215 1F000000 		.4byte	.LVL57-1
 4793 0219 0100     		.2byte	0x1
 4794 021b 50       		.byte	0x50
 4795 021c 24000000 		.4byte	.LVL58
 4796 0220 39000000 		.4byte	.LVL62-1
 4797 0224 0100     		.2byte	0x1
 4798 0226 50       		.byte	0x50
 4799 0227 00000000 		.4byte	0
 4800 022b 00000000 		.4byte	0
 4801              	.LLST13:
 4802 022f 0C000000 		.4byte	.LVL53
 4803 0233 1F000000 		.4byte	.LVL57-1
 4804 0237 0100     		.2byte	0x1
 4805 0239 53       		.byte	0x53
 4806 023a 00000000 		.4byte	0
 4807 023e 00000000 		.4byte	0
 4808              	.LLST14:
 4809 0242 28000000 		.4byte	.LVL59
 4810 0246 39000000 		.4byte	.LVL62-1
 4811 024a 0100     		.2byte	0x1
 4812 024c 53       		.byte	0x53
 4813 024d 00000000 		.4byte	0
 4814 0251 00000000 		.4byte	0
 4815              	.LLST15:
 4816 0255 00000000 		.4byte	.LVL63
 4817 0259 08000000 		.4byte	.LVL64
 4818 025d 0100     		.2byte	0x1
 4819 025f 50       		.byte	0x50
 4820 0260 08000000 		.4byte	.LVL64
 4821 0264 15000000 		.4byte	.LVL67-1
 4822 0268 0100     		.2byte	0x1
 4823 026a 53       		.byte	0x53
 4824 026b 15000000 		.4byte	.LVL67-1
 4825 026f 26000000 		.4byte	.LFE7
 4826 0273 0400     		.2byte	0x4
 4827 0275 F3       		.byte	0xf3
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 136


 4828 0276 01       		.uleb128 0x1
 4829 0277 50       		.byte	0x50
 4830 0278 9F       		.byte	0x9f
 4831 0279 00000000 		.4byte	0
 4832 027d 00000000 		.4byte	0
 4833              	.LLST16:
 4834 0281 00000000 		.4byte	.LVL63
 4835 0285 12000000 		.4byte	.LVL66
 4836 0289 0100     		.2byte	0x1
 4837 028b 51       		.byte	0x51
 4838 028c 12000000 		.4byte	.LVL66
 4839 0290 26000000 		.4byte	.LFE7
 4840 0294 0400     		.2byte	0x4
 4841 0296 F3       		.byte	0xf3
 4842 0297 01       		.uleb128 0x1
 4843 0298 51       		.byte	0x51
 4844 0299 9F       		.byte	0x9f
 4845 029a 00000000 		.4byte	0
 4846 029e 00000000 		.4byte	0
 4847              	.LLST17:
 4848 02a2 00000000 		.4byte	.LVL63
 4849 02a6 15000000 		.4byte	.LVL67-1
 4850 02aa 0100     		.2byte	0x1
 4851 02ac 52       		.byte	0x52
 4852 02ad 15000000 		.4byte	.LVL67-1
 4853 02b1 18000000 		.4byte	.LVL68
 4854 02b5 0100     		.2byte	0x1
 4855 02b7 54       		.byte	0x54
 4856 02b8 18000000 		.4byte	.LVL68
 4857 02bc 24000000 		.4byte	.LVL71
 4858 02c0 0300     		.2byte	0x3
 4859 02c2 74       		.byte	0x74
 4860 02c3 05       		.sleb128 5
 4861 02c4 9F       		.byte	0x9f
 4862 02c5 24000000 		.4byte	.LVL71
 4863 02c9 26000000 		.4byte	.LFE7
 4864 02cd 0400     		.2byte	0x4
 4865 02cf F3       		.byte	0xf3
 4866 02d0 01       		.uleb128 0x1
 4867 02d1 52       		.byte	0x52
 4868 02d2 9F       		.byte	0x9f
 4869 02d3 00000000 		.4byte	0
 4870 02d7 00000000 		.4byte	0
 4871              	.LLST18:
 4872 02db 0C000000 		.4byte	.LVL65
 4873 02df 15000000 		.4byte	.LVL67-1
 4874 02e3 0100     		.2byte	0x1
 4875 02e5 50       		.byte	0x50
 4876 02e6 15000000 		.4byte	.LVL67-1
 4877 02ea 16000000 		.4byte	.LVL67
 4878 02ee 0800     		.2byte	0x8
 4879 02f0 31       		.byte	0x31
 4880 02f1 F3       		.byte	0xf3
 4881 02f2 01       		.uleb128 0x1
 4882 02f3 51       		.byte	0x51
 4883 02f4 24       		.byte	0x24
 4884 02f5 31       		.byte	0x31
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 137


 4885 02f6 1C       		.byte	0x1c
 4886 02f7 9F       		.byte	0x9f
 4887 02f8 16000000 		.4byte	.LVL67
 4888 02fc 24000000 		.4byte	.LVL70
 4889 0300 0100     		.2byte	0x1
 4890 0302 50       		.byte	0x50
 4891 0303 00000000 		.4byte	0
 4892 0307 00000000 		.4byte	0
 4893              	.LLST19:
 4894 030b 12000000 		.4byte	.LVL73
 4895 030f 33000000 		.4byte	.LVL81-1
 4896 0313 0100     		.2byte	0x1
 4897 0315 51       		.byte	0x51
 4898 0316 00000000 		.4byte	0
 4899 031a 00000000 		.4byte	0
 4900              	.LLST20:
 4901 031e 14000000 		.4byte	.LVL74
 4902 0322 24000000 		.4byte	.LVL77
 4903 0326 0100     		.2byte	0x1
 4904 0328 53       		.byte	0x53
 4905 0329 24000000 		.4byte	.LVL77
 4906 032d 26000000 		.4byte	.LVL78
 4907 0331 0300     		.2byte	0x3
 4908 0333 73       		.byte	0x73
 4909 0334 05       		.sleb128 5
 4910 0335 9F       		.byte	0x9f
 4911 0336 00000000 		.4byte	0
 4912 033a 00000000 		.4byte	0
 4913              	.LLST21:
 4914 033e 16000000 		.4byte	.LVL75
 4915 0342 33000000 		.4byte	.LVL81-1
 4916 0346 0100     		.2byte	0x1
 4917 0348 50       		.byte	0x50
 4918 0349 00000000 		.4byte	0
 4919 034d 00000000 		.4byte	0
 4920              	.LLST22:
 4921 0351 10000000 		.4byte	.LVL72
 4922 0355 14000000 		.4byte	.LVL74
 4923 0359 0100     		.2byte	0x1
 4924 035b 53       		.byte	0x53
 4925 035c 00000000 		.4byte	0
 4926 0360 00000000 		.4byte	0
 4927              	.LLST23:
 4928 0364 00000000 		.4byte	.LVL82
 4929 0368 06000000 		.4byte	.LVL83
 4930 036c 0100     		.2byte	0x1
 4931 036e 50       		.byte	0x50
 4932 036f 06000000 		.4byte	.LVL83
 4933 0373 0D000000 		.4byte	.LVL84-1
 4934 0377 0100     		.2byte	0x1
 4935 0379 53       		.byte	0x53
 4936 037a 0D000000 		.4byte	.LVL84-1
 4937 037e 1C000000 		.4byte	.LFE9
 4938 0382 0400     		.2byte	0x4
 4939 0384 F3       		.byte	0xf3
 4940 0385 01       		.uleb128 0x1
 4941 0386 50       		.byte	0x50
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 138


 4942 0387 9F       		.byte	0x9f
 4943 0388 00000000 		.4byte	0
 4944 038c 00000000 		.4byte	0
 4945              	.LLST24:
 4946 0390 0E000000 		.4byte	.LVL84
 4947 0394 10000000 		.4byte	.LVL85
 4948 0398 0100     		.2byte	0x1
 4949 039a 50       		.byte	0x50
 4950 039b 00000000 		.4byte	0
 4951 039f 00000000 		.4byte	0
 4952              	.LLST25:
 4953 03a3 06000000 		.4byte	.LVL83
 4954 03a7 0D000000 		.4byte	.LVL84-1
 4955 03ab 0100     		.2byte	0x1
 4956 03ad 50       		.byte	0x50
 4957 03ae 00000000 		.4byte	0
 4958 03b2 00000000 		.4byte	0
 4959              	.LLST26:
 4960 03b6 3E000000 		.4byte	.LVL87
 4961 03ba 44000000 		.4byte	.LVL88
 4962 03be 0400     		.2byte	0x4
 4963 03c0 0A       		.byte	0xa
 4964 03c1 8070     		.2byte	0x7080
 4965 03c3 9F       		.byte	0x9f
 4966 03c4 44000000 		.4byte	.LVL88
 4967 03c8 5A000000 		.4byte	.LVL90
 4968 03cc 0100     		.2byte	0x1
 4969 03ce 53       		.byte	0x53
 4970 03cf 00000000 		.4byte	0
 4971 03d3 00000000 		.4byte	0
 4972              	.LLST27:
 4973 03d7 A4000000 		.4byte	.LVL93
 4974 03db AA000000 		.4byte	.LVL94
 4975 03df 0400     		.2byte	0x4
 4976 03e1 0A       		.byte	0xa
 4977 03e2 8070     		.2byte	0x7080
 4978 03e4 9F       		.byte	0x9f
 4979 03e5 AA000000 		.4byte	.LVL94
 4980 03e9 BC000000 		.4byte	.LVL96
 4981 03ed 0100     		.2byte	0x1
 4982 03ef 53       		.byte	0x53
 4983 03f0 00000000 		.4byte	0
 4984 03f4 00000000 		.4byte	0
 4985              	.LLST28:
 4986 03f8 00000000 		.4byte	.LVL99
 4987 03fc 0B000000 		.4byte	.LVL102-1
 4988 0400 0100     		.2byte	0x1
 4989 0402 50       		.byte	0x50
 4990 0403 0B000000 		.4byte	.LVL102-1
 4991 0407 32000000 		.4byte	.LVL109
 4992 040b 0100     		.2byte	0x1
 4993 040d 54       		.byte	0x54
 4994 040e 32000000 		.4byte	.LVL109
 4995 0412 34000000 		.4byte	.LFE17
 4996 0416 0400     		.2byte	0x4
 4997 0418 F3       		.byte	0xf3
 4998 0419 01       		.uleb128 0x1
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 139


 4999 041a 50       		.byte	0x50
 5000 041b 9F       		.byte	0x9f
 5001 041c 00000000 		.4byte	0
 5002 0420 00000000 		.4byte	0
 5003              	.LLST29:
 5004 0424 10000000 		.4byte	.LVL103
 5005 0428 16000000 		.4byte	.LVL104
 5006 042c 0100     		.2byte	0x1
 5007 042e 53       		.byte	0x53
 5008 042f 18000000 		.4byte	.LVL105
 5009 0433 1E000000 		.4byte	.LVL106
 5010 0437 0100     		.2byte	0x1
 5011 0439 52       		.byte	0x52
 5012 043a 1E000000 		.4byte	.LVL106
 5013 043e 31000000 		.4byte	.LVL108-1
 5014 0442 0100     		.2byte	0x1
 5015 0444 53       		.byte	0x53
 5016 0445 00000000 		.4byte	0
 5017 0449 00000000 		.4byte	0
 5018              	.LLST30:
 5019 044d 0C000000 		.4byte	.LVL102
 5020 0451 31000000 		.4byte	.LVL108-1
 5021 0455 0100     		.2byte	0x1
 5022 0457 50       		.byte	0x50
 5023 0458 00000000 		.4byte	0
 5024 045c 00000000 		.4byte	0
 5025              	.LLST31:
 5026 0460 06000000 		.4byte	.LVL100
 5027 0464 32000000 		.4byte	.LVL110
 5028 0468 0100     		.2byte	0x1
 5029 046a 55       		.byte	0x55
 5030 046b 00000000 		.4byte	0
 5031 046f 00000000 		.4byte	0
 5032              	.LLST32:
 5033 0473 08000000 		.4byte	.LVL101
 5034 0477 20000000 		.4byte	.LVL107
 5035 047b 0100     		.2byte	0x1
 5036 047d 56       		.byte	0x56
 5037 047e 00000000 		.4byte	0
 5038 0482 00000000 		.4byte	0
 5039              	.LLST33:
 5040 0486 10000000 		.4byte	.LVL111
 5041 048a 31000000 		.4byte	.LVL112-1
 5042 048e 0100     		.2byte	0x1
 5043 0490 50       		.byte	0x50
 5044 0491 00000000 		.4byte	0
 5045 0495 00000000 		.4byte	0
 5046              	.LLST34:
 5047 0499 00000000 		.4byte	.LVL116
 5048 049d 06000000 		.4byte	.LVL117
 5049 04a1 0100     		.2byte	0x1
 5050 04a3 50       		.byte	0x50
 5051 04a4 06000000 		.4byte	.LVL117
 5052 04a8 24000000 		.4byte	.LFE15
 5053 04ac 0400     		.2byte	0x4
 5054 04ae F3       		.byte	0xf3
 5055 04af 01       		.uleb128 0x1
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 140


 5056 04b0 50       		.byte	0x50
 5057 04b1 9F       		.byte	0x9f
 5058 04b2 00000000 		.4byte	0
 5059 04b6 00000000 		.4byte	0
 5060              	.LLST35:
 5061 04ba 00000000 		.4byte	.LVL116
 5062 04be 0E000000 		.4byte	.LVL118
 5063 04c2 0100     		.2byte	0x1
 5064 04c4 51       		.byte	0x51
 5065 04c5 0E000000 		.4byte	.LVL118
 5066 04c9 24000000 		.4byte	.LFE15
 5067 04cd 0400     		.2byte	0x4
 5068 04cf F3       		.byte	0xf3
 5069 04d0 01       		.uleb128 0x1
 5070 04d1 51       		.byte	0x51
 5071 04d2 9F       		.byte	0x9f
 5072 04d3 00000000 		.4byte	0
 5073 04d7 00000000 		.4byte	0
 5074              	.LLST36:
 5075 04db 00000000 		.4byte	.LVL120
 5076 04df 06000000 		.4byte	.LVL121
 5077 04e3 0100     		.2byte	0x1
 5078 04e5 50       		.byte	0x50
 5079 04e6 06000000 		.4byte	.LVL121
 5080 04ea 3E000000 		.4byte	.LVL129
 5081 04ee 0100     		.2byte	0x1
 5082 04f0 54       		.byte	0x54
 5083 04f1 3E000000 		.4byte	.LVL129
 5084 04f5 40000000 		.4byte	.LFE18
 5085 04f9 0400     		.2byte	0x4
 5086 04fb F3       		.byte	0xf3
 5087 04fc 01       		.uleb128 0x1
 5088 04fd 50       		.byte	0x50
 5089 04fe 9F       		.byte	0x9f
 5090 04ff 00000000 		.4byte	0
 5091 0503 00000000 		.4byte	0
 5092              	.LLST37:
 5093 0507 06000000 		.4byte	.LVL121
 5094 050b 17000000 		.4byte	.LVL123-1
 5095 050f 0100     		.2byte	0x1
 5096 0511 50       		.byte	0x50
 5097 0512 00000000 		.4byte	0
 5098 0516 00000000 		.4byte	0
 5099              	.LLST38:
 5100 051a 1C000000 		.4byte	.LVL124
 5101 051e 22000000 		.4byte	.LVL125
 5102 0522 0100     		.2byte	0x1
 5103 0524 53       		.byte	0x53
 5104 0525 24000000 		.4byte	.LVL126
 5105 0529 2A000000 		.4byte	.LVL127
 5106 052d 0100     		.2byte	0x1
 5107 052f 52       		.byte	0x52
 5108 0530 2A000000 		.4byte	.LVL127
 5109 0534 2F000000 		.4byte	.LVL128-1
 5110 0538 0100     		.2byte	0x1
 5111 053a 53       		.byte	0x53
 5112 053b 00000000 		.4byte	0
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 141


 5113 053f 00000000 		.4byte	0
 5114              	.LLST39:
 5115 0543 08000000 		.4byte	.LVL122
 5116 0547 3E000000 		.4byte	.LVL130
 5117 054b 0100     		.2byte	0x1
 5118 054d 55       		.byte	0x55
 5119 054e 00000000 		.4byte	0
 5120 0552 00000000 		.4byte	0
 5121              	.LLST40:
 5122 0556 18000000 		.4byte	.LVL123
 5123 055a 2F000000 		.4byte	.LVL128-1
 5124 055e 0100     		.2byte	0x1
 5125 0560 50       		.byte	0x50
 5126 0561 00000000 		.4byte	0
 5127 0565 00000000 		.4byte	0
 5128              	.LLST41:
 5129 0569 00000000 		.4byte	.LVL132
 5130 056d 10000000 		.4byte	.LVL134
 5131 0571 0100     		.2byte	0x1
 5132 0573 50       		.byte	0x50
 5133 0574 10000000 		.4byte	.LVL134
 5134 0578 58000000 		.4byte	.LFE10
 5135 057c 0400     		.2byte	0x4
 5136 057e F3       		.byte	0xf3
 5137 057f 01       		.uleb128 0x1
 5138 0580 50       		.byte	0x50
 5139 0581 9F       		.byte	0x9f
 5140 0582 00000000 		.4byte	0
 5141 0586 00000000 		.4byte	0
 5142              	.LLST42:
 5143 058a 0E000000 		.4byte	.LVL133
 5144 058e 44000000 		.4byte	.LVL139
 5145 0592 0100     		.2byte	0x1
 5146 0594 55       		.byte	0x55
 5147 0595 44000000 		.4byte	.LVL139
 5148 0599 44000000 		.4byte	.LVL140
 5149 059d 0B00     		.2byte	0xb
 5150 059f 77       		.byte	0x77
 5151 05a0 00       		.sleb128 0
 5152 05a1 F3       		.byte	0xf3
 5153 05a2 01       		.uleb128 0x1
 5154 05a3 50       		.byte	0x50
 5155 05a4 1E       		.byte	0x1e
 5156 05a5 76       		.byte	0x76
 5157 05a6 00       		.sleb128 0
 5158 05a7 22       		.byte	0x22
 5159 05a8 23       		.byte	0x23
 5160 05a9 04       		.uleb128 0x4
 5161 05aa 00000000 		.4byte	0
 5162 05ae 00000000 		.4byte	0
 5163              	.LLST43:
 5164 05b2 00000000 		.4byte	.LVL142
 5165 05b6 27000000 		.4byte	.LVL145-1
 5166 05ba 0100     		.2byte	0x1
 5167 05bc 50       		.byte	0x50
 5168 05bd 27000000 		.4byte	.LVL145-1
 5169 05c1 6C000000 		.4byte	.LFE11
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 142


 5170 05c5 0400     		.2byte	0x4
 5171 05c7 F3       		.byte	0xf3
 5172 05c8 01       		.uleb128 0x1
 5173 05c9 50       		.byte	0x50
 5174 05ca 9F       		.byte	0x9f
 5175 05cb 00000000 		.4byte	0
 5176 05cf 00000000 		.4byte	0
 5177              	.LLST44:
 5178 05d3 00000000 		.4byte	.LVL142
 5179 05d7 0E000000 		.4byte	.LVL144
 5180 05db 0100     		.2byte	0x1
 5181 05dd 51       		.byte	0x51
 5182 05de 0E000000 		.4byte	.LVL144
 5183 05e2 6C000000 		.4byte	.LFE11
 5184 05e6 0400     		.2byte	0x4
 5185 05e8 F3       		.byte	0xf3
 5186 05e9 01       		.uleb128 0x1
 5187 05ea 51       		.byte	0x51
 5188 05eb 9F       		.byte	0x9f
 5189 05ec 00000000 		.4byte	0
 5190 05f0 00000000 		.4byte	0
 5191              	.LLST45:
 5192 05f4 0C000000 		.4byte	.LVL143
 5193 05f8 52000000 		.4byte	.LVL149
 5194 05fc 0100     		.2byte	0x1
 5195 05fe 55       		.byte	0x55
 5196 05ff 00000000 		.4byte	0
 5197 0603 00000000 		.4byte	0
 5198              	.LLST46:
 5199 0607 00000000 		.4byte	.LVL150
 5200 060b 06000000 		.4byte	.LVL151
 5201 060f 0100     		.2byte	0x1
 5202 0611 50       		.byte	0x50
 5203 0612 06000000 		.4byte	.LVL151
 5204 0616 24000000 		.4byte	.LFE16
 5205 061a 0400     		.2byte	0x4
 5206 061c F3       		.byte	0xf3
 5207 061d 01       		.uleb128 0x1
 5208 061e 50       		.byte	0x50
 5209 061f 9F       		.byte	0x9f
 5210 0620 00000000 		.4byte	0
 5211 0624 00000000 		.4byte	0
 5212              	.LLST47:
 5213 0628 00000000 		.4byte	.LVL150
 5214 062c 0E000000 		.4byte	.LVL152
 5215 0630 0100     		.2byte	0x1
 5216 0632 51       		.byte	0x51
 5217 0633 0E000000 		.4byte	.LVL152
 5218 0637 24000000 		.4byte	.LFE16
 5219 063b 0400     		.2byte	0x4
 5220 063d F3       		.byte	0xf3
 5221 063e 01       		.uleb128 0x1
 5222 063f 51       		.byte	0x51
 5223 0640 9F       		.byte	0x9f
 5224 0641 00000000 		.4byte	0
 5225 0645 00000000 		.4byte	0
 5226              	.LLST48:
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 143


 5227 0649 00000000 		.4byte	.LVL154
 5228 064d 24000000 		.4byte	.LVL160
 5229 0651 0100     		.2byte	0x1
 5230 0653 50       		.byte	0x50
 5231 0654 24000000 		.4byte	.LVL160
 5232 0658 C6000000 		.4byte	.LVL177
 5233 065c 0100     		.2byte	0x1
 5234 065e 57       		.byte	0x57
 5235 065f C6000000 		.4byte	.LVL177
 5236 0663 EC000000 		.4byte	.LFE22
 5237 0667 0400     		.2byte	0x4
 5238 0669 F3       		.byte	0xf3
 5239 066a 01       		.uleb128 0x1
 5240 066b 50       		.byte	0x50
 5241 066c 9F       		.byte	0x9f
 5242 066d 00000000 		.4byte	0
 5243 0671 00000000 		.4byte	0
 5244              	.LLST49:
 5245 0675 00000000 		.4byte	.LVL154
 5246 0679 14000000 		.4byte	.LVL157
 5247 067d 0100     		.2byte	0x1
 5248 067f 51       		.byte	0x51
 5249 0680 14000000 		.4byte	.LVL157
 5250 0684 C6000000 		.4byte	.LVL176
 5251 0688 0100     		.2byte	0x1
 5252 068a 56       		.byte	0x56
 5253 068b C6000000 		.4byte	.LVL176
 5254 068f EC000000 		.4byte	.LFE22
 5255 0693 0400     		.2byte	0x4
 5256 0695 F3       		.byte	0xf3
 5257 0696 01       		.uleb128 0x1
 5258 0697 51       		.byte	0x51
 5259 0698 9F       		.byte	0x9f
 5260 0699 00000000 		.4byte	0
 5261 069d 00000000 		.4byte	0
 5262              	.LLST50:
 5263 06a1 00000000 		.4byte	.LVL154
 5264 06a5 10000000 		.4byte	.LVL156
 5265 06a9 0100     		.2byte	0x1
 5266 06ab 52       		.byte	0x52
 5267 06ac 10000000 		.4byte	.LVL156
 5268 06b0 C6000000 		.4byte	.LVL178
 5269 06b4 0100     		.2byte	0x1
 5270 06b6 58       		.byte	0x58
 5271 06b7 C6000000 		.4byte	.LVL178
 5272 06bb EC000000 		.4byte	.LFE22
 5273 06bf 0400     		.2byte	0x4
 5274 06c1 F3       		.byte	0xf3
 5275 06c2 01       		.uleb128 0x1
 5276 06c3 52       		.byte	0x52
 5277 06c4 9F       		.byte	0x9f
 5278 06c5 00000000 		.4byte	0
 5279 06c9 00000000 		.4byte	0
 5280              	.LLST51:
 5281 06cd 0E000000 		.4byte	.LVL155
 5282 06d1 38000000 		.4byte	.LVL163
 5283 06d5 0300     		.2byte	0x3
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 144


 5284 06d7 08       		.byte	0x8
 5285 06d8 80       		.byte	0x80
 5286 06d9 9F       		.byte	0x9f
 5287 06da 38000000 		.4byte	.LVL163
 5288 06de C6000000 		.4byte	.LVL175
 5289 06e2 0100     		.2byte	0x1
 5290 06e4 55       		.byte	0x55
 5291 06e5 00000000 		.4byte	0
 5292 06e9 00000000 		.4byte	0
 5293              	.LLST52:
 5294 06ed 54000000 		.4byte	.LVL166
 5295 06f1 5A000000 		.4byte	.LVL167
 5296 06f5 0400     		.2byte	0x4
 5297 06f7 0A       		.byte	0xa
 5298 06f8 8070     		.2byte	0x7080
 5299 06fa 9F       		.byte	0x9f
 5300 06fb 5A000000 		.4byte	.LVL167
 5301 06ff 6A000000 		.4byte	.LVL169
 5302 0703 0100     		.2byte	0x1
 5303 0705 53       		.byte	0x53
 5304 0706 00000000 		.4byte	0
 5305 070a 00000000 		.4byte	0
 5306              	.LLST53:
 5307 070e 0E000000 		.4byte	.LVL155
 5308 0712 38000000 		.4byte	.LVL163
 5309 0716 0200     		.2byte	0x2
 5310 0718 30       		.byte	0x30
 5311 0719 9F       		.byte	0x9f
 5312 071a 38000000 		.4byte	.LVL163
 5313 071e C6000000 		.4byte	.LVL174
 5314 0722 0100     		.2byte	0x1
 5315 0724 54       		.byte	0x54
 5316 0725 00000000 		.4byte	0
 5317 0729 00000000 		.4byte	0
 5318              	.LLST54:
 5319 072d 1E000000 		.4byte	.LVL158
 5320 0731 20000000 		.4byte	.LVL159
 5321 0735 0100     		.2byte	0x1
 5322 0737 53       		.byte	0x53
 5323 0738 20000000 		.4byte	.LVL159
 5324 073c EC000000 		.4byte	.LFE22
 5325 0740 0200     		.2byte	0x2
 5326 0742 91       		.byte	0x91
 5327 0743 64       		.sleb128 -28
 5328 0744 00000000 		.4byte	0
 5329 0748 00000000 		.4byte	0
 5330              	.LLST55:
 5331 074c 00000000 		.4byte	.LVL179
 5332 0750 20000000 		.4byte	.LVL182
 5333 0754 0100     		.2byte	0x1
 5334 0756 50       		.byte	0x50
 5335 0757 20000000 		.4byte	.LVL182
 5336 075b F0000000 		.4byte	.LVL197
 5337 075f 0100     		.2byte	0x1
 5338 0761 54       		.byte	0x54
 5339 0762 F0000000 		.4byte	.LVL197
 5340 0766 10010000 		.4byte	.LFE23
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 145


 5341 076a 0400     		.2byte	0x4
 5342 076c F3       		.byte	0xf3
 5343 076d 01       		.uleb128 0x1
 5344 076e 50       		.byte	0x50
 5345 076f 9F       		.byte	0x9f
 5346 0770 00000000 		.4byte	0
 5347 0774 00000000 		.4byte	0
 5348              	.LLST56:
 5349 0778 00000000 		.4byte	.LVL179
 5350 077c 28000000 		.4byte	.LVL185
 5351 0780 0100     		.2byte	0x1
 5352 0782 51       		.byte	0x51
 5353 0783 28000000 		.4byte	.LVL185
 5354 0787 F0000000 		.4byte	.LVL200
 5355 078b 0100     		.2byte	0x1
 5356 078d 59       		.byte	0x59
 5357 078e F0000000 		.4byte	.LVL200
 5358 0792 10010000 		.4byte	.LFE23
 5359 0796 0400     		.2byte	0x4
 5360 0798 F3       		.byte	0xf3
 5361 0799 01       		.uleb128 0x1
 5362 079a 51       		.byte	0x51
 5363 079b 9F       		.byte	0x9f
 5364 079c 00000000 		.4byte	0
 5365 07a0 00000000 		.4byte	0
 5366              	.LLST57:
 5367 07a4 24000000 		.4byte	.LVL183
 5368 07a8 26000000 		.4byte	.LVL184
 5369 07ac 0100     		.2byte	0x1
 5370 07ae 50       		.byte	0x50
 5371 07af 26000000 		.4byte	.LVL184
 5372 07b3 2B000000 		.4byte	.LVL186-1
 5373 07b7 0800     		.2byte	0x8
 5374 07b9 75       		.byte	0x75
 5375 07ba 00       		.sleb128 0
 5376 07bb 73       		.byte	0x73
 5377 07bc 00       		.sleb128 0
 5378 07bd 24       		.byte	0x24
 5379 07be 31       		.byte	0x31
 5380 07bf 1C       		.byte	0x1c
 5381 07c0 9F       		.byte	0x9f
 5382 07c1 2E000000 		.4byte	.LVL187
 5383 07c5 36000000 		.4byte	.LVL188
 5384 07c9 0100     		.2byte	0x1
 5385 07cb 50       		.byte	0x50
 5386 07cc 36000000 		.4byte	.LVL188
 5387 07d0 10010000 		.4byte	.LFE23
 5388 07d4 0200     		.2byte	0x2
 5389 07d6 91       		.byte	0x91
 5390 07d7 5C       		.sleb128 -36
 5391 07d8 00000000 		.4byte	0
 5392 07dc 00000000 		.4byte	0
 5393              	.LLST58:
 5394 07e0 0C000000 		.4byte	.LVL180
 5395 07e4 4E000000 		.4byte	.LVL191
 5396 07e8 0200     		.2byte	0x2
 5397 07ea 30       		.byte	0x30
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 146


 5398 07eb 9F       		.byte	0x9f
 5399 07ec 4E000000 		.4byte	.LVL191
 5400 07f0 F0000000 		.4byte	.LVL198
 5401 07f4 0100     		.2byte	0x1
 5402 07f6 55       		.byte	0x55
 5403 07f7 F0000000 		.4byte	.LVL198
 5404 07fb 10010000 		.4byte	.LFE23
 5405 07ff 0100     		.2byte	0x1
 5406 0801 50       		.byte	0x50
 5407 0802 00000000 		.4byte	0
 5408 0806 00000000 		.4byte	0
 5409              	.LLST59:
 5410 080a 16000000 		.4byte	.LVL181
 5411 080e F0000000 		.4byte	.LVL199
 5412 0812 0100     		.2byte	0x1
 5413 0814 57       		.byte	0x57
 5414 0815 00000000 		.4byte	0
 5415 0819 00000000 		.4byte	0
 5416              	.LLST60:
 5417 081d 3E000000 		.4byte	.LVL190
 5418 0821 8A000000 		.4byte	.LVL195
 5419 0825 0100     		.2byte	0x1
 5420 0827 56       		.byte	0x56
 5421 0828 8A000000 		.4byte	.LVL195
 5422 082c F0000000 		.4byte	.LVL199
 5423 0830 0300     		.2byte	0x3
 5424 0832 77       		.byte	0x77
 5425 0833 09       		.sleb128 9
 5426 0834 9F       		.byte	0x9f
 5427 0835 00000000 		.4byte	0
 5428 0839 00000000 		.4byte	0
 5429              		.section	.debug_aranges,"",%progbits
 5430 0000 CC000000 		.4byte	0xcc
 5431 0004 0200     		.2byte	0x2
 5432 0006 00000000 		.4byte	.Ldebug_info0
 5433 000a 04       		.byte	0x4
 5434 000b 00       		.byte	0
 5435 000c 0000     		.2byte	0
 5436 000e 0000     		.2byte	0
 5437 0010 00000000 		.4byte	.LFB1
 5438 0014 10000000 		.4byte	.LFE1-.LFB1
 5439 0018 00000000 		.4byte	.LFB2
 5440 001c 50000000 		.4byte	.LFE2-.LFB2
 5441 0020 00000000 		.4byte	.LFB3
 5442 0024 1C000000 		.4byte	.LFE3-.LFB3
 5443 0028 00000000 		.4byte	.LFB19
 5444 002c 2C000000 		.4byte	.LFE19-.LFB19
 5445 0030 00000000 		.4byte	.LFB20
 5446 0034 30000000 		.4byte	.LFE20-.LFB20
 5447 0038 00000000 		.4byte	.LFB21
 5448 003c 42000000 		.4byte	.LFE21-.LFB21
 5449 0040 00000000 		.4byte	.LFB4
 5450 0044 14010000 		.4byte	.LFE4-.LFB4
 5451 0048 00000000 		.4byte	.LFB6
 5452 004c 4C000000 		.4byte	.LFE6-.LFB6
 5453 0050 00000000 		.4byte	.LFB7
 5454 0054 26000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 147


 5455 0058 00000000 		.4byte	.LFB8
 5456 005c 40000000 		.4byte	.LFE8-.LFB8
 5457 0060 00000000 		.4byte	.LFB9
 5458 0064 1C000000 		.4byte	.LFE9-.LFB9
 5459 0068 00000000 		.4byte	.LFB12
 5460 006c F4000000 		.4byte	.LFE12-.LFB12
 5461 0070 00000000 		.4byte	.LFB13
 5462 0074 20000000 		.4byte	.LFE13-.LFB13
 5463 0078 00000000 		.4byte	.LFB17
 5464 007c 34000000 		.4byte	.LFE17-.LFB17
 5465 0080 00000000 		.4byte	.LFB14
 5466 0084 70000000 		.4byte	.LFE14-.LFB14
 5467 0088 00000000 		.4byte	.LFB15
 5468 008c 24000000 		.4byte	.LFE15-.LFB15
 5469 0090 00000000 		.4byte	.LFB18
 5470 0094 40000000 		.4byte	.LFE18-.LFB18
 5471 0098 00000000 		.4byte	.LFB5
 5472 009c 24000000 		.4byte	.LFE5-.LFB5
 5473 00a0 00000000 		.4byte	.LFB10
 5474 00a4 58000000 		.4byte	.LFE10-.LFB10
 5475 00a8 00000000 		.4byte	.LFB11
 5476 00ac 6C000000 		.4byte	.LFE11-.LFB11
 5477 00b0 00000000 		.4byte	.LFB16
 5478 00b4 24000000 		.4byte	.LFE16-.LFB16
 5479 00b8 00000000 		.4byte	.LFB22
 5480 00bc EC000000 		.4byte	.LFE22-.LFB22
 5481 00c0 00000000 		.4byte	.LFB23
 5482 00c4 10010000 		.4byte	.LFE23-.LFB23
 5483 00c8 00000000 		.4byte	0
 5484 00cc 00000000 		.4byte	0
 5485              		.section	.debug_ranges,"",%progbits
 5486              	.Ldebug_ranges0:
 5487 0000 00000000 		.4byte	.LFB1
 5488 0004 10000000 		.4byte	.LFE1
 5489 0008 00000000 		.4byte	.LFB2
 5490 000c 50000000 		.4byte	.LFE2
 5491 0010 00000000 		.4byte	.LFB3
 5492 0014 1C000000 		.4byte	.LFE3
 5493 0018 00000000 		.4byte	.LFB19
 5494 001c 2C000000 		.4byte	.LFE19
 5495 0020 00000000 		.4byte	.LFB20
 5496 0024 30000000 		.4byte	.LFE20
 5497 0028 00000000 		.4byte	.LFB21
 5498 002c 42000000 		.4byte	.LFE21
 5499 0030 00000000 		.4byte	.LFB4
 5500 0034 14010000 		.4byte	.LFE4
 5501 0038 00000000 		.4byte	.LFB6
 5502 003c 4C000000 		.4byte	.LFE6
 5503 0040 00000000 		.4byte	.LFB7
 5504 0044 26000000 		.4byte	.LFE7
 5505 0048 00000000 		.4byte	.LFB8
 5506 004c 40000000 		.4byte	.LFE8
 5507 0050 00000000 		.4byte	.LFB9
 5508 0054 1C000000 		.4byte	.LFE9
 5509 0058 00000000 		.4byte	.LFB12
 5510 005c F4000000 		.4byte	.LFE12
 5511 0060 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 148


 5512 0064 20000000 		.4byte	.LFE13
 5513 0068 00000000 		.4byte	.LFB17
 5514 006c 34000000 		.4byte	.LFE17
 5515 0070 00000000 		.4byte	.LFB14
 5516 0074 70000000 		.4byte	.LFE14
 5517 0078 00000000 		.4byte	.LFB15
 5518 007c 24000000 		.4byte	.LFE15
 5519 0080 00000000 		.4byte	.LFB18
 5520 0084 40000000 		.4byte	.LFE18
 5521 0088 00000000 		.4byte	.LFB5
 5522 008c 24000000 		.4byte	.LFE5
 5523 0090 00000000 		.4byte	.LFB10
 5524 0094 58000000 		.4byte	.LFE10
 5525 0098 00000000 		.4byte	.LFB11
 5526 009c 6C000000 		.4byte	.LFE11
 5527 00a0 00000000 		.4byte	.LFB16
 5528 00a4 24000000 		.4byte	.LFE16
 5529 00a8 00000000 		.4byte	.LFB22
 5530 00ac EC000000 		.4byte	.LFE22
 5531 00b0 00000000 		.4byte	.LFB23
 5532 00b4 10010000 		.4byte	.LFE23
 5533 00b8 00000000 		.4byte	0
 5534 00bc 00000000 		.4byte	0
 5535              		.section	.debug_line,"",%progbits
 5536              	.Ldebug_line0:
 5537 0000 F4030000 		.section	.debug_str,"MS",%progbits,1
 5537      0200D600 
 5537      00000201 
 5537      FB0E0D00 
 5537      01010101 
 5538              	.LASF126:
 5539 0000 69646163 		.ascii	"idacBRegValue\000"
 5539      42526567 
 5539      56616C75 
 5539      6500
 5540              	.LASF114:
 5541 000e 43617053 		.ascii	"CapSense_SsCSDRestoreIdacMode\000"
 5541      656E7365 
 5541      5F537343 
 5541      53445265 
 5541      73746F72 
 5542              	.LASF137:
 5543 002c 736E7341 		.ascii	"snsAddrPtr\000"
 5543      64647250 
 5543      747200
 5544              	.LASF130:
 5545 0037 43617053 		.ascii	"CapSense_SsCSDCalculateScanDuration\000"
 5545      656E7365 
 5545      5F537343 
 5545      53444361 
 5545      6C63756C 
 5546              	.LASF171:
 5547 005b 43617053 		.ascii	"CapSense_BistDischargeExtCapacitors\000"
 5547      656E7365 
 5547      5F426973 
 5547      74446973 
 5547      63686172 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 149


 5548              	.LASF162:
 5549 007f 43617053 		.ascii	"CapSense_widgetIndex\000"
 5549      656E7365 
 5549      5F776964 
 5549      67657449 
 5549      6E646578 
 5550              	.LASF74:
 5551 0094 736E7254 		.ascii	"snrTestWidgetId\000"
 5551      65737457 
 5551      69646765 
 5551      74496400 
 5552              	.LASF27:
 5553 00a4 43617053 		.ascii	"CapSense_UNDEFINED_E\000"
 5553      656E7365 
 5553      5F554E44 
 5553      4546494E 
 5553      45445F45 
 5554              	.LASF8:
 5555 00b9 756E7369 		.ascii	"unsigned int\000"
 5555      676E6564 
 5555      20696E74 
 5555      00
 5556              	.LASF64:
 5557 00c6 7363616E 		.ascii	"scanCounter\000"
 5557      436F756E 
 5557      74657200 
 5558              	.LASF62:
 5559 00d2 6877436C 		.ascii	"hwClock\000"
 5559      6F636B00 
 5560              	.LASF124:
 5561 00da 696E7465 		.ascii	"interruptState\000"
 5561      72727570 
 5561      74537461 
 5561      746500
 5562              	.LASF184:
 5563 00e9 43617053 		.ascii	"CapSense_SsCSDConfigIDACs\000"
 5563      656E7365 
 5563      5F537343 
 5563      5344436F 
 5563      6E666967 
 5564              	.LASF140:
 5565 0103 70696E48 		.ascii	"pinHSIOMShift\000"
 5565      53494F4D 
 5565      53686966 
 5565      7400
 5566              	.LASF159:
 5567 0111 43617053 		.ascii	"CapSense_eleCsdDisconnectFlag\000"
 5567      656E7365 
 5567      5F656C65 
 5567      43736444 
 5567      6973636F 
 5568              	.LASF177:
 5569 012f 4379496E 		.ascii	"CyIntDisable\000"
 5569      74446973 
 5569      61626C65 
 5569      00
 5570              	.LASF172:
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 150


 5571 013c 43617053 		.ascii	"CapSense_SsSetModClkClockDivider\000"
 5571      656E7365 
 5571      5F537353 
 5571      65744D6F 
 5571      64436C6B 
 5572              	.LASF139:
 5573 015d 70696E4D 		.ascii	"pinModeShift\000"
 5573      6F646553 
 5573      68696674 
 5573      00
 5574              	.LASF52:
 5575 016a 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 5575      656E7365 
 5575      5F52414D 
 5575      5F57445F 
 5575      4C495354 
 5576              	.LASF103:
 5577 0186 69697246 		.ascii	"iirFilterCoeff\000"
 5577      696C7465 
 5577      72436F65 
 5577      666600
 5578              	.LASF144:
 5579 0195 73656E73 		.ascii	"sensorId\000"
 5579      6F724964 
 5579      00
 5580              	.LASF161:
 5581 019e 43617053 		.ascii	"CapSense_dsFlash\000"
 5581      656E7365 
 5581      5F647346 
 5581      6C617368 
 5581      00
 5582              	.LASF115:
 5583 01af 70747257 		.ascii	"ptrWdgt\000"
 5583      64677400 
 5584              	.LASF142:
 5585 01b7 43617053 		.ascii	"CapSense_SsCSDConnectSensorExt\000"
 5585      656E7365 
 5585      5F537343 
 5585      5344436F 
 5585      6E6E6563 
 5586              	.LASF12:
 5587 01d6 666C6F61 		.ascii	"float\000"
 5587      7400
 5588              	.LASF131:
 5589 01dc 43617053 		.ascii	"CapSense_SsCSDTriggerScan\000"
 5589      656E7365 
 5589      5F537343 
 5589      53445472 
 5589      69676765 
 5590              	.LASF87:
 5591 01f6 73686966 		.ascii	"shift\000"
 5591      7400
 5592              	.LASF170:
 5593 01fc 43617053 		.ascii	"CapSense_SsClearCSDSensors\000"
 5593      656E7365 
 5593      5F537343 
 5593      6C656172 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 151


 5593      43534453 
 5594              	.LASF181:
 5595 0217 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5595      43313120 
 5595      352E342E 
 5595      31203230 
 5595      31363036 
 5596 024a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 5596      20726576 
 5596      6973696F 
 5596      6E203233 
 5596      37373135 
 5597 027d 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 5597      67202D66 
 5597      66756E63 
 5597      74696F6E 
 5597      2D736563 
 5598              	.LASF127:
 5599 02a9 736E7343 		.ascii	"snsClkSrc\000"
 5599      6C6B5372 
 5599      6300
 5600              	.LASF133:
 5601 02b3 77617463 		.ascii	"watchdogCounter\000"
 5601      68646F67 
 5601      436F756E 
 5601      74657200 
 5602              	.LASF147:
 5603 02c3 43617053 		.ascii	"CapSense_CSDSetupWidget\000"
 5603      656E7365 
 5603      5F435344 
 5603      53657475 
 5603      70576964 
 5604              	.LASF178:
 5605 02db 43794465 		.ascii	"CyDelayUs\000"
 5605      6C617955 
 5605      7300
 5606              	.LASF73:
 5607 02e5 736E734C 		.ascii	"snsList\000"
 5607      69737400 
 5608              	.LASF7:
 5609 02ed 6C6F6E67 		.ascii	"long long unsigned int\000"
 5609      206C6F6E 
 5609      6720756E 
 5609      7369676E 
 5609      65642069 
 5610              	.LASF163:
 5611 0304 43617053 		.ascii	"CapSense_sensorIndex\000"
 5611      656E7365 
 5611      5F73656E 
 5611      736F7249 
 5611      6E646578 
 5612              	.LASF88:
 5613 0319 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 5613      656E7365 
 5613      5F464C41 
 5613      53485F49 
 5613      4F5F5354 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 152


 5614              	.LASF75:
 5615 0332 736E7254 		.ascii	"snrTestSensorId\000"
 5615      65737453 
 5615      656E736F 
 5615      72496400 
 5616              	.LASF102:
 5617 0342 70747232 		.ascii	"ptr2NoiseEnvlp\000"
 5617      4E6F6973 
 5617      65456E76 
 5617      6C7000
 5618              	.LASF154:
 5619 0351 63616C4D 		.ascii	"calMask\000"
 5619      61736B00 
 5620              	.LASF96:
 5621 0359 77646774 		.ascii	"wdgtType\000"
 5621      54797065 
 5621      00
 5622              	.LASF148:
 5623 0362 43617053 		.ascii	"CapSense_CSDSetupWidgetExt\000"
 5623      656E7365 
 5623      5F435344 
 5623      53657475 
 5623      70576964 
 5624              	.LASF132:
 5625 037d 43617053 		.ascii	"CapSense_SsCSDCmodPrecharge\000"
 5625      656E7365 
 5625      5F537343 
 5625      5344436D 
 5625      6F645072 
 5626              	.LASF138:
 5627 0399 6E657752 		.ascii	"newRegisterValue\000"
 5627      65676973 
 5627      74657256 
 5627      616C7565 
 5627      00
 5628              	.LASF70:
 5629 03aa 6D6F6443 		.ascii	"modCsdClk\000"
 5629      7364436C 
 5629      6B00
 5630              	.LASF58:
 5631 03b4 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 5631      656E7365 
 5631      5F52414D 
 5631      5F534E53 
 5631      5F535452 
 5632              	.LASF158:
 5633 03cc 74617267 		.ascii	"target\000"
 5633      657400
 5634              	.LASF81:
 5635 03d3 64725074 		.ascii	"drPtr\000"
 5635      7200
 5636              	.LASF43:
 5637 03d9 73696750 		.ascii	"sigPFC\000"
 5637      464300
 5638              	.LASF36:
 5639 03e0 68797374 		.ascii	"hysteresis\000"
 5639      65726573 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 153


 5639      697300
 5640              	.LASF116:
 5641 03eb 7261774C 		.ascii	"rawLevel\000"
 5641      6576656C 
 5641      00
 5642              	.LASF104:
 5643 03f4 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 5643      656E7365 
 5643      5F464C41 
 5643      53485F57 
 5643      445F5354 
 5644              	.LASF38:
 5645 040d 6C6F7742 		.ascii	"lowBslnRst\000"
 5645      736C6E52 
 5645      737400
 5646              	.LASF49:
 5647 0418 62746E30 		.ascii	"btn0\000"
 5647      00
 5648              	.LASF50:
 5649 041d 62746E31 		.ascii	"btn1\000"
 5649      00
 5650              	.LASF51:
 5651 0422 62746E32 		.ascii	"btn2\000"
 5651      00
 5652              	.LASF95:
 5653 0427 746F7461 		.ascii	"totalNumSns\000"
 5653      6C4E756D 
 5653      536E7300 
 5654              	.LASF149:
 5655 0433 43617053 		.ascii	"CapSense_SsCSDDisconnectSnsExt\000"
 5655      656E7365 
 5655      5F537343 
 5655      53444469 
 5655      73636F6E 
 5656              	.LASF26:
 5657 0452 534D4152 		.ascii	"SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT\000"
 5657      5453454E 
 5657      53455F43 
 5657      53445F4E 
 5657      4F495345 
 5658              	.LASF34:
 5659 0477 6E6F6973 		.ascii	"noiseTh\000"
 5659      65546800 
 5660              	.LASF175:
 5661 047f 4379496E 		.ascii	"CyIntClearPending\000"
 5661      74436C65 
 5661      61725065 
 5661      6E64696E 
 5661      6700
 5662              	.LASF14:
 5663 0491 63686172 		.ascii	"char\000"
 5663      00
 5664              	.LASF174:
 5665 0496 43794578 		.ascii	"CyExitCriticalSection\000"
 5665      69744372 
 5665      69746963 
 5665      616C5365 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 154


 5665      6374696F 
 5666              	.LASF156:
 5667 04ac 43617053 		.ascii	"CapSense_SsCSDGetNumberOfConversions\000"
 5667      656E7365 
 5667      5F537343 
 5667      53444765 
 5667      744E756D 
 5668              	.LASF85:
 5669 04d1 6873696F 		.ascii	"hsiomShift\000"
 5669      6D536869 
 5669      667400
 5670              	.LASF10:
 5671 04dc 75696E74 		.ascii	"uint16\000"
 5671      313600
 5672              	.LASF128:
 5673 04e3 636F6E76 		.ascii	"conversionsNum\000"
 5673      65727369 
 5673      6F6E734E 
 5673      756D00
 5674              	.LASF32:
 5675 04f2 7265736F 		.ascii	"resolution\000"
 5675      6C757469 
 5675      6F6E00
 5676              	.LASF65:
 5677 04fd 73746174 		.ascii	"status\000"
 5677      757300
 5678              	.LASF18:
 5679 0504 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 5679      656E7365 
 5679      5F4C4F57 
 5679      5F42534C 
 5679      4E5F5253 
 5680              	.LASF57:
 5681 051f 69646163 		.ascii	"idacComp\000"
 5681      436F6D70 
 5681      00
 5682              	.LASF80:
 5683 0528 70635074 		.ascii	"pcPtr\000"
 5683      7200
 5684              	.LASF6:
 5685 052e 6C6F6E67 		.ascii	"long long int\000"
 5685      206C6F6E 
 5685      6720696E 
 5685      7400
 5686              	.LASF98:
 5687 053c 6E756D43 		.ascii	"numCols\000"
 5687      6F6C7300 
 5688              	.LASF122:
 5689 0544 43617053 		.ascii	"CapSense_SsCSDInitialize\000"
 5689      656E7365 
 5689      5F537343 
 5689      5344496E 
 5689      69746961 
 5690              	.LASF37:
 5691 055d 6F6E4465 		.ascii	"onDebounce\000"
 5691      626F756E 
 5691      636500
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 155


 5692              	.LASF118:
 5693 0568 63616C69 		.ascii	"calibrateStatus\000"
 5693      62726174 
 5693      65537461 
 5693      74757300 
 5694              	.LASF72:
 5695 0578 77646774 		.ascii	"wdgtList\000"
 5695      4C697374 
 5695      00
 5696              	.LASF106:
 5697 0581 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 5697      656E7365 
 5697      5F464C41 
 5697      53485F53 
 5697      54525543 
 5698              	.LASF160:
 5699 0597 43617053 		.ascii	"CapSense_dsRam\000"
 5699      656E7365 
 5699      5F647352 
 5699      616D00
 5700              	.LASF77:
 5701 05a6 736E7254 		.ascii	"snrTestRawCount\000"
 5701      65737452 
 5701      6177436F 
 5701      756E7400 
 5702              	.LASF167:
 5703 05b6 43617053 		.ascii	"CapSense_configCsd\000"
 5703      656E7365 
 5703      5F636F6E 
 5703      66696743 
 5703      736400
 5704              	.LASF35:
 5705 05c9 6E4E6F69 		.ascii	"nNoiseTh\000"
 5705      73655468 
 5705      00
 5706              	.LASF69:
 5707 05d2 63736430 		.ascii	"csd0Config\000"
 5707      436F6E66 
 5707      696700
 5708              	.LASF150:
 5709 05dd 43617053 		.ascii	"CapSense_SsCSDCalibrateCheck\000"
 5709      656E7365 
 5709      5F537343 
 5709      53444361 
 5709      6C696272 
 5710              	.LASF45:
 5711 05fa 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 5711      656E7365 
 5711      5F52414D 
 5711      5F57445F 
 5711      42415345 
 5712              	.LASF79:
 5713 0616 6873696F 		.ascii	"hsiomPtr\000"
 5713      6D507472 
 5713      00
 5714              	.LASF11:
 5715 061f 75696E74 		.ascii	"uint32\000"
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 156


 5715      333200
 5716              	.LASF123:
 5717 0626 43617053 		.ascii	"CapSense_SsCSDSetUpIdacs\000"
 5717      656E7365 
 5717      5F537343 
 5717      53445365 
 5717      74557049 
 5718              	.LASF92:
 5719 063f 70747232 		.ascii	"ptr2FltrHistory\000"
 5719      466C7472 
 5719      48697374 
 5719      6F727900 
 5720              	.LASF166:
 5721 064f 43617053 		.ascii	"CapSense_curSnsIOPtr\000"
 5721      656E7365 
 5721      5F637572 
 5721      536E7349 
 5721      4F507472 
 5722              	.LASF84:
 5723 0664 6D61736B 		.ascii	"mask\000"
 5723      00
 5724              	.LASF121:
 5725 0669 6D617852 		.ascii	"maxRawLevel\000"
 5725      61774C65 
 5725      76656C00 
 5726              	.LASF112:
 5727 0675 73616D70 		.ascii	"sampleClkFreqHz\000"
 5727      6C65436C 
 5727      6B467265 
 5727      71487A00 
 5728              	.LASF182:
 5729 0685 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.c\000"
 5729      72617465 
 5729      645F536F 
 5729      75726365 
 5729      5C50536F 
 5730              	.LASF31:
 5731 06b5 43617053 		.ascii	"CapSense_SENSE_METHOD_ISX_E\000"
 5731      656E7365 
 5731      5F53454E 
 5731      53455F4D 
 5731      4554484F 
 5732              	.LASF107:
 5733 06d1 6C6F6E67 		.ascii	"long double\000"
 5733      20646F75 
 5733      626C6500 
 5734              	.LASF129:
 5735 06dd 43617053 		.ascii	"CapSense_SsCSDConfigClock\000"
 5735      656E7365 
 5735      5F537343 
 5735      5344436F 
 5735      6E666967 
 5736              	.LASF16:
 5737 06f7 72656733 		.ascii	"reg32\000"
 5737      3200
 5738              	.LASF76:
 5739 06fd 736E7254 		.ascii	"snrTestScanCounter\000"
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 157


 5739      65737453 
 5739      63616E43 
 5739      6F756E74 
 5739      657200
 5740              	.LASF60:
 5741 0710 636F6E66 		.ascii	"configId\000"
 5741      69674964 
 5741      00
 5742              	.LASF91:
 5743 0719 70747232 		.ascii	"ptr2SnsRam\000"
 5743      536E7352 
 5743      616D00
 5744              	.LASF168:
 5745 0724 43617053 		.ascii	"CapSense_calibratedIdac\000"
 5745      656E7365 
 5745      5F63616C 
 5745      69627261 
 5745      74656449 
 5746              	.LASF120:
 5747 073c 6D696E52 		.ascii	"minRawLevel\000"
 5747      61774C65 
 5747      76656C00 
 5748              	.LASF68:
 5749 0748 736E7353 		.ascii	"snsStatus\000"
 5749      74617475 
 5749      7300
 5750              	.LASF41:
 5751 0752 736E7343 		.ascii	"snsClkSource\000"
 5751      6C6B536F 
 5751      75726365 
 5751      00
 5752              	.LASF117:
 5753 075f 72617744 		.ascii	"rawData\000"
 5753      61746100 
 5754              	.LASF146:
 5755 0767 43617053 		.ascii	"CapSense_SsCSDElectrodeCheck\000"
 5755      656E7365 
 5755      5F537343 
 5755      5344456C 
 5755      65637472 
 5756              	.LASF100:
 5757 0784 78526573 		.ascii	"xResolution\000"
 5757      6F6C7574 
 5757      696F6E00 
 5758              	.LASF2:
 5759 0790 73686F72 		.ascii	"short int\000"
 5759      7420696E 
 5759      7400
 5760              	.LASF78:
 5761 079a 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 5761      656E7365 
 5761      5F52414D 
 5761      5F535452 
 5761      55435400 
 5762              	.LASF145:
 5763 07ae 43617053 		.ascii	"CapSense_CSDDisconnectSns\000"
 5763      656E7365 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 158


 5763      5F435344 
 5763      44697363 
 5763      6F6E6E65 
 5764              	.LASF109:
 5765 07c8 43617053 		.ascii	"CapSense_SsCSDSetModeSnsClockDivider\000"
 5765      656E7365 
 5765      5F537343 
 5765      53445365 
 5765      744D6F64 
 5766              	.LASF4:
 5767 07ed 6C6F6E67 		.ascii	"long int\000"
 5767      20696E74 
 5767      00
 5768              	.LASF66:
 5769 07f6 77646774 		.ascii	"wdgtEnable\000"
 5769      456E6162 
 5769      6C6500
 5770              	.LASF55:
 5771 0801 64696666 		.ascii	"diff\000"
 5771      00
 5772              	.LASF134:
 5773 0806 43617053 		.ascii	"CapSense_SsCSDStartSample\000"
 5773      656E7365 
 5773      5F537343 
 5773      53445374 
 5773      61727453 
 5774              	.LASF63:
 5775 0820 74756E65 		.ascii	"tunerCmd\000"
 5775      72436D64 
 5775      00
 5776              	.LASF152:
 5777 0829 70747249 		.ascii	"ptrIdac\000"
 5777      64616300 
 5778              	.LASF29:
 5779 0831 43617053 		.ascii	"CapSense_SENSE_METHOD_CSX_E\000"
 5779      656E7365 
 5779      5F53454E 
 5779      53455F4D 
 5779      4554484F 
 5780              	.LASF82:
 5781 084d 70735074 		.ascii	"psPtr\000"
 5781      7200
 5782              	.LASF155:
 5783 0853 72617744 		.ascii	"rawData0\000"
 5783      61746130 
 5783      00
 5784              	.LASF125:
 5785 085c 69646163 		.ascii	"idacARegValue\000"
 5785      41526567 
 5785      56616C75 
 5785      6500
 5786              	.LASF157:
 5787 086a 43617053 		.ascii	"CapSense_CSDCalibrateWidget\000"
 5787      656E7365 
 5787      5F435344 
 5787      43616C69 
 5787      62726174 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 159


 5788              	.LASF169:
 5789 0886 43617053 		.ascii	"CapSense_calibratedRawcount\000"
 5789      656E7365 
 5789      5F63616C 
 5789      69627261 
 5789      74656452 
 5790              	.LASF151:
 5791 08a2 43617053 		.ascii	"CapSense_SsCSDCalibrateOneSensor\000"
 5791      656E7365 
 5791      5F537343 
 5791      53444361 
 5791      6C696272 
 5792              	.LASF42:
 5793 08c3 66696E67 		.ascii	"fingerCap\000"
 5793      65724361 
 5793      7000
 5794              	.LASF135:
 5795 08cd 43617053 		.ascii	"CapSense_CSDScanExt\000"
 5795      656E7365 
 5795      5F435344 
 5795      5363616E 
 5795      45787400 
 5796              	.LASF67:
 5797 08e1 77646774 		.ascii	"wdgtStatus\000"
 5797      53746174 
 5797      757300
 5798              	.LASF48:
 5799 08ec 43617053 		.ascii	"CapSense_RAM_WD_SLIDER_STRUCT\000"
 5799      656E7365 
 5799      5F52414D 
 5799      5F57445F 
 5799      534C4944 
 5800              	.LASF28:
 5801 090a 43617053 		.ascii	"CapSense_SENSE_METHOD_CSD_E\000"
 5801      656E7365 
 5801      5F53454E 
 5801      53455F4D 
 5801      4554484F 
 5802              	.LASF44:
 5803 0926 73697A65 		.ascii	"sizetype\000"
 5803      74797065 
 5803      00
 5804              	.LASF86:
 5805 092f 64725368 		.ascii	"drShift\000"
 5805      69667400 
 5806              	.LASF5:
 5807 0937 6C6F6E67 		.ascii	"long unsigned int\000"
 5807      20756E73 
 5807      69676E65 
 5807      6420696E 
 5807      7400
 5808              	.LASF39:
 5809 0949 69646163 		.ascii	"idacMod\000"
 5809      4D6F6400 
 5810              	.LASF179:
 5811 0951 43617053 		.ascii	"CapSense_ISR_StartEx\000"
 5811      656E7365 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 160


 5811      5F495352 
 5811      5F537461 
 5811      72744578 
 5812              	.LASF93:
 5813 0966 70747232 		.ascii	"ptr2DebounceArr\000"
 5813      4465626F 
 5813      756E6365 
 5813      41727200 
 5814              	.LASF136:
 5815 0976 43617053 		.ascii	"CapSense_CSDConnectSns\000"
 5815      656E7365 
 5815      5F435344 
 5815      436F6E6E 
 5815      65637453 
 5816              	.LASF101:
 5817 098d 7843656E 		.ascii	"xCentroidMultiplier\000"
 5817      74726F69 
 5817      644D756C 
 5817      7469706C 
 5817      69657200 
 5818              	.LASF33:
 5819 09a1 66696E67 		.ascii	"fingerTh\000"
 5819      65725468 
 5819      00
 5820              	.LASF111:
 5821 09aa 43617053 		.ascii	"CapSense_SsCSDSetSingleIdacMode\000"
 5821      656E7365 
 5821      5F537343 
 5821      53445365 
 5821      7453696E 
 5822              	.LASF54:
 5823 09ca 62736C6E 		.ascii	"bslnExt\000"
 5823      45787400 
 5824              	.LASF46:
 5825 09d2 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 5825      656E7365 
 5825      5F52414D 
 5825      5F57445F 
 5825      42555454 
 5826              	.LASF15:
 5827 09f0 63797374 		.ascii	"cystatus\000"
 5827      61747573 
 5827      00
 5828              	.LASF110:
 5829 09f9 43617053 		.ascii	"CapSense_SsCSDSetFilterDelay\000"
 5829      656E7365 
 5829      5F537343 
 5829      53445365 
 5829      7446696C 
 5830              	.LASF1:
 5831 0a16 756E7369 		.ascii	"unsigned char\000"
 5831      676E6564 
 5831      20636861 
 5831      7200
 5832              	.LASF94:
 5833 0a24 73746174 		.ascii	"staticConfig\000"
 5833      6963436F 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 161


 5833      6E666967 
 5833      00
 5834              	.LASF97:
 5835 0a31 73656E73 		.ascii	"senseMethod\000"
 5835      654D6574 
 5835      686F6400 
 5836              	.LASF71:
 5837 0a3d 6D6F6443 		.ascii	"modCsxClk\000"
 5837      7378436C 
 5837      6B00
 5838              	.LASF90:
 5839 0a47 70747232 		.ascii	"ptr2WdgtRam\000"
 5839      57646774 
 5839      52616D00 
 5840              	.LASF17:
 5841 0a53 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 5841      656E7365 
 5841      5F544852 
 5841      4553484F 
 5841      4C445F54 
 5842              	.LASF141:
 5843 0a6b 43617053 		.ascii	"CapSense_CSDScan\000"
 5843      656E7365 
 5843      5F435344 
 5843      5363616E 
 5843      00
 5844              	.LASF30:
 5845 0a7c 43617053 		.ascii	"CapSense_SENSE_METHOD_BIST_E\000"
 5845      656E7365 
 5845      5F53454E 
 5845      53455F4D 
 5845      4554484F 
 5846              	.LASF99:
 5847 0a99 6E756D52 		.ascii	"numRows\000"
 5847      6F777300 
 5848              	.LASF83:
 5849 0aa1 6873696F 		.ascii	"hsiomMask\000"
 5849      6D4D6173 
 5849      6B00
 5850              	.LASF176:
 5851 0aab 4379496E 		.ascii	"CyIntEnable\000"
 5851      74456E61 
 5851      626C6500 
 5852              	.LASF119:
 5853 0ab7 72617743 		.ascii	"rawCountsError\000"
 5853      6F756E74 
 5853      73457272 
 5853      6F7200
 5854              	.LASF40:
 5855 0ac6 736E7343 		.ascii	"snsClk\000"
 5855      6C6B00
 5856              	.LASF180:
 5857 0acd 43617053 		.ascii	"CapSense_SsSwitchSensingMode\000"
 5857      656E7365 
 5857      5F537353 
 5857      77697463 
 5857      6853656E 
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 162


 5858              	.LASF173:
 5859 0aea 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5859      74657243 
 5859      72697469 
 5859      63616C53 
 5859      65637469 
 5860              	.LASF164:
 5861 0b01 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 5861      656E7365 
 5861      5F637572 
 5861      52616D53 
 5861      6E735074 
 5862              	.LASF153:
 5863 0b17 69444143 		.ascii	"iDAC8Max\000"
 5863      384D6178 
 5863      00
 5864              	.LASF0:
 5865 0b20 7369676E 		.ascii	"signed char\000"
 5865      65642063 
 5865      68617200 
 5866              	.LASF165:
 5867 0b2c 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 5867      656E7365 
 5867      5F736361 
 5867      6E467265 
 5867      71496E64 
 5868              	.LASF53:
 5869 0b43 62736C6E 		.ascii	"bsln\000"
 5869      00
 5870              	.LASF3:
 5871 0b48 73686F72 		.ascii	"short unsigned int\000"
 5871      7420756E 
 5871      7369676E 
 5871      65642069 
 5871      6E7400
 5872              	.LASF89:
 5873 0b5b 70747232 		.ascii	"ptr2SnsFlash\000"
 5873      536E7346 
 5873      6C617368 
 5873      00
 5874              	.LASF113:
 5875 0b68 6E657752 		.ascii	"newRegValue\000"
 5875      65675661 
 5875      6C756500 
 5876              	.LASF9:
 5877 0b74 75696E74 		.ascii	"uint8\000"
 5877      3800
 5878              	.LASF13:
 5879 0b7a 646F7562 		.ascii	"double\000"
 5879      6C6500
 5880              	.LASF56:
 5881 0b81 6E656742 		.ascii	"negBslnRstCnt\000"
 5881      736C6E52 
 5881      7374436E 
 5881      7400
 5882              	.LASF19:
 5883 0b8f 70617261 		.ascii	"param0\000"
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 163


 5883      6D3000
 5884              	.LASF20:
 5885 0b96 70617261 		.ascii	"param1\000"
 5885      6D3100
 5886              	.LASF21:
 5887 0b9d 70617261 		.ascii	"param2\000"
 5887      6D3200
 5888              	.LASF22:
 5889 0ba4 70617261 		.ascii	"param3\000"
 5889      6D3300
 5890              	.LASF23:
 5891 0bab 70617261 		.ascii	"param4\000"
 5891      6D3400
 5892              	.LASF24:
 5893 0bb2 70617261 		.ascii	"param5\000"
 5893      6D3500
 5894              	.LASF25:
 5895 0bb9 70617261 		.ascii	"param6\000"
 5895      6D3600
 5896              	.LASF108:
 5897 0bc0 736E7343 		.ascii	"snsClkDivider\000"
 5897      6C6B4469 
 5897      76696465 
 5897      7200
 5898              	.LASF61:
 5899 0bce 64657669 		.ascii	"deviceId\000"
 5899      63654964 
 5899      00
 5900              	.LASF143:
 5901 0bd7 77696467 		.ascii	"widgetId\000"
 5901      65744964 
 5901      00
 5902              	.LASF47:
 5903 0be0 706F7369 		.ascii	"position\000"
 5903      74696F6E 
 5903      00
 5904              	.LASF59:
 5905 0be9 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 5905      656E7365 
 5905      5F52414D 
 5905      5F534E53 
 5905      5F4C4953 
 5906              	.LASF183:
 5907 0c06 433A5C55 		.ascii	"C:\\Users\\rpbri\\Downloads\\Lab145_19\\Lab145\\Tem"
 5907      73657273 
 5907      5C727062 
 5907      72695C44 
 5907      6F776E6C 
 5908 0c33 706C6174 		.ascii	"plate\\CE210709_CapSense_Linear_Slider_and_Buttons\\"
 5908      655C4345 
 5908      32313037 
 5908      30395F43 
 5908      61705365 
 5909 0c65 6E657720 		.ascii	"new hoep.cydsn\000"
 5909      686F6570 
 5909      2E637964 
 5909      736E00
ARM GAS  C:\Users\rpbri\AppData\Local\Temp\ccvQnAjt.s 			page 164


 5910              	.LASF105:
 5911 0c74 77646774 		.ascii	"wdgtArray\000"
 5911      41727261 
 5911      7900
 5912              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
